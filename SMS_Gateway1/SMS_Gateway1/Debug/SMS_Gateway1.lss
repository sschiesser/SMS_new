
SMS_Gateway1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000058a8  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004058a8  004058a8  000158a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     0000087c  20000000  004058b0  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000118  2000087c  0040612c  0002087c  2**2
                  ALLOC
  4 .stack        00003004  20000994  00406244  0002087c  2**0
                  ALLOC
  5 .ARM.attributes 0000002e  00000000  00000000  0002087c  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000208aa  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000bda8  00000000  00000000  00020903  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002064  00000000  00000000  0002c6ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003b09  00000000  00000000  0002e70f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000007b0  00000000  00000000  00032218  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000006b0  00000000  00000000  000329c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000176d5  00000000  00000000  00033078  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000a5fb  00000000  00000000  0004a74d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00067860  00000000  00000000  00054d48  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002100  00000000  00000000  000bc5a8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003998 	.word	0x20003998
  400004:	004007ed 	.word	0x004007ed
  400008:	004007e9 	.word	0x004007e9
  40000c:	004007e9 	.word	0x004007e9
  400010:	004007e9 	.word	0x004007e9
  400014:	004007e9 	.word	0x004007e9
  400018:	004007e9 	.word	0x004007e9
	...
  40002c:	004007e9 	.word	0x004007e9
  400030:	004007e9 	.word	0x004007e9
  400034:	00000000 	.word	0x00000000
  400038:	004007e9 	.word	0x004007e9
  40003c:	004007e9 	.word	0x004007e9
  400040:	004007e9 	.word	0x004007e9
  400044:	004007e9 	.word	0x004007e9
  400048:	004007e9 	.word	0x004007e9
  40004c:	004007e9 	.word	0x004007e9
  400050:	004007e9 	.word	0x004007e9
  400054:	004007e9 	.word	0x004007e9
  400058:	004007e9 	.word	0x004007e9
  40005c:	004007e9 	.word	0x004007e9
  400060:	004007e9 	.word	0x004007e9
  400064:	004007e9 	.word	0x004007e9
  400068:	004007e9 	.word	0x004007e9
  40006c:	004007e9 	.word	0x004007e9
  400070:	004007e9 	.word	0x004007e9
  400074:	004007e9 	.word	0x004007e9
  400078:	004007e9 	.word	0x004007e9
  40007c:	004007e9 	.word	0x004007e9
  400080:	004007e9 	.word	0x004007e9
  400084:	004007e9 	.word	0x004007e9
  400088:	004007e9 	.word	0x004007e9
  40008c:	00400c01 	.word	0x00400c01
  400090:	004007e9 	.word	0x004007e9
  400094:	00400aad 	.word	0x00400aad
  400098:	004007e9 	.word	0x004007e9
  40009c:	004007e9 	.word	0x004007e9
  4000a0:	004007e9 	.word	0x004007e9
  4000a4:	004007e9 	.word	0x004007e9
  4000a8:	004007e9 	.word	0x004007e9
  4000ac:	004007e9 	.word	0x004007e9
  4000b0:	004007e9 	.word	0x004007e9
  4000b4:	004007e9 	.word	0x004007e9
  4000b8:	004007e9 	.word	0x004007e9
  4000bc:	004007e9 	.word	0x004007e9
  4000c0:	004007e9 	.word	0x004007e9
  4000c4:	004007e9 	.word	0x004007e9
  4000c8:	004007e9 	.word	0x004007e9
  4000cc:	004007e9 	.word	0x004007e9
  4000d0:	004007e9 	.word	0x004007e9
  4000d4:	004007e9 	.word	0x004007e9
  4000d8:	004007e9 	.word	0x004007e9
  4000dc:	004007e9 	.word	0x004007e9
  4000e0:	004007e9 	.word	0x004007e9
  4000e4:	004007e9 	.word	0x004007e9
  4000e8:	004007e9 	.word	0x004007e9
  4000ec:	004007e9 	.word	0x004007e9
  4000f0:	00400a9d 	.word	0x00400a9d
  4000f4:	004007e9 	.word	0x004007e9

004000f8 <__do_global_dtors_aux>:
  4000f8:	b510      	push	{r4, lr}
  4000fa:	4c05      	ldr	r4, [pc, #20]	; (400110 <__do_global_dtors_aux+0x18>)
  4000fc:	7823      	ldrb	r3, [r4, #0]
  4000fe:	b933      	cbnz	r3, 40010e <__do_global_dtors_aux+0x16>
  400100:	4b04      	ldr	r3, [pc, #16]	; (400114 <__do_global_dtors_aux+0x1c>)
  400102:	b113      	cbz	r3, 40010a <__do_global_dtors_aux+0x12>
  400104:	4804      	ldr	r0, [pc, #16]	; (400118 <__do_global_dtors_aux+0x20>)
  400106:	f3af 8000 	nop.w
  40010a:	2301      	movs	r3, #1
  40010c:	7023      	strb	r3, [r4, #0]
  40010e:	bd10      	pop	{r4, pc}
  400110:	2000087c 	.word	0x2000087c
  400114:	00000000 	.word	0x00000000
  400118:	004058b0 	.word	0x004058b0

0040011c <frame_dummy>:
  40011c:	4b08      	ldr	r3, [pc, #32]	; (400140 <frame_dummy+0x24>)
  40011e:	b510      	push	{r4, lr}
  400120:	b11b      	cbz	r3, 40012a <frame_dummy+0xe>
  400122:	4908      	ldr	r1, [pc, #32]	; (400144 <frame_dummy+0x28>)
  400124:	4808      	ldr	r0, [pc, #32]	; (400148 <frame_dummy+0x2c>)
  400126:	f3af 8000 	nop.w
  40012a:	4808      	ldr	r0, [pc, #32]	; (40014c <frame_dummy+0x30>)
  40012c:	6803      	ldr	r3, [r0, #0]
  40012e:	b903      	cbnz	r3, 400132 <frame_dummy+0x16>
  400130:	bd10      	pop	{r4, pc}
  400132:	4b07      	ldr	r3, [pc, #28]	; (400150 <frame_dummy+0x34>)
  400134:	2b00      	cmp	r3, #0
  400136:	d0fb      	beq.n	400130 <frame_dummy+0x14>
  400138:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40013c:	4718      	bx	r3
  40013e:	bf00      	nop
  400140:	00000000 	.word	0x00000000
  400144:	20000880 	.word	0x20000880
  400148:	004058b0 	.word	0x004058b0
  40014c:	004058b0 	.word	0x004058b0
  400150:	00000000 	.word	0x00000000

00400154 <board_init>:
		ioport_set_pin_mode(pin, mode);\
		ioport_set_pin_sense_mode(pin, sense);\
	} while (0)

void board_init(void)
{
  400154:	b538      	push	{r3, r4, r5, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400156:	f44f 4400 	mov.w	r4, #32768	; 0x8000
  40015a:	4bae      	ldr	r3, [pc, #696]	; (400414 <board_init+0x2c0>)
  40015c:	605c      	str	r4, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40015e:	2009      	movs	r0, #9
  400160:	4dad      	ldr	r5, [pc, #692]	; (400418 <board_init+0x2c4>)
  400162:	47a8      	blx	r5
  400164:	200a      	movs	r0, #10
  400166:	47a8      	blx	r5
  400168:	200b      	movs	r0, #11
  40016a:	47a8      	blx	r5
  40016c:	200c      	movs	r0, #12
  40016e:	47a8      	blx	r5
  400170:	200d      	movs	r0, #13
  400172:	47a8      	blx	r5
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400174:	4ba9      	ldr	r3, [pc, #676]	; (40041c <board_init+0x2c8>)
  400176:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  40017a:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40017c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400180:	631a      	str	r2, [r3, #48]	; 0x30
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400182:	4aa7      	ldr	r2, [pc, #668]	; (400420 <board_init+0x2cc>)
  400184:	2104      	movs	r1, #4
  400186:	6151      	str	r1, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400188:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
  40018c:	6651      	str	r1, [r2, #100]	; 0x64

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  40018e:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  400192:	6551      	str	r1, [r2, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
  400194:	6211      	str	r1, [r2, #32]

	if (mode & IOPORT_MODE_DEBOUNCE) {
#if SAM3U || SAM3XA
		base->PIO_DIFSR = mask;
#else
		base->PIO_IFSCER = mask;
  400196:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  40019a:	6f10      	ldr	r0, [r2, #112]	; 0x70
  40019c:	f020 0004 	bic.w	r0, r0, #4
  4001a0:	6710      	str	r0, [r2, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4001a2:	6f50      	ldr	r0, [r2, #116]	; 0x74
  4001a4:	f020 0004 	bic.w	r0, r0, #4
  4001a8:	6750      	str	r0, [r2, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  4001aa:	f8c2 10c0 	str.w	r1, [r2, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  4001ae:	f8c2 10d4 	str.w	r1, [r2, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  4001b2:	f8c2 10b0 	str.w	r1, [r2, #176]	; 0xb0
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4001b6:	f44f 60c0 	mov.w	r0, #1536	; 0x600
  4001ba:	6610      	str	r0, [r2, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4001bc:	f8c2 0090 	str.w	r0, [r2, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4001c0:	6550      	str	r0, [r2, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4001c2:	6250      	str	r0, [r2, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4001c4:	f8c2 0080 	str.w	r0, [r2, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4001c8:	6f15      	ldr	r5, [r2, #112]	; 0x70
  4001ca:	f425 65c0 	bic.w	r5, r5, #1536	; 0x600
  4001ce:	6715      	str	r5, [r2, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4001d0:	6f55      	ldr	r5, [r2, #116]	; 0x74
  4001d2:	f425 65c0 	bic.w	r5, r5, #1536	; 0x600
  4001d6:	6755      	str	r5, [r2, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4001d8:	6050      	str	r0, [r2, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4001da:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  4001de:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4001e0:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4001e4:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4001e6:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4001e8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4001ec:	6f18      	ldr	r0, [r3, #112]	; 0x70
  4001ee:	f420 4080 	bic.w	r0, r0, #16384	; 0x4000
  4001f2:	6718      	str	r0, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4001f4:	6f58      	ldr	r0, [r3, #116]	; 0x74
  4001f6:	f420 4080 	bic.w	r0, r0, #16384	; 0x4000
  4001fa:	6758      	str	r0, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4001fc:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4001fe:	2201      	movs	r2, #1
  400200:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400202:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  400206:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  400208:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  40020a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  40020e:	6f18      	ldr	r0, [r3, #112]	; 0x70
  400210:	f020 0001 	bic.w	r0, r0, #1
  400214:	6718      	str	r0, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400216:	6f58      	ldr	r0, [r3, #116]	; 0x74
  400218:	f020 0001 	bic.w	r0, r0, #1
  40021c:	6758      	str	r0, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40021e:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400220:	2202      	movs	r2, #2
  400222:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400224:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  400228:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  40022a:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  40022c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400230:	6f18      	ldr	r0, [r3, #112]	; 0x70
  400232:	f020 0002 	bic.w	r0, r0, #2
  400236:	6718      	str	r0, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400238:	6f58      	ldr	r0, [r3, #116]	; 0x74
  40023a:	f020 0002 	bic.w	r0, r0, #2
  40023e:	6758      	str	r0, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400240:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400242:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  400246:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400248:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40024c:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  40024e:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400250:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400254:	6f18      	ldr	r0, [r3, #112]	; 0x70
  400256:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
  40025a:	6718      	str	r0, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  40025c:	6f58      	ldr	r0, [r3, #116]	; 0x74
  40025e:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
  400262:	6758      	str	r0, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400264:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400266:	661c      	str	r4, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400268:	f8c3 4090 	str.w	r4, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40026c:	655c      	str	r4, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  40026e:	625c      	str	r4, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400270:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400274:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400276:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
  40027a:	671a      	str	r2, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  40027c:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40027e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
  400282:	675a      	str	r2, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400284:	605c      	str	r4, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400286:	2208      	movs	r2, #8
  400288:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  40028a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40028e:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  400290:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400292:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400296:	6f18      	ldr	r0, [r3, #112]	; 0x70
  400298:	f020 0008 	bic.w	r0, r0, #8
  40029c:	6718      	str	r0, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  40029e:	6f58      	ldr	r0, [r3, #116]	; 0x74
  4002a0:	f020 0008 	bic.w	r0, r0, #8
  4002a4:	6758      	str	r0, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4002a6:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4002a8:	6619      	str	r1, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4002aa:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4002ae:	6559      	str	r1, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4002b0:	6259      	str	r1, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4002b2:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4002b6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4002b8:	f022 0204 	bic.w	r2, r2, #4
  4002bc:	671a      	str	r2, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4002be:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4002c0:	f022 0204 	bic.w	r2, r2, #4
  4002c4:	675a      	str	r2, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4002c6:	6059      	str	r1, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4002c8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  4002cc:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4002ce:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4002d2:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4002d4:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4002d6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4002da:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4002dc:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  4002e0:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4002e2:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4002e4:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  4002e8:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4002ea:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4002ec:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4002f0:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4002f2:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4002f6:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4002f8:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4002fa:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4002fe:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400300:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400304:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400306:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400308:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  40030c:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40030e:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400310:	2240      	movs	r2, #64	; 0x40
  400312:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400314:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  400318:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  40031a:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  40031c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400320:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400322:	f021 0140 	bic.w	r1, r1, #64	; 0x40
  400326:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400328:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40032a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
  40032e:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400330:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400332:	2220      	movs	r2, #32
  400334:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400336:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40033a:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  40033c:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  40033e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400342:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400344:	f021 0120 	bic.w	r1, r1, #32
  400348:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  40034a:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40034c:	f021 0120 	bic.w	r1, r1, #32
  400350:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400352:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400354:	2280      	movs	r2, #128	; 0x80
  400356:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400358:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40035c:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  40035e:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400360:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400364:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400366:	f021 0180 	bic.w	r1, r1, #128	; 0x80
  40036a:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  40036c:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40036e:	f021 0180 	bic.w	r1, r1, #128	; 0x80
  400372:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400374:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400376:	2210      	movs	r2, #16
  400378:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  40037a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40037e:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  400380:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400382:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400386:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400388:	f021 0110 	bic.w	r1, r1, #16
  40038c:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  40038e:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400390:	f021 0110 	bic.w	r1, r1, #16
  400394:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400396:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400398:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40039c:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  40039e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4003a2:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4003a4:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4003a6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4003aa:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4003ac:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
  4003b0:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4003b2:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4003b4:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
  4003b8:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4003ba:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4003bc:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  4003c0:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4003c2:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4003c6:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4003c8:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4003ca:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4003ce:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4003d0:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4003d4:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4003d6:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4003d8:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4003dc:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4003de:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4003e0:	f44f 7280 	mov.w	r2, #256	; 0x100
  4003e4:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4003e6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4003ea:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4003ec:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4003ee:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4003f2:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4003f4:	f421 7180 	bic.w	r1, r1, #256	; 0x100
  4003f8:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4003fa:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4003fc:	f421 7180 	bic.w	r1, r1, #256	; 0x100
  400400:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400402:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400404:	f44f 7200 	mov.w	r2, #512	; 0x200
  400408:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  40040a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40040e:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  400410:	625a      	str	r2, [r3, #36]	; 0x24
  400412:	e007      	b.n	400424 <board_init+0x2d0>
  400414:	400e1850 	.word	0x400e1850
  400418:	00400625 	.word	0x00400625
  40041c:	400e1400 	.word	0x400e1400
  400420:	400e0e00 	.word	0x400e0e00
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400424:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400428:	6f19      	ldr	r1, [r3, #112]	; 0x70
  40042a:	f421 7100 	bic.w	r1, r1, #512	; 0x200
  40042e:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400430:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400432:	f421 7100 	bic.w	r1, r1, #512	; 0x200
  400436:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400438:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  40043a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40043e:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400440:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  400444:	bd38      	pop	{r3, r4, r5, pc}
  400446:	bf00      	nop

00400448 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400448:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40044a:	480e      	ldr	r0, [pc, #56]	; (400484 <sysclk_init+0x3c>)
  40044c:	4b0e      	ldr	r3, [pc, #56]	; (400488 <sysclk_init+0x40>)
  40044e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400450:	213e      	movs	r1, #62	; 0x3e
  400452:	2000      	movs	r0, #0
  400454:	4b0d      	ldr	r3, [pc, #52]	; (40048c <sysclk_init+0x44>)
  400456:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400458:	4c0d      	ldr	r4, [pc, #52]	; (400490 <sysclk_init+0x48>)
  40045a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40045c:	2800      	cmp	r0, #0
  40045e:	d0fc      	beq.n	40045a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400460:	4b0c      	ldr	r3, [pc, #48]	; (400494 <sysclk_init+0x4c>)
  400462:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400464:	4a0c      	ldr	r2, [pc, #48]	; (400498 <sysclk_init+0x50>)
  400466:	4b0d      	ldr	r3, [pc, #52]	; (40049c <sysclk_init+0x54>)
  400468:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	UNUSED(ul_pll_id);
	return pmc_is_locked_pllack();
  40046a:	4c0d      	ldr	r4, [pc, #52]	; (4004a0 <sysclk_init+0x58>)
  40046c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40046e:	2800      	cmp	r0, #0
  400470:	d0fc      	beq.n	40046c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400472:	2010      	movs	r0, #16
  400474:	4b0b      	ldr	r3, [pc, #44]	; (4004a4 <sysclk_init+0x5c>)
  400476:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400478:	4b0b      	ldr	r3, [pc, #44]	; (4004a8 <sysclk_init+0x60>)
  40047a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40047c:	4801      	ldr	r0, [pc, #4]	; (400484 <sysclk_init+0x3c>)
  40047e:	4b02      	ldr	r3, [pc, #8]	; (400488 <sysclk_init+0x40>)
  400480:	4798      	blx	r3
  400482:	bd10      	pop	{r4, pc}
  400484:	07270e00 	.word	0x07270e00
  400488:	004009d9 	.word	0x004009d9
  40048c:	004005a1 	.word	0x004005a1
  400490:	004005f5 	.word	0x004005f5
  400494:	00400605 	.word	0x00400605
  400498:	20133f01 	.word	0x20133f01
  40049c:	400e0400 	.word	0x400e0400
  4004a0:	00400615 	.word	0x00400615
  4004a4:	00400539 	.word	0x00400539
  4004a8:	004008c9 	.word	0x004008c9

004004ac <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
  4004ac:	b990      	cbnz	r0, 4004d4 <_read+0x28>
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  4004ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4004b2:	460c      	mov	r4, r1
  4004b4:	4690      	mov	r8, r2

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4004b6:	2a00      	cmp	r2, #0
  4004b8:	dd0f      	ble.n	4004da <_read+0x2e>
  4004ba:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  4004bc:	4e08      	ldr	r6, [pc, #32]	; (4004e0 <_read+0x34>)
  4004be:	4d09      	ldr	r5, [pc, #36]	; (4004e4 <_read+0x38>)
  4004c0:	6830      	ldr	r0, [r6, #0]
  4004c2:	4621      	mov	r1, r4
  4004c4:	682b      	ldr	r3, [r5, #0]
  4004c6:	4798      	blx	r3
		ptr++;
  4004c8:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4004ca:	42a7      	cmp	r7, r4
  4004cc:	d1f8      	bne.n	4004c0 <_read+0x14>
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
  4004ce:	4640      	mov	r0, r8
  4004d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
  4004d4:	f04f 30ff 	mov.w	r0, #4294967295
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
}
  4004d8:	4770      	bx	lr

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4004da:	2000      	movs	r0, #0
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
}
  4004dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4004e0:	2000098c 	.word	0x2000098c
  4004e4:	20000984 	.word	0x20000984

004004e8 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4004e8:	3801      	subs	r0, #1
  4004ea:	2802      	cmp	r0, #2
  4004ec:	d815      	bhi.n	40051a <_write+0x32>
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  4004ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4004f2:	460e      	mov	r6, r1
  4004f4:	4614      	mov	r4, r2

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4004f6:	b19a      	cbz	r2, 400520 <_write+0x38>
  4004f8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4004fa:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400534 <_write+0x4c>
  4004fe:	4f0c      	ldr	r7, [pc, #48]	; (400530 <_write+0x48>)
  400500:	f8d8 0000 	ldr.w	r0, [r8]
  400504:	f815 1b01 	ldrb.w	r1, [r5], #1
  400508:	683b      	ldr	r3, [r7, #0]
  40050a:	4798      	blx	r3
  40050c:	2800      	cmp	r0, #0
  40050e:	db0a      	blt.n	400526 <_write+0x3e>
  400510:	1ba8      	subs	r0, r5, r6

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  400512:	3c01      	subs	r4, #1
  400514:	d1f4      	bne.n	400500 <_write+0x18>
  400516:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
  40051a:	f04f 30ff 	mov.w	r0, #4294967295
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  40051e:	4770      	bx	lr

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  400520:	2000      	movs	r0, #0
  400522:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
  400526:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  40052a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40052e:	bf00      	nop
  400530:	20000988 	.word	0x20000988
  400534:	2000098c 	.word	0x2000098c

00400538 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400538:	4a18      	ldr	r2, [pc, #96]	; (40059c <pmc_switch_mck_to_pllack+0x64>)
  40053a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40053c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400540:	4318      	orrs	r0, r3
  400542:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400544:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400546:	f013 0f08 	tst.w	r3, #8
  40054a:	d003      	beq.n	400554 <pmc_switch_mck_to_pllack+0x1c>
  40054c:	e009      	b.n	400562 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40054e:	3b01      	subs	r3, #1
  400550:	d103      	bne.n	40055a <pmc_switch_mck_to_pllack+0x22>
  400552:	e01e      	b.n	400592 <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400554:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400558:	4910      	ldr	r1, [pc, #64]	; (40059c <pmc_switch_mck_to_pllack+0x64>)
  40055a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40055c:	f012 0f08 	tst.w	r2, #8
  400560:	d0f5      	beq.n	40054e <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400562:	4a0e      	ldr	r2, [pc, #56]	; (40059c <pmc_switch_mck_to_pllack+0x64>)
  400564:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400566:	f023 0303 	bic.w	r3, r3, #3
  40056a:	f043 0302 	orr.w	r3, r3, #2
  40056e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400570:	6e90      	ldr	r0, [r2, #104]	; 0x68
  400572:	f010 0008 	ands.w	r0, r0, #8
  400576:	d004      	beq.n	400582 <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  400578:	2000      	movs	r0, #0
  40057a:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
  40057c:	3b01      	subs	r3, #1
  40057e:	d103      	bne.n	400588 <pmc_switch_mck_to_pllack+0x50>
  400580:	e009      	b.n	400596 <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400582:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400586:	4905      	ldr	r1, [pc, #20]	; (40059c <pmc_switch_mck_to_pllack+0x64>)
  400588:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40058a:	f012 0f08 	tst.w	r2, #8
  40058e:	d0f5      	beq.n	40057c <pmc_switch_mck_to_pllack+0x44>
  400590:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400592:	2001      	movs	r0, #1
  400594:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400596:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400598:	4770      	bx	lr
  40059a:	bf00      	nop
  40059c:	400e0400 	.word	0x400e0400

004005a0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4005a0:	b138      	cbz	r0, 4005b2 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005a2:	4911      	ldr	r1, [pc, #68]	; (4005e8 <pmc_switch_mainck_to_xtal+0x48>)
  4005a4:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4005a6:	4a11      	ldr	r2, [pc, #68]	; (4005ec <pmc_switch_mainck_to_xtal+0x4c>)
  4005a8:	401a      	ands	r2, r3
  4005aa:	4b11      	ldr	r3, [pc, #68]	; (4005f0 <pmc_switch_mainck_to_xtal+0x50>)
  4005ac:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005ae:	620b      	str	r3, [r1, #32]
  4005b0:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005b2:	480d      	ldr	r0, [pc, #52]	; (4005e8 <pmc_switch_mainck_to_xtal+0x48>)
  4005b4:	6a02      	ldr	r2, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4005b6:	0209      	lsls	r1, r1, #8
  4005b8:	b289      	uxth	r1, r1
  4005ba:	f422 135c 	bic.w	r3, r2, #3604480	; 0x370000
  4005be:	f023 0303 	bic.w	r3, r3, #3
  4005c2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4005c6:	f043 0301 	orr.w	r3, r3, #1
  4005ca:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005cc:	6203      	str	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4005ce:	4602      	mov	r2, r0
  4005d0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4005d2:	f013 0f01 	tst.w	r3, #1
  4005d6:	d0fb      	beq.n	4005d0 <pmc_switch_mainck_to_xtal+0x30>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4005d8:	4a03      	ldr	r2, [pc, #12]	; (4005e8 <pmc_switch_mainck_to_xtal+0x48>)
  4005da:	6a13      	ldr	r3, [r2, #32]
  4005dc:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4005e0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4005e4:	6213      	str	r3, [r2, #32]
  4005e6:	4770      	bx	lr
  4005e8:	400e0400 	.word	0x400e0400
  4005ec:	fec8fffc 	.word	0xfec8fffc
  4005f0:	01370002 	.word	0x01370002

004005f4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4005f4:	4b02      	ldr	r3, [pc, #8]	; (400600 <pmc_osc_is_ready_mainck+0xc>)
  4005f6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4005f8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4005fc:	4770      	bx	lr
  4005fe:	bf00      	nop
  400600:	400e0400 	.word	0x400e0400

00400604 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400604:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400608:	4b01      	ldr	r3, [pc, #4]	; (400610 <pmc_disable_pllack+0xc>)
  40060a:	629a      	str	r2, [r3, #40]	; 0x28
  40060c:	4770      	bx	lr
  40060e:	bf00      	nop
  400610:	400e0400 	.word	0x400e0400

00400614 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400614:	4b02      	ldr	r3, [pc, #8]	; (400620 <pmc_is_locked_pllack+0xc>)
  400616:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400618:	f000 0002 	and.w	r0, r0, #2
  40061c:	4770      	bx	lr
  40061e:	bf00      	nop
  400620:	400e0400 	.word	0x400e0400

00400624 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400624:	282f      	cmp	r0, #47	; 0x2f
  400626:	d81e      	bhi.n	400666 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400628:	281f      	cmp	r0, #31
  40062a:	d80c      	bhi.n	400646 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40062c:	4b11      	ldr	r3, [pc, #68]	; (400674 <pmc_enable_periph_clk+0x50>)
  40062e:	699a      	ldr	r2, [r3, #24]
  400630:	2301      	movs	r3, #1
  400632:	4083      	lsls	r3, r0
  400634:	4393      	bics	r3, r2
  400636:	d018      	beq.n	40066a <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400638:	2301      	movs	r3, #1
  40063a:	fa03 f000 	lsl.w	r0, r3, r0
  40063e:	4b0d      	ldr	r3, [pc, #52]	; (400674 <pmc_enable_periph_clk+0x50>)
  400640:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400642:	2000      	movs	r0, #0
  400644:	4770      	bx	lr
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  400646:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400648:	4b0a      	ldr	r3, [pc, #40]	; (400674 <pmc_enable_periph_clk+0x50>)
  40064a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40064e:	2301      	movs	r3, #1
  400650:	4083      	lsls	r3, r0
  400652:	4393      	bics	r3, r2
  400654:	d00b      	beq.n	40066e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400656:	2301      	movs	r3, #1
  400658:	fa03 f000 	lsl.w	r0, r3, r0
  40065c:	4b05      	ldr	r3, [pc, #20]	; (400674 <pmc_enable_periph_clk+0x50>)
  40065e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
  400662:	2000      	movs	r0, #0
  400664:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  400666:	2001      	movs	r0, #1
  400668:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40066a:	2000      	movs	r0, #0
  40066c:	4770      	bx	lr
  40066e:	2000      	movs	r0, #0
}
  400670:	4770      	bx	lr
  400672:	bf00      	nop
  400674:	400e0400 	.word	0x400e0400

00400678 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400678:	b508      	push	{r3, lr}
  40067a:	2013      	movs	r0, #19
  40067c:	4b01      	ldr	r3, [pc, #4]	; (400684 <spi_enable_clock+0xc>)
  40067e:	4798      	blx	r3
  400680:	bd08      	pop	{r3, pc}
  400682:	bf00      	nop
  400684:	00400625 	.word	0x00400625

00400688 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400688:	6843      	ldr	r3, [r0, #4]
  40068a:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  40068e:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400690:	6843      	ldr	r3, [r0, #4]
  400692:	0409      	lsls	r1, r1, #16
  400694:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400698:	430b      	orrs	r3, r1
  40069a:	6043      	str	r3, [r0, #4]
  40069c:	4770      	bx	lr
  40069e:	bf00      	nop

004006a0 <spi_read>:
 *
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_read(Spi *p_spi, uint16_t *us_data, uint8_t *p_pcs)
{
  4006a0:	b410      	push	{r4}
	uint32_t timeout = SPI_TIMEOUT;
	static uint32_t reg_value;

	while (!(p_spi->SPI_SR & SPI_SR_RDRF)) {
  4006a2:	f643 2399 	movw	r3, #15001	; 0x3a99
  4006a6:	e001      	b.n	4006ac <spi_read+0xc>
		if (!timeout--) {
  4006a8:	3b01      	subs	r3, #1
  4006aa:	d00e      	beq.n	4006ca <spi_read+0x2a>
spi_status_t spi_read(Spi *p_spi, uint16_t *us_data, uint8_t *p_pcs)
{
	uint32_t timeout = SPI_TIMEOUT;
	static uint32_t reg_value;

	while (!(p_spi->SPI_SR & SPI_SR_RDRF)) {
  4006ac:	6904      	ldr	r4, [r0, #16]
  4006ae:	f014 0f01 	tst.w	r4, #1
  4006b2:	d0f9      	beq.n	4006a8 <spi_read+0x8>
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
		}
	}

	reg_value = p_spi->SPI_RDR;
  4006b4:	6883      	ldr	r3, [r0, #8]
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4006b6:	6840      	ldr	r0, [r0, #4]
	if (spi_get_peripheral_select_mode(p_spi)) {
  4006b8:	f010 0f02 	tst.w	r0, #2
		*p_pcs = (uint8_t) ((reg_value & SPI_RDR_PCS_Msk) >> SPI_RDR_PCS_Pos);
  4006bc:	bf1c      	itt	ne
  4006be:	f3c3 4003 	ubfxne	r0, r3, #16, #4
  4006c2:	7010      	strbne	r0, [r2, #0]
	}
	*us_data = (uint16_t) (reg_value & SPI_RDR_RD_Msk);
  4006c4:	800b      	strh	r3, [r1, #0]

	return SPI_OK;
  4006c6:	2000      	movs	r0, #0
  4006c8:	e000      	b.n	4006cc <spi_read+0x2c>
	uint32_t timeout = SPI_TIMEOUT;
	static uint32_t reg_value;

	while (!(p_spi->SPI_SR & SPI_SR_RDRF)) {
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
  4006ca:	2001      	movs	r0, #1
		*p_pcs = (uint8_t) ((reg_value & SPI_RDR_PCS_Msk) >> SPI_RDR_PCS_Pos);
	}
	*us_data = (uint16_t) (reg_value & SPI_RDR_RD_Msk);

	return SPI_OK;
}
  4006cc:	f85d 4b04 	ldr.w	r4, [sp], #4
  4006d0:	4770      	bx	lr
  4006d2:	bf00      	nop

004006d4 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4006d4:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4006d6:	f643 2499 	movw	r4, #15001	; 0x3a99
  4006da:	e001      	b.n	4006e0 <spi_write+0xc>
		if (!timeout--) {
  4006dc:	3c01      	subs	r4, #1
  4006de:	d011      	beq.n	400704 <spi_write+0x30>
		uint8_t uc_pcs, uint8_t uc_last)
{
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4006e0:	6905      	ldr	r5, [r0, #16]
  4006e2:	f015 0f02 	tst.w	r5, #2
  4006e6:	d0f9      	beq.n	4006dc <spi_write+0x8>
  4006e8:	6844      	ldr	r4, [r0, #4]
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4006ea:	f014 0f02 	tst.w	r4, #2
  4006ee:	d006      	beq.n	4006fe <spi_write+0x2a>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4006f0:	0412      	lsls	r2, r2, #16
  4006f2:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4006f6:	4311      	orrs	r1, r2
		if (uc_last) {
  4006f8:	b10b      	cbz	r3, 4006fe <spi_write+0x2a>
			value |= SPI_TDR_LASTXFER;
  4006fa:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4006fe:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  400700:	2000      	movs	r0, #0
  400702:	e000      	b.n	400706 <spi_write+0x32>
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
  400704:	2001      	movs	r0, #1
	}

	p_spi->SPI_TDR = value;

	return SPI_OK;
}
  400706:	bc30      	pop	{r4, r5}
  400708:	4770      	bx	lr
  40070a:	bf00      	nop

0040070c <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  40070c:	b132      	cbz	r2, 40071c <spi_set_clock_polarity+0x10>
  40070e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400712:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400714:	f043 0301 	orr.w	r3, r3, #1
  400718:	6303      	str	r3, [r0, #48]	; 0x30
  40071a:	4770      	bx	lr
  40071c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400720:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400722:	f023 0301 	bic.w	r3, r3, #1
  400726:	6303      	str	r3, [r0, #48]	; 0x30
  400728:	4770      	bx	lr
  40072a:	bf00      	nop

0040072c <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  40072c:	b132      	cbz	r2, 40073c <spi_set_clock_phase+0x10>
  40072e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400732:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400734:	f043 0302 	orr.w	r3, r3, #2
  400738:	6303      	str	r3, [r0, #48]	; 0x30
  40073a:	4770      	bx	lr
  40073c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400740:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400742:	f023 0302 	bic.w	r3, r3, #2
  400746:	6303      	str	r3, [r0, #48]	; 0x30
  400748:	4770      	bx	lr
  40074a:	bf00      	nop

0040074c <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  40074c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400750:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400752:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400756:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400758:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40075a:	431a      	orrs	r2, r3
  40075c:	630a      	str	r2, [r1, #48]	; 0x30
  40075e:	4770      	bx	lr

00400760 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  400760:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  400762:	23ac      	movs	r3, #172	; 0xac
  400764:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  400766:	680b      	ldr	r3, [r1, #0]
  400768:	684a      	ldr	r2, [r1, #4]
  40076a:	fbb3 f3f2 	udiv	r3, r3, r2
  40076e:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  400770:	1e5c      	subs	r4, r3, #1
  400772:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  400776:	4294      	cmp	r4, r2
  400778:	d80a      	bhi.n	400790 <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
  40077a:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  40077c:	688b      	ldr	r3, [r1, #8]
  40077e:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  400780:	f240 2302 	movw	r3, #514	; 0x202
  400784:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  400788:	2350      	movs	r3, #80	; 0x50
  40078a:	6003      	str	r3, [r0, #0]

	return 0;
  40078c:	2000      	movs	r0, #0
  40078e:	e000      	b.n	400792 <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
  400790:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
  400792:	f85d 4b04 	ldr.w	r4, [sp], #4
  400796:	4770      	bx	lr

00400798 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  400798:	6943      	ldr	r3, [r0, #20]
  40079a:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  40079e:	bf1a      	itte	ne
  4007a0:	61c1      	strne	r1, [r0, #28]
	return 0;
  4007a2:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
  4007a4:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
  4007a6:	4770      	bx	lr

004007a8 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  4007a8:	6943      	ldr	r3, [r0, #20]
  4007aa:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  4007ae:	bf1d      	ittte	ne
  4007b0:	6983      	ldrne	r3, [r0, #24]
  4007b2:	700b      	strbne	r3, [r1, #0]
	return 0;
  4007b4:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
  4007b6:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
  4007b8:	4770      	bx	lr
  4007ba:	bf00      	nop

004007bc <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  4007bc:	6943      	ldr	r3, [r0, #20]
  4007be:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  4007c2:	bf1d      	ittte	ne
  4007c4:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  4007c8:	61c1      	strne	r1, [r0, #28]
	return 0;
  4007ca:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
  4007cc:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
  4007ce:	4770      	bx	lr

004007d0 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  4007d0:	6943      	ldr	r3, [r0, #20]
  4007d2:	f013 0f01 	tst.w	r3, #1
  4007d6:	d005      	beq.n	4007e4 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  4007d8:	6983      	ldr	r3, [r0, #24]
  4007da:	f3c3 0308 	ubfx	r3, r3, #0, #9
  4007de:	600b      	str	r3, [r1, #0]

	return 0;
  4007e0:	2000      	movs	r0, #0
  4007e2:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
  4007e4:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
  4007e6:	4770      	bx	lr

004007e8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4007e8:	e7fe      	b.n	4007e8 <Dummy_Handler>
  4007ea:	bf00      	nop

004007ec <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  4007ec:	b500      	push	{lr}
  4007ee:	b083      	sub	sp, #12

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
  4007f0:	4b27      	ldr	r3, [pc, #156]	; (400890 <Reset_Handler+0xa4>)
  4007f2:	4a28      	ldr	r2, [pc, #160]	; (400894 <Reset_Handler+0xa8>)
  4007f4:	429a      	cmp	r2, r3
  4007f6:	d003      	beq.n	400800 <Reset_Handler+0x14>
		for (; pDest < &_erelocate;) {
  4007f8:	4b27      	ldr	r3, [pc, #156]	; (400898 <Reset_Handler+0xac>)
  4007fa:	4a25      	ldr	r2, [pc, #148]	; (400890 <Reset_Handler+0xa4>)
  4007fc:	429a      	cmp	r2, r3
  4007fe:	d304      	bcc.n	40080a <Reset_Handler+0x1e>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400800:	4b26      	ldr	r3, [pc, #152]	; (40089c <Reset_Handler+0xb0>)
  400802:	4a27      	ldr	r2, [pc, #156]	; (4008a0 <Reset_Handler+0xb4>)
  400804:	429a      	cmp	r2, r3
  400806:	d30f      	bcc.n	400828 <Reset_Handler+0x3c>
  400808:	e01a      	b.n	400840 <Reset_Handler+0x54>
  40080a:	4921      	ldr	r1, [pc, #132]	; (400890 <Reset_Handler+0xa4>)
  40080c:	4b25      	ldr	r3, [pc, #148]	; (4008a4 <Reset_Handler+0xb8>)
  40080e:	1a5b      	subs	r3, r3, r1
  400810:	f023 0303 	bic.w	r3, r3, #3
  400814:	3304      	adds	r3, #4
  400816:	4a1f      	ldr	r2, [pc, #124]	; (400894 <Reset_Handler+0xa8>)
  400818:	4413      	add	r3, r2
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
			*pDest++ = *pSrc++;
  40081a:	f852 0b04 	ldr.w	r0, [r2], #4
  40081e:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
  400822:	429a      	cmp	r2, r3
  400824:	d1f9      	bne.n	40081a <Reset_Handler+0x2e>
  400826:	e7eb      	b.n	400800 <Reset_Handler+0x14>
  400828:	4b1f      	ldr	r3, [pc, #124]	; (4008a8 <Reset_Handler+0xbc>)
  40082a:	4a20      	ldr	r2, [pc, #128]	; (4008ac <Reset_Handler+0xc0>)
  40082c:	1ad2      	subs	r2, r2, r3
  40082e:	f022 0203 	bic.w	r2, r2, #3
  400832:	441a      	add	r2, r3
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400834:	3b04      	subs	r3, #4
		*pDest++ = 0;
  400836:	2100      	movs	r1, #0
  400838:	f843 1b04 	str.w	r1, [r3], #4
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  40083c:	4293      	cmp	r3, r2
  40083e:	d1fb      	bne.n	400838 <Reset_Handler+0x4c>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400840:	4a1b      	ldr	r2, [pc, #108]	; (4008b0 <Reset_Handler+0xc4>)
  400842:	4b1c      	ldr	r3, [pc, #112]	; (4008b4 <Reset_Handler+0xc8>)
  400844:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400848:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  40084a:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40084e:	fab3 f383 	clz	r3, r3
  400852:	095b      	lsrs	r3, r3, #5
  400854:	9301      	str	r3, [sp, #4]
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  400856:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  400858:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40085c:	2200      	movs	r2, #0
  40085e:	4b16      	ldr	r3, [pc, #88]	; (4008b8 <Reset_Handler+0xcc>)
  400860:	701a      	strb	r2, [r3, #0]
	return flags;
  400862:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  400864:	4a15      	ldr	r2, [pc, #84]	; (4008bc <Reset_Handler+0xd0>)
  400866:	6813      	ldr	r3, [r2, #0]
  400868:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  40086c:	6013      	str	r3, [r2, #0]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  40086e:	f3bf 8f4f 	dsb	sy
    so that all instructions following the ISB are fetched from cache or
    memory, after the instruction has been completed.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
{
  __ASM volatile ("isb");
  400872:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  400876:	b129      	cbz	r1, 400884 <Reset_Handler+0x98>
		cpu_irq_enable();
  400878:	2201      	movs	r2, #1
  40087a:	4b0f      	ldr	r3, [pc, #60]	; (4008b8 <Reset_Handler+0xcc>)
  40087c:	701a      	strb	r2, [r3, #0]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  40087e:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  400882:	b662      	cpsie	i
#if __FPU_USED
	fpu_enable();
#endif

	/* Initialize the C library */
	__libc_init_array();
  400884:	4b0e      	ldr	r3, [pc, #56]	; (4008c0 <Reset_Handler+0xd4>)
  400886:	4798      	blx	r3

	/* Branch to main function */
	main();
  400888:	4b0e      	ldr	r3, [pc, #56]	; (4008c4 <Reset_Handler+0xd8>)
  40088a:	4798      	blx	r3
  40088c:	e7fe      	b.n	40088c <Reset_Handler+0xa0>
  40088e:	bf00      	nop
  400890:	20000000 	.word	0x20000000
  400894:	004058b0 	.word	0x004058b0
  400898:	2000087c 	.word	0x2000087c
  40089c:	20000994 	.word	0x20000994
  4008a0:	2000087c 	.word	0x2000087c
  4008a4:	2000087b 	.word	0x2000087b
  4008a8:	20000880 	.word	0x20000880
  4008ac:	20000997 	.word	0x20000997
  4008b0:	e000ed00 	.word	0xe000ed00
  4008b4:	00400000 	.word	0x00400000
  4008b8:	20000000 	.word	0x20000000
  4008bc:	e000ed88 	.word	0xe000ed88
  4008c0:	00400f09 	.word	0x00400f09
  4008c4:	00400d91 	.word	0x00400d91

004008c8 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) {
  4008c8:	4b3c      	ldr	r3, [pc, #240]	; (4009bc <SystemCoreClockUpdate+0xf4>)
  4008ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4008cc:	f003 0303 	and.w	r3, r3, #3
  4008d0:	2b01      	cmp	r3, #1
  4008d2:	d00f      	beq.n	4008f4 <SystemCoreClockUpdate+0x2c>
  4008d4:	b113      	cbz	r3, 4008dc <SystemCoreClockUpdate+0x14>
  4008d6:	2b02      	cmp	r3, #2
  4008d8:	d029      	beq.n	40092e <SystemCoreClockUpdate+0x66>
  4008da:	e057      	b.n	40098c <SystemCoreClockUpdate+0xc4>
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  4008dc:	4b38      	ldr	r3, [pc, #224]	; (4009c0 <SystemCoreClockUpdate+0xf8>)
  4008de:	695b      	ldr	r3, [r3, #20]
  4008e0:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4008e4:	bf14      	ite	ne
  4008e6:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4008ea:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4008ee:	4b35      	ldr	r3, [pc, #212]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  4008f0:	601a      	str	r2, [r3, #0]
  4008f2:	e04b      	b.n	40098c <SystemCoreClockUpdate+0xc4>
		}
		break;

	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4008f4:	4b31      	ldr	r3, [pc, #196]	; (4009bc <SystemCoreClockUpdate+0xf4>)
  4008f6:	6a1b      	ldr	r3, [r3, #32]
  4008f8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4008fc:	d003      	beq.n	400906 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4008fe:	4a32      	ldr	r2, [pc, #200]	; (4009c8 <SystemCoreClockUpdate+0x100>)
  400900:	4b30      	ldr	r3, [pc, #192]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  400902:	601a      	str	r2, [r3, #0]
  400904:	e042      	b.n	40098c <SystemCoreClockUpdate+0xc4>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400906:	4a31      	ldr	r2, [pc, #196]	; (4009cc <SystemCoreClockUpdate+0x104>)
  400908:	4b2e      	ldr	r3, [pc, #184]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  40090a:	601a      	str	r2, [r3, #0]

			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  40090c:	4b2b      	ldr	r3, [pc, #172]	; (4009bc <SystemCoreClockUpdate+0xf4>)
  40090e:	6a1b      	ldr	r3, [r3, #32]
  400910:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400914:	2b10      	cmp	r3, #16
  400916:	d002      	beq.n	40091e <SystemCoreClockUpdate+0x56>
  400918:	2b20      	cmp	r3, #32
  40091a:	d004      	beq.n	400926 <SystemCoreClockUpdate+0x5e>
  40091c:	e036      	b.n	40098c <SystemCoreClockUpdate+0xc4>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;

			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
  40091e:	4a2c      	ldr	r2, [pc, #176]	; (4009d0 <SystemCoreClockUpdate+0x108>)
  400920:	4b28      	ldr	r3, [pc, #160]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  400922:	601a      	str	r2, [r3, #0]
				break;
  400924:	e032      	b.n	40098c <SystemCoreClockUpdate+0xc4>

			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
  400926:	4a28      	ldr	r2, [pc, #160]	; (4009c8 <SystemCoreClockUpdate+0x100>)
  400928:	4b26      	ldr	r3, [pc, #152]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  40092a:	601a      	str	r2, [r3, #0]
				break;
  40092c:	e02e      	b.n	40098c <SystemCoreClockUpdate+0xc4>
			}
		}
		break;

	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  40092e:	4b23      	ldr	r3, [pc, #140]	; (4009bc <SystemCoreClockUpdate+0xf4>)
  400930:	6a1b      	ldr	r3, [r3, #32]
  400932:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400936:	d003      	beq.n	400940 <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  400938:	4a23      	ldr	r2, [pc, #140]	; (4009c8 <SystemCoreClockUpdate+0x100>)
  40093a:	4b22      	ldr	r3, [pc, #136]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  40093c:	601a      	str	r2, [r3, #0]
  40093e:	e012      	b.n	400966 <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400940:	4a22      	ldr	r2, [pc, #136]	; (4009cc <SystemCoreClockUpdate+0x104>)
  400942:	4b20      	ldr	r3, [pc, #128]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  400944:	601a      	str	r2, [r3, #0]

			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400946:	4b1d      	ldr	r3, [pc, #116]	; (4009bc <SystemCoreClockUpdate+0xf4>)
  400948:	6a1b      	ldr	r3, [r3, #32]
  40094a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40094e:	2b10      	cmp	r3, #16
  400950:	d002      	beq.n	400958 <SystemCoreClockUpdate+0x90>
  400952:	2b20      	cmp	r3, #32
  400954:	d004      	beq.n	400960 <SystemCoreClockUpdate+0x98>
  400956:	e006      	b.n	400966 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;

			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
  400958:	4a1d      	ldr	r2, [pc, #116]	; (4009d0 <SystemCoreClockUpdate+0x108>)
  40095a:	4b1a      	ldr	r3, [pc, #104]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  40095c:	601a      	str	r2, [r3, #0]
				break;
  40095e:	e002      	b.n	400966 <SystemCoreClockUpdate+0x9e>

			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
  400960:	4a19      	ldr	r2, [pc, #100]	; (4009c8 <SystemCoreClockUpdate+0x100>)
  400962:	4b18      	ldr	r3, [pc, #96]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  400964:	601a      	str	r2, [r3, #0]
			default:
				break;
			}
		}

		if ((uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK)
  400966:	4b15      	ldr	r3, [pc, #84]	; (4009bc <SystemCoreClockUpdate+0xf4>)
  400968:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40096a:	f003 0303 	and.w	r3, r3, #3
  40096e:	2b02      	cmp	r3, #2
  400970:	d10c      	bne.n	40098c <SystemCoreClockUpdate+0xc4>
		{
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400972:	4a12      	ldr	r2, [pc, #72]	; (4009bc <SystemCoreClockUpdate+0xf4>)
  400974:	6a93      	ldr	r3, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400976:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400978:	4812      	ldr	r0, [pc, #72]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  40097a:	f3c3 410a 	ubfx	r1, r3, #16, #11
  40097e:	6803      	ldr	r3, [r0, #0]
  400980:	fb01 3303 	mla	r3, r1, r3, r3
  400984:	b2d2      	uxtb	r2, r2
  400986:	fbb3 f3f2 	udiv	r3, r3, r2
  40098a:	6003      	str	r3, [r0, #0]

	default:
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
  40098c:	4b0b      	ldr	r3, [pc, #44]	; (4009bc <SystemCoreClockUpdate+0xf4>)
  40098e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400990:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400994:	2b70      	cmp	r3, #112	; 0x70
  400996:	d107      	bne.n	4009a8 <SystemCoreClockUpdate+0xe0>
		SystemCoreClock /= 3U;
  400998:	4a0a      	ldr	r2, [pc, #40]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  40099a:	6813      	ldr	r3, [r2, #0]
  40099c:	490d      	ldr	r1, [pc, #52]	; (4009d4 <SystemCoreClockUpdate+0x10c>)
  40099e:	fba1 1303 	umull	r1, r3, r1, r3
  4009a2:	085b      	lsrs	r3, r3, #1
  4009a4:	6013      	str	r3, [r2, #0]
  4009a6:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >>
  4009a8:	4b04      	ldr	r3, [pc, #16]	; (4009bc <SystemCoreClockUpdate+0xf4>)
  4009aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4009ac:	4905      	ldr	r1, [pc, #20]	; (4009c4 <SystemCoreClockUpdate+0xfc>)
  4009ae:	f3c3 1202 	ubfx	r2, r3, #4, #3
  4009b2:	680b      	ldr	r3, [r1, #0]
  4009b4:	40d3      	lsrs	r3, r2
  4009b6:	600b      	str	r3, [r1, #0]
  4009b8:	4770      	bx	lr
  4009ba:	bf00      	nop
  4009bc:	400e0400 	.word	0x400e0400
  4009c0:	400e1810 	.word	0x400e1810
  4009c4:	20000004 	.word	0x20000004
  4009c8:	00b71b00 	.word	0x00b71b00
  4009cc:	003d0900 	.word	0x003d0900
  4009d0:	007a1200 	.word	0x007a1200
  4009d4:	aaaaaaab 	.word	0xaaaaaaab

004009d8 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  4009d8:	4b12      	ldr	r3, [pc, #72]	; (400a24 <system_init_flash+0x4c>)
  4009da:	4298      	cmp	r0, r3
  4009dc:	d804      	bhi.n	4009e8 <system_init_flash+0x10>
		EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4009de:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4009e2:	4b11      	ldr	r3, [pc, #68]	; (400a28 <system_init_flash+0x50>)
  4009e4:	601a      	str	r2, [r3, #0]
  4009e6:	4770      	bx	lr
	} else {
		if (ul_clk < CHIP_FREQ_FWS_1) {
  4009e8:	4b10      	ldr	r3, [pc, #64]	; (400a2c <system_init_flash+0x54>)
  4009ea:	4298      	cmp	r0, r3
  4009ec:	d803      	bhi.n	4009f6 <system_init_flash+0x1e>
			EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4009ee:	4a10      	ldr	r2, [pc, #64]	; (400a30 <system_init_flash+0x58>)
  4009f0:	4b0d      	ldr	r3, [pc, #52]	; (400a28 <system_init_flash+0x50>)
  4009f2:	601a      	str	r2, [r3, #0]
  4009f4:	4770      	bx	lr
		} else {
			if (ul_clk < CHIP_FREQ_FWS_2) {
  4009f6:	4b0f      	ldr	r3, [pc, #60]	; (400a34 <system_init_flash+0x5c>)
  4009f8:	4298      	cmp	r0, r3
  4009fa:	d803      	bhi.n	400a04 <system_init_flash+0x2c>
				EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4009fc:	4a0e      	ldr	r2, [pc, #56]	; (400a38 <system_init_flash+0x60>)
  4009fe:	4b0a      	ldr	r3, [pc, #40]	; (400a28 <system_init_flash+0x50>)
  400a00:	601a      	str	r2, [r3, #0]
  400a02:	4770      	bx	lr
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400a04:	4b0d      	ldr	r3, [pc, #52]	; (400a3c <system_init_flash+0x64>)
  400a06:	4298      	cmp	r0, r3
  400a08:	d803      	bhi.n	400a12 <system_init_flash+0x3a>
					EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400a0a:	4a0d      	ldr	r2, [pc, #52]	; (400a40 <system_init_flash+0x68>)
  400a0c:	4b06      	ldr	r3, [pc, #24]	; (400a28 <system_init_flash+0x50>)
  400a0e:	601a      	str	r2, [r3, #0]
  400a10:	4770      	bx	lr
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400a12:	4b0c      	ldr	r3, [pc, #48]	; (400a44 <system_init_flash+0x6c>)
  400a14:	4298      	cmp	r0, r3
						EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400a16:	bf94      	ite	ls
  400a18:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
						EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400a1c:	4a0a      	ldrhi	r2, [pc, #40]	; (400a48 <system_init_flash+0x70>)
  400a1e:	4b02      	ldr	r3, [pc, #8]	; (400a28 <system_init_flash+0x50>)
  400a20:	601a      	str	r2, [r3, #0]
  400a22:	4770      	bx	lr
  400a24:	01312cff 	.word	0x01312cff
  400a28:	400e0a00 	.word	0x400e0a00
  400a2c:	026259ff 	.word	0x026259ff
  400a30:	04000100 	.word	0x04000100
  400a34:	039386ff 	.word	0x039386ff
  400a38:	04000200 	.word	0x04000200
  400a3c:	04c4b3ff 	.word	0x04c4b3ff
  400a40:	04000300 	.word	0x04000300
  400a44:	05f5e0ff 	.word	0x05f5e0ff
  400a48:	04000500 	.word	0x04000500

00400a4c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400a4c:	4b09      	ldr	r3, [pc, #36]	; (400a74 <_sbrk+0x28>)
  400a4e:	681b      	ldr	r3, [r3, #0]
  400a50:	b913      	cbnz	r3, 400a58 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  400a52:	4a09      	ldr	r2, [pc, #36]	; (400a78 <_sbrk+0x2c>)
  400a54:	4b07      	ldr	r3, [pc, #28]	; (400a74 <_sbrk+0x28>)
  400a56:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  400a58:	4b06      	ldr	r3, [pc, #24]	; (400a74 <_sbrk+0x28>)
  400a5a:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400a5c:	181a      	adds	r2, r3, r0
  400a5e:	4907      	ldr	r1, [pc, #28]	; (400a7c <_sbrk+0x30>)
  400a60:	4291      	cmp	r1, r2
  400a62:	db04      	blt.n	400a6e <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  400a64:	4610      	mov	r0, r2
  400a66:	4a03      	ldr	r2, [pc, #12]	; (400a74 <_sbrk+0x28>)
  400a68:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400a6a:	4618      	mov	r0, r3
  400a6c:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  400a6e:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  400a72:	4770      	bx	lr
  400a74:	20000898 	.word	0x20000898
  400a78:	20003998 	.word	0x20003998
  400a7c:	2001fffc 	.word	0x2001fffc

00400a80 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400a80:	f04f 30ff 	mov.w	r0, #4294967295
  400a84:	4770      	bx	lr
  400a86:	bf00      	nop

00400a88 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400a88:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400a8c:	604b      	str	r3, [r1, #4]

	return 0;
}
  400a8e:	2000      	movs	r0, #0
  400a90:	4770      	bx	lr
  400a92:	bf00      	nop

00400a94 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400a94:	2001      	movs	r0, #1
  400a96:	4770      	bx	lr

00400a98 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400a98:	2000      	movs	r0, #0
  400a9a:	4770      	bx	lr

00400a9c <GMAC_Handler>:

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  400a9c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400aa0:	4b01      	ldr	r3, [pc, #4]	; (400aa8 <GMAC_Handler+0xc>)
  400aa2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  400aa6:	4770      	bx	lr
  400aa8:	e000e100 	.word	0xe000e100

00400aac <TC0_Handler>:

/**
 * TC0 Interrupt handler.
 */
void TC0_Handler(void)
{
  400aac:	b082      	sub	sp, #8
	/* Remove warnings. */
	volatile uint32_t ul_dummy;

	/* Clear status bit to acknowledge interrupt. */
	ul_dummy = TC0->TC_CHANNEL[0].TC_SR;
  400aae:	4b04      	ldr	r3, [pc, #16]	; (400ac0 <TC0_Handler+0x14>)
  400ab0:	6a1b      	ldr	r3, [r3, #32]
  400ab2:	9301      	str	r3, [sp, #4]

	/* Increase tick. */
	gs_ul_clk_tick++;
  400ab4:	4a03      	ldr	r2, [pc, #12]	; (400ac4 <TC0_Handler+0x18>)
  400ab6:	6813      	ldr	r3, [r2, #0]
  400ab8:	3301      	adds	r3, #1
  400aba:	6013      	str	r3, [r2, #0]
}
  400abc:	b002      	add	sp, #8
  400abe:	4770      	bx	lr
  400ac0:	40090000 	.word	0x40090000
  400ac4:	2000089c 	.word	0x2000089c

00400ac8 <spi_slave_transfer>:
 *
 * \param p_buf Pointer to buffer to transfer.
 * \param size Size of the buffer.
 */
static void spi_slave_transfer(void *p_buf, uint32_t size)
{
  400ac8:	b510      	push	{r4, lr}
	gs_puc_transfer_buffer = p_buf;
  400aca:	4b06      	ldr	r3, [pc, #24]	; (400ae4 <spi_slave_transfer+0x1c>)
  400acc:	6018      	str	r0, [r3, #0]
	gs_ul_transfer_length = size;
  400ace:	4b06      	ldr	r3, [pc, #24]	; (400ae8 <spi_slave_transfer+0x20>)
  400ad0:	6019      	str	r1, [r3, #0]
	gs_ul_transfer_index = 0;
  400ad2:	2200      	movs	r2, #0
  400ad4:	4b05      	ldr	r3, [pc, #20]	; (400aec <spi_slave_transfer+0x24>)
  400ad6:	601a      	str	r2, [r3, #0]
	spi_write(SPI_SLAVE_BASE, gs_puc_transfer_buffer[gs_ul_transfer_index], 0, 0);
  400ad8:	4613      	mov	r3, r2
  400ada:	7801      	ldrb	r1, [r0, #0]
  400adc:	4804      	ldr	r0, [pc, #16]	; (400af0 <spi_slave_transfer+0x28>)
  400ade:	4c05      	ldr	r4, [pc, #20]	; (400af4 <spi_slave_transfer+0x2c>)
  400ae0:	47a0      	blx	r4
  400ae2:	bd10      	pop	{r4, pc}
  400ae4:	20000944 	.word	0x20000944
  400ae8:	20000900 	.word	0x20000900
  400aec:	2000094c 	.word	0x2000094c
  400af0:	40088000 	.word	0x40088000
  400af4:	004006d5 	.word	0x004006d5

00400af8 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400af8:	b5f0      	push	{r4, r5, r6, r7, lr}
  400afa:	b083      	sub	sp, #12
  400afc:	4605      	mov	r5, r0
  400afe:	460c      	mov	r4, r1
	uint32_t val = 0;
  400b00:	2300      	movs	r3, #0
  400b02:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400b04:	4b18      	ldr	r3, [pc, #96]	; (400b68 <usart_serial_getchar+0x70>)
  400b06:	4298      	cmp	r0, r3
  400b08:	d107      	bne.n	400b1a <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
  400b0a:	461f      	mov	r7, r3
  400b0c:	4e17      	ldr	r6, [pc, #92]	; (400b6c <usart_serial_getchar+0x74>)
  400b0e:	4621      	mov	r1, r4
  400b10:	4638      	mov	r0, r7
  400b12:	47b0      	blx	r6
  400b14:	2800      	cmp	r0, #0
  400b16:	d1fa      	bne.n	400b0e <usart_serial_getchar+0x16>
  400b18:	e017      	b.n	400b4a <usart_serial_getchar+0x52>
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400b1a:	4b15      	ldr	r3, [pc, #84]	; (400b70 <usart_serial_getchar+0x78>)
  400b1c:	4298      	cmp	r0, r3
  400b1e:	d107      	bne.n	400b30 <usart_serial_getchar+0x38>
		while (uart_read((Uart*)p_usart, data));
  400b20:	461e      	mov	r6, r3
  400b22:	4d12      	ldr	r5, [pc, #72]	; (400b6c <usart_serial_getchar+0x74>)
  400b24:	4621      	mov	r1, r4
  400b26:	4630      	mov	r0, r6
  400b28:	47a8      	blx	r5
  400b2a:	2800      	cmp	r0, #0
  400b2c:	d1fa      	bne.n	400b24 <usart_serial_getchar+0x2c>
  400b2e:	e018      	b.n	400b62 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400b30:	4b10      	ldr	r3, [pc, #64]	; (400b74 <usart_serial_getchar+0x7c>)
  400b32:	4298      	cmp	r0, r3
  400b34:	d109      	bne.n	400b4a <usart_serial_getchar+0x52>
		while (usart_read(p_usart, &val));
  400b36:	461e      	mov	r6, r3
  400b38:	4d0f      	ldr	r5, [pc, #60]	; (400b78 <usart_serial_getchar+0x80>)
  400b3a:	a901      	add	r1, sp, #4
  400b3c:	4630      	mov	r0, r6
  400b3e:	47a8      	blx	r5
  400b40:	2800      	cmp	r0, #0
  400b42:	d1fa      	bne.n	400b3a <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
  400b44:	9b01      	ldr	r3, [sp, #4]
  400b46:	7023      	strb	r3, [r4, #0]
  400b48:	e00b      	b.n	400b62 <usart_serial_getchar+0x6a>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400b4a:	4b0c      	ldr	r3, [pc, #48]	; (400b7c <usart_serial_getchar+0x84>)
  400b4c:	429d      	cmp	r5, r3
  400b4e:	d108      	bne.n	400b62 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
  400b50:	461e      	mov	r6, r3
  400b52:	4d09      	ldr	r5, [pc, #36]	; (400b78 <usart_serial_getchar+0x80>)
  400b54:	a901      	add	r1, sp, #4
  400b56:	4630      	mov	r0, r6
  400b58:	47a8      	blx	r5
  400b5a:	2800      	cmp	r0, #0
  400b5c:	d1fa      	bne.n	400b54 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
  400b5e:	9b01      	ldr	r3, [sp, #4]
  400b60:	7023      	strb	r3, [r4, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400b62:	b003      	add	sp, #12
  400b64:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400b66:	bf00      	nop
  400b68:	400e0600 	.word	0x400e0600
  400b6c:	004007a9 	.word	0x004007a9
  400b70:	40060600 	.word	0x40060600
  400b74:	400a0000 	.word	0x400a0000
  400b78:	004007d1 	.word	0x004007d1
  400b7c:	400a4000 	.word	0x400a4000

00400b80 <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
  400b80:	b570      	push	{r4, r5, r6, lr}
  400b82:	460c      	mov	r4, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400b84:	4b18      	ldr	r3, [pc, #96]	; (400be8 <usart_serial_putchar+0x68>)
  400b86:	4298      	cmp	r0, r3
  400b88:	d108      	bne.n	400b9c <usart_serial_putchar+0x1c>
		while (uart_write((Uart*)p_usart, c)!=0);
  400b8a:	461e      	mov	r6, r3
  400b8c:	4d17      	ldr	r5, [pc, #92]	; (400bec <usart_serial_putchar+0x6c>)
  400b8e:	4621      	mov	r1, r4
  400b90:	4630      	mov	r0, r6
  400b92:	47a8      	blx	r5
  400b94:	2800      	cmp	r0, #0
  400b96:	d1fa      	bne.n	400b8e <usart_serial_putchar+0xe>
		return 1;
  400b98:	2001      	movs	r0, #1
  400b9a:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400b9c:	4b14      	ldr	r3, [pc, #80]	; (400bf0 <usart_serial_putchar+0x70>)
  400b9e:	4298      	cmp	r0, r3
  400ba0:	d108      	bne.n	400bb4 <usart_serial_putchar+0x34>
		while (uart_write((Uart*)p_usart, c)!=0);
  400ba2:	461e      	mov	r6, r3
  400ba4:	4d11      	ldr	r5, [pc, #68]	; (400bec <usart_serial_putchar+0x6c>)
  400ba6:	4621      	mov	r1, r4
  400ba8:	4630      	mov	r0, r6
  400baa:	47a8      	blx	r5
  400bac:	2800      	cmp	r0, #0
  400bae:	d1fa      	bne.n	400ba6 <usart_serial_putchar+0x26>
		return 1;
  400bb0:	2001      	movs	r0, #1
  400bb2:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400bb4:	4b0f      	ldr	r3, [pc, #60]	; (400bf4 <usart_serial_putchar+0x74>)
  400bb6:	4298      	cmp	r0, r3
  400bb8:	d108      	bne.n	400bcc <usart_serial_putchar+0x4c>
		while (usart_write(p_usart, c)!=0);
  400bba:	461e      	mov	r6, r3
  400bbc:	4d0e      	ldr	r5, [pc, #56]	; (400bf8 <usart_serial_putchar+0x78>)
  400bbe:	4621      	mov	r1, r4
  400bc0:	4630      	mov	r0, r6
  400bc2:	47a8      	blx	r5
  400bc4:	2800      	cmp	r0, #0
  400bc6:	d1fa      	bne.n	400bbe <usart_serial_putchar+0x3e>
		return 1;
  400bc8:	2001      	movs	r0, #1
  400bca:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400bcc:	4b0b      	ldr	r3, [pc, #44]	; (400bfc <usart_serial_putchar+0x7c>)
  400bce:	4298      	cmp	r0, r3
  400bd0:	d108      	bne.n	400be4 <usart_serial_putchar+0x64>
		while (usart_write(p_usart, c)!=0);
  400bd2:	461e      	mov	r6, r3
  400bd4:	4d08      	ldr	r5, [pc, #32]	; (400bf8 <usart_serial_putchar+0x78>)
  400bd6:	4621      	mov	r1, r4
  400bd8:	4630      	mov	r0, r6
  400bda:	47a8      	blx	r5
  400bdc:	2800      	cmp	r0, #0
  400bde:	d1fa      	bne.n	400bd6 <usart_serial_putchar+0x56>
		return 1;
  400be0:	2001      	movs	r0, #1
  400be2:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
  400be4:	2000      	movs	r0, #0
}
  400be6:	bd70      	pop	{r4, r5, r6, pc}
  400be8:	400e0600 	.word	0x400e0600
  400bec:	00400799 	.word	0x00400799
  400bf0:	40060600 	.word	0x40060600
  400bf4:	400a0000 	.word	0x400a0000
  400bf8:	004007bd 	.word	0x004007bd
  400bfc:	400a4000 	.word	0x400a4000

00400c00 <SPI_Handler>:

/**
 * \brief Interrupt handler for the SPI slave.
 */
void SPI_Handler(void)
{
  400c00:	b510      	push	{r4, lr}
  400c02:	b082      	sub	sp, #8
	uint32_t new_cmd = 0;
	static uint16_t data;
	uint8_t uc_pcs;

	printf("SPI message received\n\r");
  400c04:	484f      	ldr	r0, [pc, #316]	; (400d44 <SPI_Handler+0x144>)
  400c06:	4b50      	ldr	r3, [pc, #320]	; (400d48 <SPI_Handler+0x148>)
  400c08:	4798      	blx	r3
 *
 * \return SPI status register value.
 */
static inline uint32_t spi_read_status(Spi *p_spi)
{
	return p_spi->SPI_SR;
  400c0a:	4b50      	ldr	r3, [pc, #320]	; (400d4c <SPI_Handler+0x14c>)
  400c0c:	691b      	ldr	r3, [r3, #16]

	if (spi_read_status(SPI_SLAVE_BASE) & SPI_SR_RDRF) {
  400c0e:	f013 0f01 	tst.w	r3, #1
  400c12:	f000 8095 	beq.w	400d40 <SPI_Handler+0x140>
		spi_read(SPI_SLAVE_BASE, &data, &uc_pcs);
  400c16:	4c4e      	ldr	r4, [pc, #312]	; (400d50 <SPI_Handler+0x150>)
  400c18:	f10d 0207 	add.w	r2, sp, #7
  400c1c:	4621      	mov	r1, r4
  400c1e:	484b      	ldr	r0, [pc, #300]	; (400d4c <SPI_Handler+0x14c>)
  400c20:	4b4c      	ldr	r3, [pc, #304]	; (400d54 <SPI_Handler+0x154>)
  400c22:	4798      	blx	r3
		gs_puc_transfer_buffer[gs_ul_transfer_index] = data;
  400c24:	4b4c      	ldr	r3, [pc, #304]	; (400d58 <SPI_Handler+0x158>)
  400c26:	6818      	ldr	r0, [r3, #0]
  400c28:	4a4c      	ldr	r2, [pc, #304]	; (400d5c <SPI_Handler+0x15c>)
  400c2a:	6813      	ldr	r3, [r2, #0]
  400c2c:	8821      	ldrh	r1, [r4, #0]
  400c2e:	54c1      	strb	r1, [r0, r3]
		gs_ul_transfer_index++;
  400c30:	1c59      	adds	r1, r3, #1
  400c32:	6011      	str	r1, [r2, #0]
		gs_ul_transfer_length--;
  400c34:	4a4a      	ldr	r2, [pc, #296]	; (400d60 <SPI_Handler+0x160>)
  400c36:	6813      	ldr	r3, [r2, #0]
  400c38:	3b01      	subs	r3, #1
  400c3a:	6013      	str	r3, [r2, #0]
		if (gs_ul_transfer_length) {
  400c3c:	b14b      	cbz	r3, 400c52 <SPI_Handler+0x52>
			spi_write(SPI_SLAVE_BASE,
  400c3e:	2300      	movs	r3, #0
  400c40:	461a      	mov	r2, r3
  400c42:	5c41      	ldrb	r1, [r0, r1]
  400c44:	4841      	ldr	r0, [pc, #260]	; (400d4c <SPI_Handler+0x14c>)
  400c46:	4c47      	ldr	r4, [pc, #284]	; (400d64 <SPI_Handler+0x164>)
  400c48:	47a0      	blx	r4
					gs_puc_transfer_buffer[gs_ul_transfer_index], 0, 0);
		}

		if (!gs_ul_transfer_length) {
  400c4a:	4b45      	ldr	r3, [pc, #276]	; (400d60 <SPI_Handler+0x160>)
  400c4c:	681b      	ldr	r3, [r3, #0]
  400c4e:	2b00      	cmp	r3, #0
  400c50:	d176      	bne.n	400d40 <SPI_Handler+0x140>
/**
 * \brief  SPI command block process.
 */
static void spi_slave_command_process(void)
{
	if (gs_ul_spi_cmd == CMD_END) {
  400c52:	4b45      	ldr	r3, [pc, #276]	; (400d68 <SPI_Handler+0x168>)
  400c54:	6819      	ldr	r1, [r3, #0]
  400c56:	4b45      	ldr	r3, [pc, #276]	; (400d6c <SPI_Handler+0x16c>)
  400c58:	4299      	cmp	r1, r3
  400c5a:	d106      	bne.n	400c6a <SPI_Handler+0x6a>
		gs_ul_spi_state = SLAVE_STATE_IDLE;
  400c5c:	2300      	movs	r3, #0
  400c5e:	4a44      	ldr	r2, [pc, #272]	; (400d70 <SPI_Handler+0x170>)
  400c60:	6013      	str	r3, [r2, #0]
		gs_spi_status.ul_total_block_number = 0;
  400c62:	4a44      	ldr	r2, [pc, #272]	; (400d74 <SPI_Handler+0x174>)
  400c64:	6013      	str	r3, [r2, #0]
		gs_spi_status.ul_total_command_number = 0;
  400c66:	6053      	str	r3, [r2, #4]
  400c68:	e034      	b.n	400cd4 <SPI_Handler+0xd4>
	} else {
		switch (gs_ul_spi_state) {
  400c6a:	4b41      	ldr	r3, [pc, #260]	; (400d70 <SPI_Handler+0x170>)
  400c6c:	681b      	ldr	r3, [r3, #0]
  400c6e:	2b03      	cmp	r3, #3
  400c70:	d826      	bhi.n	400cc0 <SPI_Handler+0xc0>
  400c72:	e8df f003 	tbb	[pc, r3]
  400c76:	0902      	.short	0x0902
  400c78:	2115      	.short	0x2115
		case SLAVE_STATE_IDLE:
			/* Only CMD_TEST accepted. */
			if (gs_ul_spi_cmd == CMD_TEST) {
  400c7a:	f1b1 3f10 	cmp.w	r1, #269488144	; 0x10101010
  400c7e:	d122      	bne.n	400cc6 <SPI_Handler+0xc6>
				gs_ul_spi_state = SLAVE_STATE_TEST;
  400c80:	2201      	movs	r2, #1
  400c82:	4b3b      	ldr	r3, [pc, #236]	; (400d70 <SPI_Handler+0x170>)
  400c84:	601a      	str	r2, [r3, #0]
  400c86:	e01e      	b.n	400cc6 <SPI_Handler+0xc6>
			}
			break;

		case SLAVE_STATE_TEST:
			/* Only CMD_DATA accepted. */
			if ((gs_ul_spi_cmd & CMD_DATA_MSK) == CMD_DATA) {
  400c88:	0c0b      	lsrs	r3, r1, #16
  400c8a:	041b      	lsls	r3, r3, #16
  400c8c:	4a3a      	ldr	r2, [pc, #232]	; (400d78 <SPI_Handler+0x178>)
  400c8e:	4293      	cmp	r3, r2
  400c90:	d102      	bne.n	400c98 <SPI_Handler+0x98>
				gs_ul_spi_state = SLAVE_STATE_DATA;
  400c92:	2202      	movs	r2, #2
  400c94:	4b36      	ldr	r3, [pc, #216]	; (400d70 <SPI_Handler+0x170>)
  400c96:	601a      	str	r2, [r3, #0]
			}
			gs_ul_test_block_number = gs_ul_spi_cmd & DATA_BLOCK_MSK;
  400c98:	b28b      	uxth	r3, r1
  400c9a:	4a38      	ldr	r2, [pc, #224]	; (400d7c <SPI_Handler+0x17c>)
  400c9c:	6013      	str	r3, [r2, #0]
  400c9e:	e012      	b.n	400cc6 <SPI_Handler+0xc6>
			break;

		case SLAVE_STATE_DATA:
			gs_spi_status.ul_total_block_number++;
  400ca0:	4a34      	ldr	r2, [pc, #208]	; (400d74 <SPI_Handler+0x174>)
  400ca2:	6813      	ldr	r3, [r2, #0]
  400ca4:	3301      	adds	r3, #1
  400ca6:	6013      	str	r3, [r2, #0]

			if (gs_spi_status.ul_total_block_number == 
  400ca8:	4a34      	ldr	r2, [pc, #208]	; (400d7c <SPI_Handler+0x17c>)
  400caa:	6812      	ldr	r2, [r2, #0]
  400cac:	4293      	cmp	r3, r2
  400cae:	d10a      	bne.n	400cc6 <SPI_Handler+0xc6>
					gs_ul_test_block_number) {
				gs_ul_spi_state = SLAVE_STATE_STATUS_ENTRY;
  400cb0:	2203      	movs	r2, #3
  400cb2:	4b2f      	ldr	r3, [pc, #188]	; (400d70 <SPI_Handler+0x170>)
  400cb4:	601a      	str	r2, [r3, #0]
  400cb6:	e006      	b.n	400cc6 <SPI_Handler+0xc6>
			}
			break;

		case SLAVE_STATE_STATUS_ENTRY:
			gs_ul_spi_state = SLAVE_STATE_STATUS;
  400cb8:	2204      	movs	r2, #4
  400cba:	4b2d      	ldr	r3, [pc, #180]	; (400d70 <SPI_Handler+0x170>)
  400cbc:	601a      	str	r2, [r3, #0]
  400cbe:	e002      	b.n	400cc6 <SPI_Handler+0xc6>
			spi_slave_command_process();
			new_cmd = 1;
		}

		if (new_cmd) {
			if (gs_ul_spi_cmd != CMD_END) {
  400cc0:	4b2a      	ldr	r3, [pc, #168]	; (400d6c <SPI_Handler+0x16c>)
  400cc2:	4299      	cmp	r1, r3
  400cc4:	d006      	beq.n	400cd4 <SPI_Handler+0xd4>
				gs_spi_status.ul_cmd_list[gs_spi_status.ul_total_command_number]
  400cc6:	4a2b      	ldr	r2, [pc, #172]	; (400d74 <SPI_Handler+0x174>)
  400cc8:	6853      	ldr	r3, [r2, #4]
				= gs_ul_spi_cmd;
  400cca:	1c98      	adds	r0, r3, #2
  400ccc:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
				gs_spi_status.ul_total_command_number++;
  400cd0:	3301      	adds	r3, #1
  400cd2:	6053      	str	r3, [r2, #4]
/**
 * \brief  Start waiting new command.
 */
static void spi_slave_new_command(void)
{
	switch (gs_ul_spi_state) {
  400cd4:	4b26      	ldr	r3, [pc, #152]	; (400d70 <SPI_Handler+0x170>)
  400cd6:	681b      	ldr	r3, [r3, #0]
  400cd8:	2b05      	cmp	r3, #5
  400cda:	d831      	bhi.n	400d40 <SPI_Handler+0x140>
  400cdc:	e8df f003 	tbb	[pc, r3]
  400ce0:	1c110a03 	.word	0x1c110a03
  400ce4:	0326      	.short	0x0326
	case SLAVE_STATE_IDLE:
	case SLAVE_STATE_END:
		gs_ul_spi_cmd = RC_SYN;
  400ce6:	4820      	ldr	r0, [pc, #128]	; (400d68 <SPI_Handler+0x168>)
  400ce8:	4b25      	ldr	r3, [pc, #148]	; (400d80 <SPI_Handler+0x180>)
  400cea:	6003      	str	r3, [r0, #0]
		spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400cec:	2104      	movs	r1, #4
  400cee:	4b25      	ldr	r3, [pc, #148]	; (400d84 <SPI_Handler+0x184>)
  400cf0:	4798      	blx	r3
  400cf2:	e025      	b.n	400d40 <SPI_Handler+0x140>
		break;

	case SLAVE_STATE_TEST:
		gs_ul_spi_cmd = RC_RDY;
  400cf4:	481c      	ldr	r0, [pc, #112]	; (400d68 <SPI_Handler+0x168>)
  400cf6:	4b24      	ldr	r3, [pc, #144]	; (400d88 <SPI_Handler+0x188>)
  400cf8:	6003      	str	r3, [r0, #0]
		spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400cfa:	2104      	movs	r1, #4
  400cfc:	4b21      	ldr	r3, [pc, #132]	; (400d84 <SPI_Handler+0x184>)
  400cfe:	4798      	blx	r3
  400d00:	e01e      	b.n	400d40 <SPI_Handler+0x140>
		break;

	case SLAVE_STATE_DATA:
		if (gs_spi_status.ul_total_block_number < gs_ul_test_block_number) {
  400d02:	4b1c      	ldr	r3, [pc, #112]	; (400d74 <SPI_Handler+0x174>)
  400d04:	681a      	ldr	r2, [r3, #0]
  400d06:	4b1d      	ldr	r3, [pc, #116]	; (400d7c <SPI_Handler+0x17c>)
  400d08:	681b      	ldr	r3, [r3, #0]
  400d0a:	429a      	cmp	r2, r3
  400d0c:	d218      	bcs.n	400d40 <SPI_Handler+0x140>
			spi_slave_transfer(gs_uc_spi_buffer, COMM_BUFFER_SIZE);
  400d0e:	2140      	movs	r1, #64	; 0x40
  400d10:	481e      	ldr	r0, [pc, #120]	; (400d8c <SPI_Handler+0x18c>)
  400d12:	4b1c      	ldr	r3, [pc, #112]	; (400d84 <SPI_Handler+0x184>)
  400d14:	4798      	blx	r3
  400d16:	e013      	b.n	400d40 <SPI_Handler+0x140>
		}
		break;

	case SLAVE_STATE_STATUS_ENTRY:
		gs_ul_spi_cmd = RC_RDY;
  400d18:	4813      	ldr	r0, [pc, #76]	; (400d68 <SPI_Handler+0x168>)
  400d1a:	4b1b      	ldr	r3, [pc, #108]	; (400d88 <SPI_Handler+0x188>)
  400d1c:	6003      	str	r3, [r0, #0]
		spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400d1e:	2104      	movs	r1, #4
  400d20:	4b18      	ldr	r3, [pc, #96]	; (400d84 <SPI_Handler+0x184>)
  400d22:	4798      	blx	r3
		gs_ul_spi_state = SLAVE_STATE_STATUS;
  400d24:	2204      	movs	r2, #4
  400d26:	4b12      	ldr	r3, [pc, #72]	; (400d70 <SPI_Handler+0x170>)
  400d28:	601a      	str	r2, [r3, #0]
  400d2a:	e009      	b.n	400d40 <SPI_Handler+0x140>
		break;

	case SLAVE_STATE_STATUS:
		gs_ul_spi_cmd = RC_SYN;
  400d2c:	4a14      	ldr	r2, [pc, #80]	; (400d80 <SPI_Handler+0x180>)
  400d2e:	4b0e      	ldr	r3, [pc, #56]	; (400d68 <SPI_Handler+0x168>)
  400d30:	601a      	str	r2, [r3, #0]
		spi_slave_transfer(&gs_spi_status, sizeof(struct status_block_t));
  400d32:	2158      	movs	r1, #88	; 0x58
  400d34:	480f      	ldr	r0, [pc, #60]	; (400d74 <SPI_Handler+0x174>)
  400d36:	4b13      	ldr	r3, [pc, #76]	; (400d84 <SPI_Handler+0x184>)
  400d38:	4798      	blx	r3
		gs_ul_spi_state = SLAVE_STATE_END;
  400d3a:	2205      	movs	r2, #5
  400d3c:	4b0c      	ldr	r3, [pc, #48]	; (400d70 <SPI_Handler+0x170>)
  400d3e:	601a      	str	r2, [r3, #0]
				gs_spi_status.ul_total_command_number++;
			}
			spi_slave_new_command();
		}
	}
}
  400d40:	b002      	add	sp, #8
  400d42:	bd10      	pop	{r4, pc}
  400d44:	0040566c 	.word	0x0040566c
  400d48:	00400f59 	.word	0x00400f59
  400d4c:	40088000 	.word	0x40088000
  400d50:	20000948 	.word	0x20000948
  400d54:	004006a1 	.word	0x004006a1
  400d58:	20000944 	.word	0x20000944
  400d5c:	2000094c 	.word	0x2000094c
  400d60:	20000900 	.word	0x20000900
  400d64:	004006d5 	.word	0x004006d5
  400d68:	20000008 	.word	0x20000008
  400d6c:	68390484 	.word	0x68390484
  400d70:	200008fc 	.word	0x200008fc
  400d74:	200008a0 	.word	0x200008a0
  400d78:	29380000 	.word	0x29380000
  400d7c:	200008f8 	.word	0x200008f8
  400d80:	55aa55aa 	.word	0x55aa55aa
  400d84:	00400ac9 	.word	0x00400ac9
  400d88:	12345678 	.word	0x12345678
  400d8c:	20000904 	.word	0x20000904

00400d90 <main>:
/**
* \brief Main program function. Configure the hardware, initialize lwIP
* TCP/IP stack, and start HTTP service.
*/
int main(void)
{
  400d90:	b570      	push	{r4, r5, r6, lr}
  400d92:	b084      	sub	sp, #16
	uint8_t uc_key;
	
	/* Initialize the SAM system. */
	sysclk_init();
  400d94:	4b3e      	ldr	r3, [pc, #248]	; (400e90 <main+0x100>)
  400d96:	4798      	blx	r3
	board_init();
  400d98:	4b3e      	ldr	r3, [pc, #248]	; (400e94 <main+0x104>)
  400d9a:	4798      	blx	r3
  400d9c:	2007      	movs	r0, #7
  400d9e:	4d3e      	ldr	r5, [pc, #248]	; (400e98 <main+0x108>)
  400da0:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400da2:	4c3e      	ldr	r4, [pc, #248]	; (400e9c <main+0x10c>)
  400da4:	4b3e      	ldr	r3, [pc, #248]	; (400ea0 <main+0x110>)
  400da6:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400da8:	4a3e      	ldr	r2, [pc, #248]	; (400ea4 <main+0x114>)
  400daa:	4b3f      	ldr	r3, [pc, #252]	; (400ea8 <main+0x118>)
  400dac:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400dae:	4a3f      	ldr	r2, [pc, #252]	; (400eac <main+0x11c>)
  400db0:	4b3f      	ldr	r3, [pc, #252]	; (400eb0 <main+0x120>)
  400db2:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400db4:	4b3f      	ldr	r3, [pc, #252]	; (400eb4 <main+0x124>)
  400db6:	9300      	str	r3, [sp, #0]
	uart_settings.ul_baudrate = opt->baudrate;
  400db8:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400dbc:	9301      	str	r3, [sp, #4]
	uart_settings.ul_mode = opt->paritytype;
  400dbe:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400dc2:	9302      	str	r3, [sp, #8]
  400dc4:	2007      	movs	r0, #7
  400dc6:	47a8      	blx	r5
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART0);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
  400dc8:	4669      	mov	r1, sp
  400dca:	4620      	mov	r0, r4
  400dcc:	4b3a      	ldr	r3, [pc, #232]	; (400eb8 <main+0x128>)
  400dce:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400dd0:	4d3a      	ldr	r5, [pc, #232]	; (400ebc <main+0x12c>)
  400dd2:	682b      	ldr	r3, [r5, #0]
  400dd4:	2100      	movs	r1, #0
  400dd6:	6898      	ldr	r0, [r3, #8]
  400dd8:	4c39      	ldr	r4, [pc, #228]	; (400ec0 <main+0x130>)
  400dda:	47a0      	blx	r4
	setbuf(stdin, NULL);
  400ddc:	682b      	ldr	r3, [r5, #0]
  400dde:	2100      	movs	r1, #0
  400de0:	6858      	ldr	r0, [r3, #4]
  400de2:	47a0      	blx	r4

	/* Configure UART console. */
	sysclk_enable_peripheral_clock(CONSOLE_UART_ID);
	stdio_serial_init(CONF_UART, &uart_serial_options);
	#if defined(__GNUC__)
	setbuf(stdout, NULL);
  400de4:	682b      	ldr	r3, [r5, #0]
  400de6:	2100      	movs	r1, #0
  400de8:	6898      	ldr	r0, [r3, #8]
  400dea:	47a0      	blx	r4

	/* Configure debug UART */
	configure_console();

	/* Print example information. */
	puts(STRING_HEADER);
  400dec:	4835      	ldr	r0, [pc, #212]	; (400ec4 <main+0x134>)
  400dee:	4b36      	ldr	r3, [pc, #216]	; (400ec8 <main+0x138>)
  400df0:	4798      	blx	r3
  400df2:	4b36      	ldr	r3, [pc, #216]	; (400ecc <main+0x13c>)
  400df4:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400df8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  400dfc:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400e00:	2100      	movs	r1, #0
  400e02:	f883 1313 	strb.w	r1, [r3, #787]	; 0x313
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400e06:	601a      	str	r2, [r3, #0]
static void spi_slave_initialize(void)
{
	uint32_t i;

	/* Reset status */
	gs_spi_status.ul_total_block_number = 0;
  400e08:	4a31      	ldr	r2, [pc, #196]	; (400ed0 <main+0x140>)
  400e0a:	6011      	str	r1, [r2, #0]
	gs_spi_status.ul_total_command_number = 0;
  400e0c:	4613      	mov	r3, r2
  400e0e:	f843 1f04 	str.w	r1, [r3, #4]!
  400e12:	3254      	adds	r2, #84	; 0x54
	for (i = 0; i < NB_STATUS_CMD; i++) {
		gs_spi_status.ul_cmd_list[i] = 0;
  400e14:	f843 1f04 	str.w	r1, [r3, #4]!
	uint32_t i;

	/* Reset status */
	gs_spi_status.ul_total_block_number = 0;
	gs_spi_status.ul_total_command_number = 0;
	for (i = 0; i < NB_STATUS_CMD; i++) {
  400e18:	429a      	cmp	r2, r3
  400e1a:	d1fb      	bne.n	400e14 <main+0x84>
		gs_spi_status.ul_cmd_list[i] = 0;
	}
	gs_ul_spi_state = SLAVE_STATE_IDLE;
  400e1c:	2500      	movs	r5, #0
  400e1e:	4b2d      	ldr	r3, [pc, #180]	; (400ed4 <main+0x144>)
  400e20:	601d      	str	r5, [r3, #0]
	gs_ul_spi_cmd = RC_SYN;
  400e22:	4e2d      	ldr	r6, [pc, #180]	; (400ed8 <main+0x148>)
  400e24:	4b2d      	ldr	r3, [pc, #180]	; (400edc <main+0x14c>)
  400e26:	6033      	str	r3, [r6, #0]

	puts("-I- Initialize SPI as slave \r");
  400e28:	482d      	ldr	r0, [pc, #180]	; (400ee0 <main+0x150>)
  400e2a:	4b27      	ldr	r3, [pc, #156]	; (400ec8 <main+0x138>)
  400e2c:	4798      	blx	r3
	/* Configure an SPI peripheral. */
	spi_enable_clock(SPI_SLAVE_BASE);
  400e2e:	4c2d      	ldr	r4, [pc, #180]	; (400ee4 <main+0x154>)
  400e30:	4620      	mov	r0, r4
  400e32:	4b2d      	ldr	r3, [pc, #180]	; (400ee8 <main+0x158>)
  400e34:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400e36:	2302      	movs	r3, #2
  400e38:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
  400e3a:	2380      	movs	r3, #128	; 0x80
  400e3c:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_slave_mode(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_MSTR);
  400e3e:	6863      	ldr	r3, [r4, #4]
  400e40:	f023 0301 	bic.w	r3, r3, #1
  400e44:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400e46:	6863      	ldr	r3, [r4, #4]
  400e48:	f043 0310 	orr.w	r3, r3, #16
  400e4c:	6063      	str	r3, [r4, #4]
	spi_disable(SPI_SLAVE_BASE);
	spi_reset(SPI_SLAVE_BASE);
	spi_set_slave_mode(SPI_SLAVE_BASE);
	spi_disable_mode_fault_detect(SPI_SLAVE_BASE);
	spi_set_peripheral_chip_select_value(SPI_SLAVE_BASE, SPI_CHIP_PCS);
  400e4e:	210e      	movs	r1, #14
  400e50:	4620      	mov	r0, r4
  400e52:	4b26      	ldr	r3, [pc, #152]	; (400eec <main+0x15c>)
  400e54:	4798      	blx	r3
	spi_set_clock_polarity(SPI_SLAVE_BASE, SPI_CHIP_SEL, SPI_CLK_POLARITY);
  400e56:	462a      	mov	r2, r5
  400e58:	4629      	mov	r1, r5
  400e5a:	4620      	mov	r0, r4
  400e5c:	4b24      	ldr	r3, [pc, #144]	; (400ef0 <main+0x160>)
  400e5e:	4798      	blx	r3
	spi_set_clock_phase(SPI_SLAVE_BASE, SPI_CHIP_SEL, SPI_CLK_PHASE);
  400e60:	462a      	mov	r2, r5
  400e62:	4629      	mov	r1, r5
  400e64:	4620      	mov	r0, r4
  400e66:	4b23      	ldr	r3, [pc, #140]	; (400ef4 <main+0x164>)
  400e68:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI_SLAVE_BASE, SPI_CHIP_SEL, SPI_CSR_BITS_8_BIT);
  400e6a:	462a      	mov	r2, r5
  400e6c:	4629      	mov	r1, r5
  400e6e:	4620      	mov	r0, r4
  400e70:	4b21      	ldr	r3, [pc, #132]	; (400ef8 <main+0x168>)
  400e72:	4798      	blx	r3
 * \param p_spi Pointer to an SPI instance.
 * \param ul_sources Interrupts to be enabled.
 */
static inline void spi_enable_interrupt(Spi *p_spi, uint32_t ul_sources)
{
	p_spi->SPI_IER = ul_sources;
  400e74:	2301      	movs	r3, #1
  400e76:	6163      	str	r3, [r4, #20]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_enable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400e78:	6023      	str	r3, [r4, #0]
	spi_enable_interrupt(SPI_SLAVE_BASE, SPI_IER_RDRF);
	spi_enable(SPI_SLAVE_BASE);

	/* Start waiting command. */
	spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400e7a:	2104      	movs	r1, #4
  400e7c:	4630      	mov	r0, r6
  400e7e:	4b1f      	ldr	r3, [pc, #124]	; (400efc <main+0x16c>)
  400e80:	4798      	blx	r3
	spi_slave_initialize();

	
	/* Program main loop. */
	while (1) {
		scanf("%c", (char*)&uc_key);
  400e82:	4d1f      	ldr	r5, [pc, #124]	; (400f00 <main+0x170>)
  400e84:	4c1f      	ldr	r4, [pc, #124]	; (400f04 <main+0x174>)
  400e86:	f10d 010f 	add.w	r1, sp, #15
  400e8a:	4628      	mov	r0, r5
  400e8c:	47a0      	blx	r4
  400e8e:	e7fa      	b.n	400e86 <main+0xf6>
  400e90:	00400449 	.word	0x00400449
  400e94:	00400155 	.word	0x00400155
  400e98:	00400625 	.word	0x00400625
  400e9c:	400e0600 	.word	0x400e0600
  400ea0:	2000098c 	.word	0x2000098c
  400ea4:	00400b81 	.word	0x00400b81
  400ea8:	20000988 	.word	0x20000988
  400eac:	00400af9 	.word	0x00400af9
  400eb0:	20000984 	.word	0x20000984
  400eb4:	07270e00 	.word	0x07270e00
  400eb8:	00400761 	.word	0x00400761
  400ebc:	20000438 	.word	0x20000438
  400ec0:	00401c45 	.word	0x00401c45
  400ec4:	00405684 	.word	0x00405684
  400ec8:	00401831 	.word	0x00401831
  400ecc:	e000e100 	.word	0xe000e100
  400ed0:	200008a0 	.word	0x200008a0
  400ed4:	200008fc 	.word	0x200008fc
  400ed8:	20000008 	.word	0x20000008
  400edc:	55aa55aa 	.word	0x55aa55aa
  400ee0:	004056dc 	.word	0x004056dc
  400ee4:	40088000 	.word	0x40088000
  400ee8:	00400679 	.word	0x00400679
  400eec:	00400689 	.word	0x00400689
  400ef0:	0040070d 	.word	0x0040070d
  400ef4:	0040072d 	.word	0x0040072d
  400ef8:	0040074d 	.word	0x0040074d
  400efc:	00400ac9 	.word	0x00400ac9
  400f00:	004056fc 	.word	0x004056fc
  400f04:	00400f81 	.word	0x00400f81

00400f08 <__libc_init_array>:
  400f08:	b570      	push	{r4, r5, r6, lr}
  400f0a:	4e0f      	ldr	r6, [pc, #60]	; (400f48 <__libc_init_array+0x40>)
  400f0c:	4d0f      	ldr	r5, [pc, #60]	; (400f4c <__libc_init_array+0x44>)
  400f0e:	1b76      	subs	r6, r6, r5
  400f10:	10b6      	asrs	r6, r6, #2
  400f12:	bf18      	it	ne
  400f14:	2400      	movne	r4, #0
  400f16:	d005      	beq.n	400f24 <__libc_init_array+0x1c>
  400f18:	3401      	adds	r4, #1
  400f1a:	f855 3b04 	ldr.w	r3, [r5], #4
  400f1e:	4798      	blx	r3
  400f20:	42a6      	cmp	r6, r4
  400f22:	d1f9      	bne.n	400f18 <__libc_init_array+0x10>
  400f24:	4e0a      	ldr	r6, [pc, #40]	; (400f50 <__libc_init_array+0x48>)
  400f26:	4d0b      	ldr	r5, [pc, #44]	; (400f54 <__libc_init_array+0x4c>)
  400f28:	1b76      	subs	r6, r6, r5
  400f2a:	f004 fcab 	bl	405884 <_init>
  400f2e:	10b6      	asrs	r6, r6, #2
  400f30:	bf18      	it	ne
  400f32:	2400      	movne	r4, #0
  400f34:	d006      	beq.n	400f44 <__libc_init_array+0x3c>
  400f36:	3401      	adds	r4, #1
  400f38:	f855 3b04 	ldr.w	r3, [r5], #4
  400f3c:	4798      	blx	r3
  400f3e:	42a6      	cmp	r6, r4
  400f40:	d1f9      	bne.n	400f36 <__libc_init_array+0x2e>
  400f42:	bd70      	pop	{r4, r5, r6, pc}
  400f44:	bd70      	pop	{r4, r5, r6, pc}
  400f46:	bf00      	nop
  400f48:	00405890 	.word	0x00405890
  400f4c:	00405890 	.word	0x00405890
  400f50:	00405898 	.word	0x00405898
  400f54:	00405890 	.word	0x00405890

00400f58 <iprintf>:
  400f58:	b40f      	push	{r0, r1, r2, r3}
  400f5a:	b500      	push	{lr}
  400f5c:	4907      	ldr	r1, [pc, #28]	; (400f7c <iprintf+0x24>)
  400f5e:	b083      	sub	sp, #12
  400f60:	ab04      	add	r3, sp, #16
  400f62:	6808      	ldr	r0, [r1, #0]
  400f64:	f853 2b04 	ldr.w	r2, [r3], #4
  400f68:	6881      	ldr	r1, [r0, #8]
  400f6a:	9301      	str	r3, [sp, #4]
  400f6c:	f000 ffd2 	bl	401f14 <_vfiprintf_r>
  400f70:	b003      	add	sp, #12
  400f72:	f85d eb04 	ldr.w	lr, [sp], #4
  400f76:	b004      	add	sp, #16
  400f78:	4770      	bx	lr
  400f7a:	bf00      	nop
  400f7c:	20000438 	.word	0x20000438

00400f80 <iscanf>:
  400f80:	b40f      	push	{r0, r1, r2, r3}
  400f82:	b500      	push	{lr}
  400f84:	4907      	ldr	r1, [pc, #28]	; (400fa4 <iscanf+0x24>)
  400f86:	b083      	sub	sp, #12
  400f88:	ab04      	add	r3, sp, #16
  400f8a:	6808      	ldr	r0, [r1, #0]
  400f8c:	f853 2b04 	ldr.w	r2, [r3], #4
  400f90:	6841      	ldr	r1, [r0, #4]
  400f92:	9301      	str	r3, [sp, #4]
  400f94:	f001 fef2 	bl	402d7c <__svfiscanf_r>
  400f98:	b003      	add	sp, #12
  400f9a:	f85d eb04 	ldr.w	lr, [sp], #4
  400f9e:	b004      	add	sp, #16
  400fa0:	4770      	bx	lr
  400fa2:	bf00      	nop
  400fa4:	20000438 	.word	0x20000438

00400fa8 <malloc>:
  400fa8:	4b02      	ldr	r3, [pc, #8]	; (400fb4 <malloc+0xc>)
  400faa:	4601      	mov	r1, r0
  400fac:	6818      	ldr	r0, [r3, #0]
  400fae:	f000 b803 	b.w	400fb8 <_malloc_r>
  400fb2:	bf00      	nop
  400fb4:	20000438 	.word	0x20000438

00400fb8 <_malloc_r>:
  400fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400fbc:	f101 050b 	add.w	r5, r1, #11
  400fc0:	2d16      	cmp	r5, #22
  400fc2:	b083      	sub	sp, #12
  400fc4:	4606      	mov	r6, r0
  400fc6:	f240 809f 	bls.w	401108 <_malloc_r+0x150>
  400fca:	f035 0507 	bics.w	r5, r5, #7
  400fce:	f100 80bf 	bmi.w	401150 <_malloc_r+0x198>
  400fd2:	42a9      	cmp	r1, r5
  400fd4:	f200 80bc 	bhi.w	401150 <_malloc_r+0x198>
  400fd8:	f000 fbf2 	bl	4017c0 <__malloc_lock>
  400fdc:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  400fe0:	f0c0 829c 	bcc.w	40151c <_malloc_r+0x564>
  400fe4:	0a6b      	lsrs	r3, r5, #9
  400fe6:	f000 80ba 	beq.w	40115e <_malloc_r+0x1a6>
  400fea:	2b04      	cmp	r3, #4
  400fec:	f200 8183 	bhi.w	4012f6 <_malloc_r+0x33e>
  400ff0:	09a8      	lsrs	r0, r5, #6
  400ff2:	f100 0e39 	add.w	lr, r0, #57	; 0x39
  400ff6:	ea4f 034e 	mov.w	r3, lr, lsl #1
  400ffa:	3038      	adds	r0, #56	; 0x38
  400ffc:	4fc4      	ldr	r7, [pc, #784]	; (401310 <_malloc_r+0x358>)
  400ffe:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  401002:	f1a3 0108 	sub.w	r1, r3, #8
  401006:	685c      	ldr	r4, [r3, #4]
  401008:	42a1      	cmp	r1, r4
  40100a:	d107      	bne.n	40101c <_malloc_r+0x64>
  40100c:	e0ac      	b.n	401168 <_malloc_r+0x1b0>
  40100e:	2a00      	cmp	r2, #0
  401010:	f280 80ac 	bge.w	40116c <_malloc_r+0x1b4>
  401014:	68e4      	ldr	r4, [r4, #12]
  401016:	42a1      	cmp	r1, r4
  401018:	f000 80a6 	beq.w	401168 <_malloc_r+0x1b0>
  40101c:	6863      	ldr	r3, [r4, #4]
  40101e:	f023 0303 	bic.w	r3, r3, #3
  401022:	1b5a      	subs	r2, r3, r5
  401024:	2a0f      	cmp	r2, #15
  401026:	ddf2      	ble.n	40100e <_malloc_r+0x56>
  401028:	49b9      	ldr	r1, [pc, #740]	; (401310 <_malloc_r+0x358>)
  40102a:	693c      	ldr	r4, [r7, #16]
  40102c:	f101 0e08 	add.w	lr, r1, #8
  401030:	4574      	cmp	r4, lr
  401032:	f000 81b3 	beq.w	40139c <_malloc_r+0x3e4>
  401036:	6863      	ldr	r3, [r4, #4]
  401038:	f023 0303 	bic.w	r3, r3, #3
  40103c:	1b5a      	subs	r2, r3, r5
  40103e:	2a0f      	cmp	r2, #15
  401040:	f300 8199 	bgt.w	401376 <_malloc_r+0x3be>
  401044:	2a00      	cmp	r2, #0
  401046:	f8c1 e014 	str.w	lr, [r1, #20]
  40104a:	f8c1 e010 	str.w	lr, [r1, #16]
  40104e:	f280 809e 	bge.w	40118e <_malloc_r+0x1d6>
  401052:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  401056:	f080 8167 	bcs.w	401328 <_malloc_r+0x370>
  40105a:	08db      	lsrs	r3, r3, #3
  40105c:	f103 0c01 	add.w	ip, r3, #1
  401060:	2201      	movs	r2, #1
  401062:	109b      	asrs	r3, r3, #2
  401064:	fa02 f303 	lsl.w	r3, r2, r3
  401068:	684a      	ldr	r2, [r1, #4]
  40106a:	f851 803c 	ldr.w	r8, [r1, ip, lsl #3]
  40106e:	f8c4 8008 	str.w	r8, [r4, #8]
  401072:	eb01 09cc 	add.w	r9, r1, ip, lsl #3
  401076:	431a      	orrs	r2, r3
  401078:	f1a9 0308 	sub.w	r3, r9, #8
  40107c:	60e3      	str	r3, [r4, #12]
  40107e:	604a      	str	r2, [r1, #4]
  401080:	f841 403c 	str.w	r4, [r1, ip, lsl #3]
  401084:	f8c8 400c 	str.w	r4, [r8, #12]
  401088:	1083      	asrs	r3, r0, #2
  40108a:	2401      	movs	r4, #1
  40108c:	409c      	lsls	r4, r3
  40108e:	4294      	cmp	r4, r2
  401090:	f200 808a 	bhi.w	4011a8 <_malloc_r+0x1f0>
  401094:	4214      	tst	r4, r2
  401096:	d106      	bne.n	4010a6 <_malloc_r+0xee>
  401098:	f020 0003 	bic.w	r0, r0, #3
  40109c:	0064      	lsls	r4, r4, #1
  40109e:	4214      	tst	r4, r2
  4010a0:	f100 0004 	add.w	r0, r0, #4
  4010a4:	d0fa      	beq.n	40109c <_malloc_r+0xe4>
  4010a6:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4010aa:	46cc      	mov	ip, r9
  4010ac:	4680      	mov	r8, r0
  4010ae:	f8dc 100c 	ldr.w	r1, [ip, #12]
  4010b2:	458c      	cmp	ip, r1
  4010b4:	d107      	bne.n	4010c6 <_malloc_r+0x10e>
  4010b6:	e173      	b.n	4013a0 <_malloc_r+0x3e8>
  4010b8:	2a00      	cmp	r2, #0
  4010ba:	f280 8181 	bge.w	4013c0 <_malloc_r+0x408>
  4010be:	68c9      	ldr	r1, [r1, #12]
  4010c0:	458c      	cmp	ip, r1
  4010c2:	f000 816d 	beq.w	4013a0 <_malloc_r+0x3e8>
  4010c6:	684b      	ldr	r3, [r1, #4]
  4010c8:	f023 0303 	bic.w	r3, r3, #3
  4010cc:	1b5a      	subs	r2, r3, r5
  4010ce:	2a0f      	cmp	r2, #15
  4010d0:	ddf2      	ble.n	4010b8 <_malloc_r+0x100>
  4010d2:	460c      	mov	r4, r1
  4010d4:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  4010d8:	f854 8f08 	ldr.w	r8, [r4, #8]!
  4010dc:	194b      	adds	r3, r1, r5
  4010de:	f045 0501 	orr.w	r5, r5, #1
  4010e2:	604d      	str	r5, [r1, #4]
  4010e4:	f042 0101 	orr.w	r1, r2, #1
  4010e8:	f8c8 c00c 	str.w	ip, [r8, #12]
  4010ec:	4630      	mov	r0, r6
  4010ee:	f8cc 8008 	str.w	r8, [ip, #8]
  4010f2:	617b      	str	r3, [r7, #20]
  4010f4:	613b      	str	r3, [r7, #16]
  4010f6:	f8c3 e00c 	str.w	lr, [r3, #12]
  4010fa:	f8c3 e008 	str.w	lr, [r3, #8]
  4010fe:	6059      	str	r1, [r3, #4]
  401100:	509a      	str	r2, [r3, r2]
  401102:	f000 fb5f 	bl	4017c4 <__malloc_unlock>
  401106:	e01f      	b.n	401148 <_malloc_r+0x190>
  401108:	2910      	cmp	r1, #16
  40110a:	d821      	bhi.n	401150 <_malloc_r+0x198>
  40110c:	f000 fb58 	bl	4017c0 <__malloc_lock>
  401110:	2510      	movs	r5, #16
  401112:	2306      	movs	r3, #6
  401114:	2002      	movs	r0, #2
  401116:	4f7e      	ldr	r7, [pc, #504]	; (401310 <_malloc_r+0x358>)
  401118:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  40111c:	f1a3 0208 	sub.w	r2, r3, #8
  401120:	685c      	ldr	r4, [r3, #4]
  401122:	4294      	cmp	r4, r2
  401124:	f000 8145 	beq.w	4013b2 <_malloc_r+0x3fa>
  401128:	6863      	ldr	r3, [r4, #4]
  40112a:	68e1      	ldr	r1, [r4, #12]
  40112c:	68a5      	ldr	r5, [r4, #8]
  40112e:	f023 0303 	bic.w	r3, r3, #3
  401132:	4423      	add	r3, r4
  401134:	4630      	mov	r0, r6
  401136:	685a      	ldr	r2, [r3, #4]
  401138:	60e9      	str	r1, [r5, #12]
  40113a:	f042 0201 	orr.w	r2, r2, #1
  40113e:	608d      	str	r5, [r1, #8]
  401140:	605a      	str	r2, [r3, #4]
  401142:	f000 fb3f 	bl	4017c4 <__malloc_unlock>
  401146:	3408      	adds	r4, #8
  401148:	4620      	mov	r0, r4
  40114a:	b003      	add	sp, #12
  40114c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401150:	2400      	movs	r4, #0
  401152:	230c      	movs	r3, #12
  401154:	4620      	mov	r0, r4
  401156:	6033      	str	r3, [r6, #0]
  401158:	b003      	add	sp, #12
  40115a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40115e:	2380      	movs	r3, #128	; 0x80
  401160:	f04f 0e40 	mov.w	lr, #64	; 0x40
  401164:	203f      	movs	r0, #63	; 0x3f
  401166:	e749      	b.n	400ffc <_malloc_r+0x44>
  401168:	4670      	mov	r0, lr
  40116a:	e75d      	b.n	401028 <_malloc_r+0x70>
  40116c:	4423      	add	r3, r4
  40116e:	68e1      	ldr	r1, [r4, #12]
  401170:	685a      	ldr	r2, [r3, #4]
  401172:	68a5      	ldr	r5, [r4, #8]
  401174:	f042 0201 	orr.w	r2, r2, #1
  401178:	60e9      	str	r1, [r5, #12]
  40117a:	4630      	mov	r0, r6
  40117c:	608d      	str	r5, [r1, #8]
  40117e:	605a      	str	r2, [r3, #4]
  401180:	f000 fb20 	bl	4017c4 <__malloc_unlock>
  401184:	3408      	adds	r4, #8
  401186:	4620      	mov	r0, r4
  401188:	b003      	add	sp, #12
  40118a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40118e:	4423      	add	r3, r4
  401190:	4630      	mov	r0, r6
  401192:	685a      	ldr	r2, [r3, #4]
  401194:	f042 0201 	orr.w	r2, r2, #1
  401198:	605a      	str	r2, [r3, #4]
  40119a:	f000 fb13 	bl	4017c4 <__malloc_unlock>
  40119e:	3408      	adds	r4, #8
  4011a0:	4620      	mov	r0, r4
  4011a2:	b003      	add	sp, #12
  4011a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4011a8:	68bc      	ldr	r4, [r7, #8]
  4011aa:	6863      	ldr	r3, [r4, #4]
  4011ac:	f023 0803 	bic.w	r8, r3, #3
  4011b0:	45a8      	cmp	r8, r5
  4011b2:	d304      	bcc.n	4011be <_malloc_r+0x206>
  4011b4:	ebc5 0308 	rsb	r3, r5, r8
  4011b8:	2b0f      	cmp	r3, #15
  4011ba:	f300 808c 	bgt.w	4012d6 <_malloc_r+0x31e>
  4011be:	4b55      	ldr	r3, [pc, #340]	; (401314 <_malloc_r+0x35c>)
  4011c0:	f8df 9160 	ldr.w	r9, [pc, #352]	; 401324 <_malloc_r+0x36c>
  4011c4:	681a      	ldr	r2, [r3, #0]
  4011c6:	f8d9 3000 	ldr.w	r3, [r9]
  4011ca:	3301      	adds	r3, #1
  4011cc:	442a      	add	r2, r5
  4011ce:	eb04 0a08 	add.w	sl, r4, r8
  4011d2:	f000 8160 	beq.w	401496 <_malloc_r+0x4de>
  4011d6:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
  4011da:	320f      	adds	r2, #15
  4011dc:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  4011e0:	f022 020f 	bic.w	r2, r2, #15
  4011e4:	4611      	mov	r1, r2
  4011e6:	4630      	mov	r0, r6
  4011e8:	9201      	str	r2, [sp, #4]
  4011ea:	f000 fd19 	bl	401c20 <_sbrk_r>
  4011ee:	f1b0 3fff 	cmp.w	r0, #4294967295
  4011f2:	4683      	mov	fp, r0
  4011f4:	9a01      	ldr	r2, [sp, #4]
  4011f6:	f000 8158 	beq.w	4014aa <_malloc_r+0x4f2>
  4011fa:	4582      	cmp	sl, r0
  4011fc:	f200 80fc 	bhi.w	4013f8 <_malloc_r+0x440>
  401200:	4b45      	ldr	r3, [pc, #276]	; (401318 <_malloc_r+0x360>)
  401202:	6819      	ldr	r1, [r3, #0]
  401204:	45da      	cmp	sl, fp
  401206:	4411      	add	r1, r2
  401208:	6019      	str	r1, [r3, #0]
  40120a:	f000 8153 	beq.w	4014b4 <_malloc_r+0x4fc>
  40120e:	f8d9 0000 	ldr.w	r0, [r9]
  401212:	f8df e110 	ldr.w	lr, [pc, #272]	; 401324 <_malloc_r+0x36c>
  401216:	3001      	adds	r0, #1
  401218:	bf1b      	ittet	ne
  40121a:	ebca 0a0b 	rsbne	sl, sl, fp
  40121e:	4451      	addne	r1, sl
  401220:	f8ce b000 	streq.w	fp, [lr]
  401224:	6019      	strne	r1, [r3, #0]
  401226:	f01b 0107 	ands.w	r1, fp, #7
  40122a:	f000 8117 	beq.w	40145c <_malloc_r+0x4a4>
  40122e:	f1c1 0008 	rsb	r0, r1, #8
  401232:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  401236:	4483      	add	fp, r0
  401238:	3108      	adds	r1, #8
  40123a:	445a      	add	r2, fp
  40123c:	f3c2 020b 	ubfx	r2, r2, #0, #12
  401240:	ebc2 0901 	rsb	r9, r2, r1
  401244:	4649      	mov	r1, r9
  401246:	4630      	mov	r0, r6
  401248:	9301      	str	r3, [sp, #4]
  40124a:	f000 fce9 	bl	401c20 <_sbrk_r>
  40124e:	1c43      	adds	r3, r0, #1
  401250:	9b01      	ldr	r3, [sp, #4]
  401252:	f000 813f 	beq.w	4014d4 <_malloc_r+0x51c>
  401256:	ebcb 0200 	rsb	r2, fp, r0
  40125a:	444a      	add	r2, r9
  40125c:	f042 0201 	orr.w	r2, r2, #1
  401260:	6819      	ldr	r1, [r3, #0]
  401262:	f8c7 b008 	str.w	fp, [r7, #8]
  401266:	4449      	add	r1, r9
  401268:	42bc      	cmp	r4, r7
  40126a:	f8cb 2004 	str.w	r2, [fp, #4]
  40126e:	6019      	str	r1, [r3, #0]
  401270:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 401318 <_malloc_r+0x360>
  401274:	d016      	beq.n	4012a4 <_malloc_r+0x2ec>
  401276:	f1b8 0f0f 	cmp.w	r8, #15
  40127a:	f240 80fd 	bls.w	401478 <_malloc_r+0x4c0>
  40127e:	6862      	ldr	r2, [r4, #4]
  401280:	f1a8 030c 	sub.w	r3, r8, #12
  401284:	f023 0307 	bic.w	r3, r3, #7
  401288:	18e0      	adds	r0, r4, r3
  40128a:	f002 0201 	and.w	r2, r2, #1
  40128e:	f04f 0e05 	mov.w	lr, #5
  401292:	431a      	orrs	r2, r3
  401294:	2b0f      	cmp	r3, #15
  401296:	6062      	str	r2, [r4, #4]
  401298:	f8c0 e004 	str.w	lr, [r0, #4]
  40129c:	f8c0 e008 	str.w	lr, [r0, #8]
  4012a0:	f200 811c 	bhi.w	4014dc <_malloc_r+0x524>
  4012a4:	4b1d      	ldr	r3, [pc, #116]	; (40131c <_malloc_r+0x364>)
  4012a6:	68bc      	ldr	r4, [r7, #8]
  4012a8:	681a      	ldr	r2, [r3, #0]
  4012aa:	4291      	cmp	r1, r2
  4012ac:	bf88      	it	hi
  4012ae:	6019      	strhi	r1, [r3, #0]
  4012b0:	4b1b      	ldr	r3, [pc, #108]	; (401320 <_malloc_r+0x368>)
  4012b2:	681a      	ldr	r2, [r3, #0]
  4012b4:	4291      	cmp	r1, r2
  4012b6:	6862      	ldr	r2, [r4, #4]
  4012b8:	bf88      	it	hi
  4012ba:	6019      	strhi	r1, [r3, #0]
  4012bc:	f022 0203 	bic.w	r2, r2, #3
  4012c0:	4295      	cmp	r5, r2
  4012c2:	eba2 0305 	sub.w	r3, r2, r5
  4012c6:	d801      	bhi.n	4012cc <_malloc_r+0x314>
  4012c8:	2b0f      	cmp	r3, #15
  4012ca:	dc04      	bgt.n	4012d6 <_malloc_r+0x31e>
  4012cc:	4630      	mov	r0, r6
  4012ce:	f000 fa79 	bl	4017c4 <__malloc_unlock>
  4012d2:	2400      	movs	r4, #0
  4012d4:	e738      	b.n	401148 <_malloc_r+0x190>
  4012d6:	1962      	adds	r2, r4, r5
  4012d8:	f043 0301 	orr.w	r3, r3, #1
  4012dc:	f045 0501 	orr.w	r5, r5, #1
  4012e0:	6065      	str	r5, [r4, #4]
  4012e2:	4630      	mov	r0, r6
  4012e4:	60ba      	str	r2, [r7, #8]
  4012e6:	6053      	str	r3, [r2, #4]
  4012e8:	f000 fa6c 	bl	4017c4 <__malloc_unlock>
  4012ec:	3408      	adds	r4, #8
  4012ee:	4620      	mov	r0, r4
  4012f0:	b003      	add	sp, #12
  4012f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4012f6:	2b14      	cmp	r3, #20
  4012f8:	d971      	bls.n	4013de <_malloc_r+0x426>
  4012fa:	2b54      	cmp	r3, #84	; 0x54
  4012fc:	f200 80a4 	bhi.w	401448 <_malloc_r+0x490>
  401300:	0b28      	lsrs	r0, r5, #12
  401302:	f100 0e6f 	add.w	lr, r0, #111	; 0x6f
  401306:	ea4f 034e 	mov.w	r3, lr, lsl #1
  40130a:	306e      	adds	r0, #110	; 0x6e
  40130c:	e676      	b.n	400ffc <_malloc_r+0x44>
  40130e:	bf00      	nop
  401310:	2000043c 	.word	0x2000043c
  401314:	20000958 	.word	0x20000958
  401318:	2000095c 	.word	0x2000095c
  40131c:	20000954 	.word	0x20000954
  401320:	20000950 	.word	0x20000950
  401324:	20000848 	.word	0x20000848
  401328:	0a5a      	lsrs	r2, r3, #9
  40132a:	2a04      	cmp	r2, #4
  40132c:	d95e      	bls.n	4013ec <_malloc_r+0x434>
  40132e:	2a14      	cmp	r2, #20
  401330:	f200 80b3 	bhi.w	40149a <_malloc_r+0x4e2>
  401334:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  401338:	0049      	lsls	r1, r1, #1
  40133a:	325b      	adds	r2, #91	; 0x5b
  40133c:	eb07 0c81 	add.w	ip, r7, r1, lsl #2
  401340:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
  401344:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 401524 <_malloc_r+0x56c>
  401348:	f1ac 0c08 	sub.w	ip, ip, #8
  40134c:	458c      	cmp	ip, r1
  40134e:	f000 8088 	beq.w	401462 <_malloc_r+0x4aa>
  401352:	684a      	ldr	r2, [r1, #4]
  401354:	f022 0203 	bic.w	r2, r2, #3
  401358:	4293      	cmp	r3, r2
  40135a:	d202      	bcs.n	401362 <_malloc_r+0x3aa>
  40135c:	6889      	ldr	r1, [r1, #8]
  40135e:	458c      	cmp	ip, r1
  401360:	d1f7      	bne.n	401352 <_malloc_r+0x39a>
  401362:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  401366:	687a      	ldr	r2, [r7, #4]
  401368:	f8c4 c00c 	str.w	ip, [r4, #12]
  40136c:	60a1      	str	r1, [r4, #8]
  40136e:	f8cc 4008 	str.w	r4, [ip, #8]
  401372:	60cc      	str	r4, [r1, #12]
  401374:	e688      	b.n	401088 <_malloc_r+0xd0>
  401376:	1963      	adds	r3, r4, r5
  401378:	f042 0701 	orr.w	r7, r2, #1
  40137c:	f045 0501 	orr.w	r5, r5, #1
  401380:	6065      	str	r5, [r4, #4]
  401382:	4630      	mov	r0, r6
  401384:	614b      	str	r3, [r1, #20]
  401386:	610b      	str	r3, [r1, #16]
  401388:	f8c3 e00c 	str.w	lr, [r3, #12]
  40138c:	f8c3 e008 	str.w	lr, [r3, #8]
  401390:	605f      	str	r7, [r3, #4]
  401392:	509a      	str	r2, [r3, r2]
  401394:	3408      	adds	r4, #8
  401396:	f000 fa15 	bl	4017c4 <__malloc_unlock>
  40139a:	e6d5      	b.n	401148 <_malloc_r+0x190>
  40139c:	684a      	ldr	r2, [r1, #4]
  40139e:	e673      	b.n	401088 <_malloc_r+0xd0>
  4013a0:	f108 0801 	add.w	r8, r8, #1
  4013a4:	f018 0f03 	tst.w	r8, #3
  4013a8:	f10c 0c08 	add.w	ip, ip, #8
  4013ac:	f47f ae7f 	bne.w	4010ae <_malloc_r+0xf6>
  4013b0:	e030      	b.n	401414 <_malloc_r+0x45c>
  4013b2:	68dc      	ldr	r4, [r3, #12]
  4013b4:	42a3      	cmp	r3, r4
  4013b6:	bf08      	it	eq
  4013b8:	3002      	addeq	r0, #2
  4013ba:	f43f ae35 	beq.w	401028 <_malloc_r+0x70>
  4013be:	e6b3      	b.n	401128 <_malloc_r+0x170>
  4013c0:	440b      	add	r3, r1
  4013c2:	460c      	mov	r4, r1
  4013c4:	685a      	ldr	r2, [r3, #4]
  4013c6:	68c9      	ldr	r1, [r1, #12]
  4013c8:	f854 5f08 	ldr.w	r5, [r4, #8]!
  4013cc:	f042 0201 	orr.w	r2, r2, #1
  4013d0:	605a      	str	r2, [r3, #4]
  4013d2:	4630      	mov	r0, r6
  4013d4:	60e9      	str	r1, [r5, #12]
  4013d6:	608d      	str	r5, [r1, #8]
  4013d8:	f000 f9f4 	bl	4017c4 <__malloc_unlock>
  4013dc:	e6b4      	b.n	401148 <_malloc_r+0x190>
  4013de:	f103 0e5c 	add.w	lr, r3, #92	; 0x5c
  4013e2:	f103 005b 	add.w	r0, r3, #91	; 0x5b
  4013e6:	ea4f 034e 	mov.w	r3, lr, lsl #1
  4013ea:	e607      	b.n	400ffc <_malloc_r+0x44>
  4013ec:	099a      	lsrs	r2, r3, #6
  4013ee:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4013f2:	0049      	lsls	r1, r1, #1
  4013f4:	3238      	adds	r2, #56	; 0x38
  4013f6:	e7a1      	b.n	40133c <_malloc_r+0x384>
  4013f8:	42bc      	cmp	r4, r7
  4013fa:	4b4a      	ldr	r3, [pc, #296]	; (401524 <_malloc_r+0x56c>)
  4013fc:	f43f af00 	beq.w	401200 <_malloc_r+0x248>
  401400:	689c      	ldr	r4, [r3, #8]
  401402:	6862      	ldr	r2, [r4, #4]
  401404:	f022 0203 	bic.w	r2, r2, #3
  401408:	e75a      	b.n	4012c0 <_malloc_r+0x308>
  40140a:	f859 3908 	ldr.w	r3, [r9], #-8
  40140e:	4599      	cmp	r9, r3
  401410:	f040 8082 	bne.w	401518 <_malloc_r+0x560>
  401414:	f010 0f03 	tst.w	r0, #3
  401418:	f100 30ff 	add.w	r0, r0, #4294967295
  40141c:	d1f5      	bne.n	40140a <_malloc_r+0x452>
  40141e:	687b      	ldr	r3, [r7, #4]
  401420:	ea23 0304 	bic.w	r3, r3, r4
  401424:	607b      	str	r3, [r7, #4]
  401426:	0064      	lsls	r4, r4, #1
  401428:	429c      	cmp	r4, r3
  40142a:	f63f aebd 	bhi.w	4011a8 <_malloc_r+0x1f0>
  40142e:	2c00      	cmp	r4, #0
  401430:	f43f aeba 	beq.w	4011a8 <_malloc_r+0x1f0>
  401434:	421c      	tst	r4, r3
  401436:	4640      	mov	r0, r8
  401438:	f47f ae35 	bne.w	4010a6 <_malloc_r+0xee>
  40143c:	0064      	lsls	r4, r4, #1
  40143e:	421c      	tst	r4, r3
  401440:	f100 0004 	add.w	r0, r0, #4
  401444:	d0fa      	beq.n	40143c <_malloc_r+0x484>
  401446:	e62e      	b.n	4010a6 <_malloc_r+0xee>
  401448:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40144c:	d818      	bhi.n	401480 <_malloc_r+0x4c8>
  40144e:	0be8      	lsrs	r0, r5, #15
  401450:	f100 0e78 	add.w	lr, r0, #120	; 0x78
  401454:	ea4f 034e 	mov.w	r3, lr, lsl #1
  401458:	3077      	adds	r0, #119	; 0x77
  40145a:	e5cf      	b.n	400ffc <_malloc_r+0x44>
  40145c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  401460:	e6eb      	b.n	40123a <_malloc_r+0x282>
  401462:	2101      	movs	r1, #1
  401464:	f8d8 3004 	ldr.w	r3, [r8, #4]
  401468:	1092      	asrs	r2, r2, #2
  40146a:	fa01 f202 	lsl.w	r2, r1, r2
  40146e:	431a      	orrs	r2, r3
  401470:	f8c8 2004 	str.w	r2, [r8, #4]
  401474:	4661      	mov	r1, ip
  401476:	e777      	b.n	401368 <_malloc_r+0x3b0>
  401478:	2301      	movs	r3, #1
  40147a:	f8cb 3004 	str.w	r3, [fp, #4]
  40147e:	e725      	b.n	4012cc <_malloc_r+0x314>
  401480:	f240 5254 	movw	r2, #1364	; 0x554
  401484:	4293      	cmp	r3, r2
  401486:	d820      	bhi.n	4014ca <_malloc_r+0x512>
  401488:	0ca8      	lsrs	r0, r5, #18
  40148a:	f100 0e7d 	add.w	lr, r0, #125	; 0x7d
  40148e:	ea4f 034e 	mov.w	r3, lr, lsl #1
  401492:	307c      	adds	r0, #124	; 0x7c
  401494:	e5b2      	b.n	400ffc <_malloc_r+0x44>
  401496:	3210      	adds	r2, #16
  401498:	e6a4      	b.n	4011e4 <_malloc_r+0x22c>
  40149a:	2a54      	cmp	r2, #84	; 0x54
  40149c:	d826      	bhi.n	4014ec <_malloc_r+0x534>
  40149e:	0b1a      	lsrs	r2, r3, #12
  4014a0:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4014a4:	0049      	lsls	r1, r1, #1
  4014a6:	326e      	adds	r2, #110	; 0x6e
  4014a8:	e748      	b.n	40133c <_malloc_r+0x384>
  4014aa:	68bc      	ldr	r4, [r7, #8]
  4014ac:	6862      	ldr	r2, [r4, #4]
  4014ae:	f022 0203 	bic.w	r2, r2, #3
  4014b2:	e705      	b.n	4012c0 <_malloc_r+0x308>
  4014b4:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4014b8:	2800      	cmp	r0, #0
  4014ba:	f47f aea8 	bne.w	40120e <_malloc_r+0x256>
  4014be:	4442      	add	r2, r8
  4014c0:	68bb      	ldr	r3, [r7, #8]
  4014c2:	f042 0201 	orr.w	r2, r2, #1
  4014c6:	605a      	str	r2, [r3, #4]
  4014c8:	e6ec      	b.n	4012a4 <_malloc_r+0x2ec>
  4014ca:	23fe      	movs	r3, #254	; 0xfe
  4014cc:	f04f 0e7f 	mov.w	lr, #127	; 0x7f
  4014d0:	207e      	movs	r0, #126	; 0x7e
  4014d2:	e593      	b.n	400ffc <_malloc_r+0x44>
  4014d4:	2201      	movs	r2, #1
  4014d6:	f04f 0900 	mov.w	r9, #0
  4014da:	e6c1      	b.n	401260 <_malloc_r+0x2a8>
  4014dc:	f104 0108 	add.w	r1, r4, #8
  4014e0:	4630      	mov	r0, r6
  4014e2:	f002 fce7 	bl	403eb4 <_free_r>
  4014e6:	f8d9 1000 	ldr.w	r1, [r9]
  4014ea:	e6db      	b.n	4012a4 <_malloc_r+0x2ec>
  4014ec:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4014f0:	d805      	bhi.n	4014fe <_malloc_r+0x546>
  4014f2:	0bda      	lsrs	r2, r3, #15
  4014f4:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4014f8:	0049      	lsls	r1, r1, #1
  4014fa:	3277      	adds	r2, #119	; 0x77
  4014fc:	e71e      	b.n	40133c <_malloc_r+0x384>
  4014fe:	f240 5154 	movw	r1, #1364	; 0x554
  401502:	428a      	cmp	r2, r1
  401504:	d805      	bhi.n	401512 <_malloc_r+0x55a>
  401506:	0c9a      	lsrs	r2, r3, #18
  401508:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40150c:	0049      	lsls	r1, r1, #1
  40150e:	327c      	adds	r2, #124	; 0x7c
  401510:	e714      	b.n	40133c <_malloc_r+0x384>
  401512:	21fe      	movs	r1, #254	; 0xfe
  401514:	227e      	movs	r2, #126	; 0x7e
  401516:	e711      	b.n	40133c <_malloc_r+0x384>
  401518:	687b      	ldr	r3, [r7, #4]
  40151a:	e784      	b.n	401426 <_malloc_r+0x46e>
  40151c:	08e8      	lsrs	r0, r5, #3
  40151e:	1c43      	adds	r3, r0, #1
  401520:	005b      	lsls	r3, r3, #1
  401522:	e5f8      	b.n	401116 <_malloc_r+0x15e>
  401524:	2000043c 	.word	0x2000043c

00401528 <memcpy>:
  401528:	4684      	mov	ip, r0
  40152a:	ea41 0300 	orr.w	r3, r1, r0
  40152e:	f013 0303 	ands.w	r3, r3, #3
  401532:	d16d      	bne.n	401610 <memcpy+0xe8>
  401534:	3a40      	subs	r2, #64	; 0x40
  401536:	d341      	bcc.n	4015bc <memcpy+0x94>
  401538:	f851 3b04 	ldr.w	r3, [r1], #4
  40153c:	f840 3b04 	str.w	r3, [r0], #4
  401540:	f851 3b04 	ldr.w	r3, [r1], #4
  401544:	f840 3b04 	str.w	r3, [r0], #4
  401548:	f851 3b04 	ldr.w	r3, [r1], #4
  40154c:	f840 3b04 	str.w	r3, [r0], #4
  401550:	f851 3b04 	ldr.w	r3, [r1], #4
  401554:	f840 3b04 	str.w	r3, [r0], #4
  401558:	f851 3b04 	ldr.w	r3, [r1], #4
  40155c:	f840 3b04 	str.w	r3, [r0], #4
  401560:	f851 3b04 	ldr.w	r3, [r1], #4
  401564:	f840 3b04 	str.w	r3, [r0], #4
  401568:	f851 3b04 	ldr.w	r3, [r1], #4
  40156c:	f840 3b04 	str.w	r3, [r0], #4
  401570:	f851 3b04 	ldr.w	r3, [r1], #4
  401574:	f840 3b04 	str.w	r3, [r0], #4
  401578:	f851 3b04 	ldr.w	r3, [r1], #4
  40157c:	f840 3b04 	str.w	r3, [r0], #4
  401580:	f851 3b04 	ldr.w	r3, [r1], #4
  401584:	f840 3b04 	str.w	r3, [r0], #4
  401588:	f851 3b04 	ldr.w	r3, [r1], #4
  40158c:	f840 3b04 	str.w	r3, [r0], #4
  401590:	f851 3b04 	ldr.w	r3, [r1], #4
  401594:	f840 3b04 	str.w	r3, [r0], #4
  401598:	f851 3b04 	ldr.w	r3, [r1], #4
  40159c:	f840 3b04 	str.w	r3, [r0], #4
  4015a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4015a4:	f840 3b04 	str.w	r3, [r0], #4
  4015a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4015ac:	f840 3b04 	str.w	r3, [r0], #4
  4015b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4015b4:	f840 3b04 	str.w	r3, [r0], #4
  4015b8:	3a40      	subs	r2, #64	; 0x40
  4015ba:	d2bd      	bcs.n	401538 <memcpy+0x10>
  4015bc:	3230      	adds	r2, #48	; 0x30
  4015be:	d311      	bcc.n	4015e4 <memcpy+0xbc>
  4015c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4015c4:	f840 3b04 	str.w	r3, [r0], #4
  4015c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4015cc:	f840 3b04 	str.w	r3, [r0], #4
  4015d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4015d4:	f840 3b04 	str.w	r3, [r0], #4
  4015d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4015dc:	f840 3b04 	str.w	r3, [r0], #4
  4015e0:	3a10      	subs	r2, #16
  4015e2:	d2ed      	bcs.n	4015c0 <memcpy+0x98>
  4015e4:	320c      	adds	r2, #12
  4015e6:	d305      	bcc.n	4015f4 <memcpy+0xcc>
  4015e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4015ec:	f840 3b04 	str.w	r3, [r0], #4
  4015f0:	3a04      	subs	r2, #4
  4015f2:	d2f9      	bcs.n	4015e8 <memcpy+0xc0>
  4015f4:	3204      	adds	r2, #4
  4015f6:	d008      	beq.n	40160a <memcpy+0xe2>
  4015f8:	07d2      	lsls	r2, r2, #31
  4015fa:	bf1c      	itt	ne
  4015fc:	f811 3b01 	ldrbne.w	r3, [r1], #1
  401600:	f800 3b01 	strbne.w	r3, [r0], #1
  401604:	d301      	bcc.n	40160a <memcpy+0xe2>
  401606:	880b      	ldrh	r3, [r1, #0]
  401608:	8003      	strh	r3, [r0, #0]
  40160a:	4660      	mov	r0, ip
  40160c:	4770      	bx	lr
  40160e:	bf00      	nop
  401610:	2a08      	cmp	r2, #8
  401612:	d313      	bcc.n	40163c <memcpy+0x114>
  401614:	078b      	lsls	r3, r1, #30
  401616:	d08d      	beq.n	401534 <memcpy+0xc>
  401618:	f010 0303 	ands.w	r3, r0, #3
  40161c:	d08a      	beq.n	401534 <memcpy+0xc>
  40161e:	f1c3 0304 	rsb	r3, r3, #4
  401622:	1ad2      	subs	r2, r2, r3
  401624:	07db      	lsls	r3, r3, #31
  401626:	bf1c      	itt	ne
  401628:	f811 3b01 	ldrbne.w	r3, [r1], #1
  40162c:	f800 3b01 	strbne.w	r3, [r0], #1
  401630:	d380      	bcc.n	401534 <memcpy+0xc>
  401632:	f831 3b02 	ldrh.w	r3, [r1], #2
  401636:	f820 3b02 	strh.w	r3, [r0], #2
  40163a:	e77b      	b.n	401534 <memcpy+0xc>
  40163c:	3a04      	subs	r2, #4
  40163e:	d3d9      	bcc.n	4015f4 <memcpy+0xcc>
  401640:	3a01      	subs	r2, #1
  401642:	f811 3b01 	ldrb.w	r3, [r1], #1
  401646:	f800 3b01 	strb.w	r3, [r0], #1
  40164a:	d2f9      	bcs.n	401640 <memcpy+0x118>
  40164c:	780b      	ldrb	r3, [r1, #0]
  40164e:	7003      	strb	r3, [r0, #0]
  401650:	784b      	ldrb	r3, [r1, #1]
  401652:	7043      	strb	r3, [r0, #1]
  401654:	788b      	ldrb	r3, [r1, #2]
  401656:	7083      	strb	r3, [r0, #2]
  401658:	4660      	mov	r0, ip
  40165a:	4770      	bx	lr

0040165c <memmove>:
  40165c:	4288      	cmp	r0, r1
  40165e:	b5f0      	push	{r4, r5, r6, r7, lr}
  401660:	d90d      	bls.n	40167e <memmove+0x22>
  401662:	188b      	adds	r3, r1, r2
  401664:	4298      	cmp	r0, r3
  401666:	d20a      	bcs.n	40167e <memmove+0x22>
  401668:	1881      	adds	r1, r0, r2
  40166a:	2a00      	cmp	r2, #0
  40166c:	d051      	beq.n	401712 <memmove+0xb6>
  40166e:	1a9a      	subs	r2, r3, r2
  401670:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  401674:	f801 4d01 	strb.w	r4, [r1, #-1]!
  401678:	4293      	cmp	r3, r2
  40167a:	d1f9      	bne.n	401670 <memmove+0x14>
  40167c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40167e:	2a0f      	cmp	r2, #15
  401680:	d948      	bls.n	401714 <memmove+0xb8>
  401682:	ea41 0300 	orr.w	r3, r1, r0
  401686:	079b      	lsls	r3, r3, #30
  401688:	d146      	bne.n	401718 <memmove+0xbc>
  40168a:	f100 0410 	add.w	r4, r0, #16
  40168e:	f101 0310 	add.w	r3, r1, #16
  401692:	4615      	mov	r5, r2
  401694:	f853 6c10 	ldr.w	r6, [r3, #-16]
  401698:	f844 6c10 	str.w	r6, [r4, #-16]
  40169c:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4016a0:	f844 6c0c 	str.w	r6, [r4, #-12]
  4016a4:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4016a8:	f844 6c08 	str.w	r6, [r4, #-8]
  4016ac:	3d10      	subs	r5, #16
  4016ae:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4016b2:	f844 6c04 	str.w	r6, [r4, #-4]
  4016b6:	2d0f      	cmp	r5, #15
  4016b8:	f103 0310 	add.w	r3, r3, #16
  4016bc:	f104 0410 	add.w	r4, r4, #16
  4016c0:	d8e8      	bhi.n	401694 <memmove+0x38>
  4016c2:	f1a2 0310 	sub.w	r3, r2, #16
  4016c6:	f023 030f 	bic.w	r3, r3, #15
  4016ca:	f002 0e0f 	and.w	lr, r2, #15
  4016ce:	3310      	adds	r3, #16
  4016d0:	f1be 0f03 	cmp.w	lr, #3
  4016d4:	4419      	add	r1, r3
  4016d6:	4403      	add	r3, r0
  4016d8:	d921      	bls.n	40171e <memmove+0xc2>
  4016da:	1f1e      	subs	r6, r3, #4
  4016dc:	460d      	mov	r5, r1
  4016de:	4674      	mov	r4, lr
  4016e0:	3c04      	subs	r4, #4
  4016e2:	f855 7b04 	ldr.w	r7, [r5], #4
  4016e6:	f846 7f04 	str.w	r7, [r6, #4]!
  4016ea:	2c03      	cmp	r4, #3
  4016ec:	d8f8      	bhi.n	4016e0 <memmove+0x84>
  4016ee:	f1ae 0404 	sub.w	r4, lr, #4
  4016f2:	f024 0403 	bic.w	r4, r4, #3
  4016f6:	3404      	adds	r4, #4
  4016f8:	4423      	add	r3, r4
  4016fa:	4421      	add	r1, r4
  4016fc:	f002 0203 	and.w	r2, r2, #3
  401700:	b162      	cbz	r2, 40171c <memmove+0xc0>
  401702:	3b01      	subs	r3, #1
  401704:	440a      	add	r2, r1
  401706:	f811 4b01 	ldrb.w	r4, [r1], #1
  40170a:	f803 4f01 	strb.w	r4, [r3, #1]!
  40170e:	428a      	cmp	r2, r1
  401710:	d1f9      	bne.n	401706 <memmove+0xaa>
  401712:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401714:	4603      	mov	r3, r0
  401716:	e7f3      	b.n	401700 <memmove+0xa4>
  401718:	4603      	mov	r3, r0
  40171a:	e7f2      	b.n	401702 <memmove+0xa6>
  40171c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40171e:	4672      	mov	r2, lr
  401720:	e7ee      	b.n	401700 <memmove+0xa4>
  401722:	bf00      	nop

00401724 <memset>:
  401724:	b470      	push	{r4, r5, r6}
  401726:	0784      	lsls	r4, r0, #30
  401728:	d046      	beq.n	4017b8 <memset+0x94>
  40172a:	1e54      	subs	r4, r2, #1
  40172c:	2a00      	cmp	r2, #0
  40172e:	d041      	beq.n	4017b4 <memset+0x90>
  401730:	b2cd      	uxtb	r5, r1
  401732:	4603      	mov	r3, r0
  401734:	e002      	b.n	40173c <memset+0x18>
  401736:	1e62      	subs	r2, r4, #1
  401738:	b3e4      	cbz	r4, 4017b4 <memset+0x90>
  40173a:	4614      	mov	r4, r2
  40173c:	f803 5b01 	strb.w	r5, [r3], #1
  401740:	079a      	lsls	r2, r3, #30
  401742:	d1f8      	bne.n	401736 <memset+0x12>
  401744:	2c03      	cmp	r4, #3
  401746:	d92e      	bls.n	4017a6 <memset+0x82>
  401748:	b2cd      	uxtb	r5, r1
  40174a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40174e:	2c0f      	cmp	r4, #15
  401750:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401754:	d919      	bls.n	40178a <memset+0x66>
  401756:	f103 0210 	add.w	r2, r3, #16
  40175a:	4626      	mov	r6, r4
  40175c:	3e10      	subs	r6, #16
  40175e:	2e0f      	cmp	r6, #15
  401760:	f842 5c10 	str.w	r5, [r2, #-16]
  401764:	f842 5c0c 	str.w	r5, [r2, #-12]
  401768:	f842 5c08 	str.w	r5, [r2, #-8]
  40176c:	f842 5c04 	str.w	r5, [r2, #-4]
  401770:	f102 0210 	add.w	r2, r2, #16
  401774:	d8f2      	bhi.n	40175c <memset+0x38>
  401776:	f1a4 0210 	sub.w	r2, r4, #16
  40177a:	f022 020f 	bic.w	r2, r2, #15
  40177e:	f004 040f 	and.w	r4, r4, #15
  401782:	3210      	adds	r2, #16
  401784:	2c03      	cmp	r4, #3
  401786:	4413      	add	r3, r2
  401788:	d90d      	bls.n	4017a6 <memset+0x82>
  40178a:	461e      	mov	r6, r3
  40178c:	4622      	mov	r2, r4
  40178e:	3a04      	subs	r2, #4
  401790:	2a03      	cmp	r2, #3
  401792:	f846 5b04 	str.w	r5, [r6], #4
  401796:	d8fa      	bhi.n	40178e <memset+0x6a>
  401798:	1f22      	subs	r2, r4, #4
  40179a:	f022 0203 	bic.w	r2, r2, #3
  40179e:	3204      	adds	r2, #4
  4017a0:	4413      	add	r3, r2
  4017a2:	f004 0403 	and.w	r4, r4, #3
  4017a6:	b12c      	cbz	r4, 4017b4 <memset+0x90>
  4017a8:	b2c9      	uxtb	r1, r1
  4017aa:	441c      	add	r4, r3
  4017ac:	f803 1b01 	strb.w	r1, [r3], #1
  4017b0:	42a3      	cmp	r3, r4
  4017b2:	d1fb      	bne.n	4017ac <memset+0x88>
  4017b4:	bc70      	pop	{r4, r5, r6}
  4017b6:	4770      	bx	lr
  4017b8:	4614      	mov	r4, r2
  4017ba:	4603      	mov	r3, r0
  4017bc:	e7c2      	b.n	401744 <memset+0x20>
  4017be:	bf00      	nop

004017c0 <__malloc_lock>:
  4017c0:	4770      	bx	lr
  4017c2:	bf00      	nop

004017c4 <__malloc_unlock>:
  4017c4:	4770      	bx	lr
  4017c6:	bf00      	nop

004017c8 <_puts_r>:
  4017c8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4017ca:	4605      	mov	r5, r0
  4017cc:	b089      	sub	sp, #36	; 0x24
  4017ce:	4608      	mov	r0, r1
  4017d0:	460c      	mov	r4, r1
  4017d2:	f000 faf5 	bl	401dc0 <strlen>
  4017d6:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4017d8:	4f14      	ldr	r7, [pc, #80]	; (40182c <_puts_r+0x64>)
  4017da:	9404      	str	r4, [sp, #16]
  4017dc:	2601      	movs	r6, #1
  4017de:	1c44      	adds	r4, r0, #1
  4017e0:	a904      	add	r1, sp, #16
  4017e2:	2202      	movs	r2, #2
  4017e4:	9403      	str	r4, [sp, #12]
  4017e6:	9005      	str	r0, [sp, #20]
  4017e8:	68ac      	ldr	r4, [r5, #8]
  4017ea:	9706      	str	r7, [sp, #24]
  4017ec:	9607      	str	r6, [sp, #28]
  4017ee:	9101      	str	r1, [sp, #4]
  4017f0:	9202      	str	r2, [sp, #8]
  4017f2:	b1b3      	cbz	r3, 401822 <_puts_r+0x5a>
  4017f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4017f8:	049a      	lsls	r2, r3, #18
  4017fa:	d406      	bmi.n	40180a <_puts_r+0x42>
  4017fc:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4017fe:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  401802:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  401806:	81a3      	strh	r3, [r4, #12]
  401808:	6662      	str	r2, [r4, #100]	; 0x64
  40180a:	4621      	mov	r1, r4
  40180c:	4628      	mov	r0, r5
  40180e:	aa01      	add	r2, sp, #4
  401810:	f002 fc38 	bl	404084 <__sfvwrite_r>
  401814:	2800      	cmp	r0, #0
  401816:	bf14      	ite	ne
  401818:	f04f 30ff 	movne.w	r0, #4294967295
  40181c:	200a      	moveq	r0, #10
  40181e:	b009      	add	sp, #36	; 0x24
  401820:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401822:	4628      	mov	r0, r5
  401824:	f002 f9ae 	bl	403b84 <__sinit>
  401828:	e7e4      	b.n	4017f4 <_puts_r+0x2c>
  40182a:	bf00      	nop
  40182c:	00405708 	.word	0x00405708

00401830 <puts>:
  401830:	4b02      	ldr	r3, [pc, #8]	; (40183c <puts+0xc>)
  401832:	4601      	mov	r1, r0
  401834:	6818      	ldr	r0, [r3, #0]
  401836:	f7ff bfc7 	b.w	4017c8 <_puts_r>
  40183a:	bf00      	nop
  40183c:	20000438 	.word	0x20000438

00401840 <_realloc_r>:
  401840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401844:	4617      	mov	r7, r2
  401846:	b083      	sub	sp, #12
  401848:	2900      	cmp	r1, #0
  40184a:	f000 80c1 	beq.w	4019d0 <_realloc_r+0x190>
  40184e:	460e      	mov	r6, r1
  401850:	4681      	mov	r9, r0
  401852:	f107 050b 	add.w	r5, r7, #11
  401856:	f7ff ffb3 	bl	4017c0 <__malloc_lock>
  40185a:	f856 ec04 	ldr.w	lr, [r6, #-4]
  40185e:	2d16      	cmp	r5, #22
  401860:	f02e 0403 	bic.w	r4, lr, #3
  401864:	f1a6 0808 	sub.w	r8, r6, #8
  401868:	d840      	bhi.n	4018ec <_realloc_r+0xac>
  40186a:	2210      	movs	r2, #16
  40186c:	4615      	mov	r5, r2
  40186e:	42af      	cmp	r7, r5
  401870:	d841      	bhi.n	4018f6 <_realloc_r+0xb6>
  401872:	4294      	cmp	r4, r2
  401874:	da75      	bge.n	401962 <_realloc_r+0x122>
  401876:	4bc9      	ldr	r3, [pc, #804]	; (401b9c <_realloc_r+0x35c>)
  401878:	6899      	ldr	r1, [r3, #8]
  40187a:	eb08 0004 	add.w	r0, r8, r4
  40187e:	4288      	cmp	r0, r1
  401880:	6841      	ldr	r1, [r0, #4]
  401882:	f000 80d9 	beq.w	401a38 <_realloc_r+0x1f8>
  401886:	f021 0301 	bic.w	r3, r1, #1
  40188a:	4403      	add	r3, r0
  40188c:	685b      	ldr	r3, [r3, #4]
  40188e:	07db      	lsls	r3, r3, #31
  401890:	d57d      	bpl.n	40198e <_realloc_r+0x14e>
  401892:	f01e 0f01 	tst.w	lr, #1
  401896:	d035      	beq.n	401904 <_realloc_r+0xc4>
  401898:	4639      	mov	r1, r7
  40189a:	4648      	mov	r0, r9
  40189c:	f7ff fb8c 	bl	400fb8 <_malloc_r>
  4018a0:	4607      	mov	r7, r0
  4018a2:	b1e0      	cbz	r0, 4018de <_realloc_r+0x9e>
  4018a4:	f856 3c04 	ldr.w	r3, [r6, #-4]
  4018a8:	f023 0301 	bic.w	r3, r3, #1
  4018ac:	4443      	add	r3, r8
  4018ae:	f1a0 0208 	sub.w	r2, r0, #8
  4018b2:	429a      	cmp	r2, r3
  4018b4:	f000 8144 	beq.w	401b40 <_realloc_r+0x300>
  4018b8:	1f22      	subs	r2, r4, #4
  4018ba:	2a24      	cmp	r2, #36	; 0x24
  4018bc:	f200 8131 	bhi.w	401b22 <_realloc_r+0x2e2>
  4018c0:	2a13      	cmp	r2, #19
  4018c2:	f200 8104 	bhi.w	401ace <_realloc_r+0x28e>
  4018c6:	4603      	mov	r3, r0
  4018c8:	4632      	mov	r2, r6
  4018ca:	6811      	ldr	r1, [r2, #0]
  4018cc:	6019      	str	r1, [r3, #0]
  4018ce:	6851      	ldr	r1, [r2, #4]
  4018d0:	6059      	str	r1, [r3, #4]
  4018d2:	6892      	ldr	r2, [r2, #8]
  4018d4:	609a      	str	r2, [r3, #8]
  4018d6:	4631      	mov	r1, r6
  4018d8:	4648      	mov	r0, r9
  4018da:	f002 faeb 	bl	403eb4 <_free_r>
  4018de:	4648      	mov	r0, r9
  4018e0:	f7ff ff70 	bl	4017c4 <__malloc_unlock>
  4018e4:	4638      	mov	r0, r7
  4018e6:	b003      	add	sp, #12
  4018e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4018ec:	f025 0507 	bic.w	r5, r5, #7
  4018f0:	2d00      	cmp	r5, #0
  4018f2:	462a      	mov	r2, r5
  4018f4:	dabb      	bge.n	40186e <_realloc_r+0x2e>
  4018f6:	230c      	movs	r3, #12
  4018f8:	2000      	movs	r0, #0
  4018fa:	f8c9 3000 	str.w	r3, [r9]
  4018fe:	b003      	add	sp, #12
  401900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401904:	f856 3c08 	ldr.w	r3, [r6, #-8]
  401908:	ebc3 0a08 	rsb	sl, r3, r8
  40190c:	f8da 3004 	ldr.w	r3, [sl, #4]
  401910:	f023 0c03 	bic.w	ip, r3, #3
  401914:	eb04 030c 	add.w	r3, r4, ip
  401918:	4293      	cmp	r3, r2
  40191a:	dbbd      	blt.n	401898 <_realloc_r+0x58>
  40191c:	4657      	mov	r7, sl
  40191e:	f8da 100c 	ldr.w	r1, [sl, #12]
  401922:	f857 0f08 	ldr.w	r0, [r7, #8]!
  401926:	1f22      	subs	r2, r4, #4
  401928:	2a24      	cmp	r2, #36	; 0x24
  40192a:	60c1      	str	r1, [r0, #12]
  40192c:	6088      	str	r0, [r1, #8]
  40192e:	f200 8117 	bhi.w	401b60 <_realloc_r+0x320>
  401932:	2a13      	cmp	r2, #19
  401934:	f240 8112 	bls.w	401b5c <_realloc_r+0x31c>
  401938:	6831      	ldr	r1, [r6, #0]
  40193a:	f8ca 1008 	str.w	r1, [sl, #8]
  40193e:	6871      	ldr	r1, [r6, #4]
  401940:	f8ca 100c 	str.w	r1, [sl, #12]
  401944:	2a1b      	cmp	r2, #27
  401946:	f200 812b 	bhi.w	401ba0 <_realloc_r+0x360>
  40194a:	3608      	adds	r6, #8
  40194c:	f10a 0210 	add.w	r2, sl, #16
  401950:	6831      	ldr	r1, [r6, #0]
  401952:	6011      	str	r1, [r2, #0]
  401954:	6871      	ldr	r1, [r6, #4]
  401956:	6051      	str	r1, [r2, #4]
  401958:	68b1      	ldr	r1, [r6, #8]
  40195a:	6091      	str	r1, [r2, #8]
  40195c:	463e      	mov	r6, r7
  40195e:	461c      	mov	r4, r3
  401960:	46d0      	mov	r8, sl
  401962:	1b63      	subs	r3, r4, r5
  401964:	2b0f      	cmp	r3, #15
  401966:	d81d      	bhi.n	4019a4 <_realloc_r+0x164>
  401968:	f8d8 3004 	ldr.w	r3, [r8, #4]
  40196c:	f003 0301 	and.w	r3, r3, #1
  401970:	4323      	orrs	r3, r4
  401972:	4444      	add	r4, r8
  401974:	f8c8 3004 	str.w	r3, [r8, #4]
  401978:	6863      	ldr	r3, [r4, #4]
  40197a:	f043 0301 	orr.w	r3, r3, #1
  40197e:	6063      	str	r3, [r4, #4]
  401980:	4648      	mov	r0, r9
  401982:	f7ff ff1f 	bl	4017c4 <__malloc_unlock>
  401986:	4630      	mov	r0, r6
  401988:	b003      	add	sp, #12
  40198a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40198e:	f021 0103 	bic.w	r1, r1, #3
  401992:	4421      	add	r1, r4
  401994:	4291      	cmp	r1, r2
  401996:	db21      	blt.n	4019dc <_realloc_r+0x19c>
  401998:	68c3      	ldr	r3, [r0, #12]
  40199a:	6882      	ldr	r2, [r0, #8]
  40199c:	460c      	mov	r4, r1
  40199e:	60d3      	str	r3, [r2, #12]
  4019a0:	609a      	str	r2, [r3, #8]
  4019a2:	e7de      	b.n	401962 <_realloc_r+0x122>
  4019a4:	f8d8 2004 	ldr.w	r2, [r8, #4]
  4019a8:	eb08 0105 	add.w	r1, r8, r5
  4019ac:	f002 0201 	and.w	r2, r2, #1
  4019b0:	4315      	orrs	r5, r2
  4019b2:	f043 0201 	orr.w	r2, r3, #1
  4019b6:	440b      	add	r3, r1
  4019b8:	f8c8 5004 	str.w	r5, [r8, #4]
  4019bc:	604a      	str	r2, [r1, #4]
  4019be:	685a      	ldr	r2, [r3, #4]
  4019c0:	f042 0201 	orr.w	r2, r2, #1
  4019c4:	3108      	adds	r1, #8
  4019c6:	605a      	str	r2, [r3, #4]
  4019c8:	4648      	mov	r0, r9
  4019ca:	f002 fa73 	bl	403eb4 <_free_r>
  4019ce:	e7d7      	b.n	401980 <_realloc_r+0x140>
  4019d0:	4611      	mov	r1, r2
  4019d2:	b003      	add	sp, #12
  4019d4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4019d8:	f7ff baee 	b.w	400fb8 <_malloc_r>
  4019dc:	f01e 0f01 	tst.w	lr, #1
  4019e0:	f47f af5a 	bne.w	401898 <_realloc_r+0x58>
  4019e4:	f856 3c08 	ldr.w	r3, [r6, #-8]
  4019e8:	ebc3 0a08 	rsb	sl, r3, r8
  4019ec:	f8da 3004 	ldr.w	r3, [sl, #4]
  4019f0:	f023 0c03 	bic.w	ip, r3, #3
  4019f4:	eb01 0e0c 	add.w	lr, r1, ip
  4019f8:	4596      	cmp	lr, r2
  4019fa:	db8b      	blt.n	401914 <_realloc_r+0xd4>
  4019fc:	68c3      	ldr	r3, [r0, #12]
  4019fe:	6882      	ldr	r2, [r0, #8]
  401a00:	4657      	mov	r7, sl
  401a02:	60d3      	str	r3, [r2, #12]
  401a04:	609a      	str	r2, [r3, #8]
  401a06:	f857 1f08 	ldr.w	r1, [r7, #8]!
  401a0a:	f8da 300c 	ldr.w	r3, [sl, #12]
  401a0e:	60cb      	str	r3, [r1, #12]
  401a10:	1f22      	subs	r2, r4, #4
  401a12:	2a24      	cmp	r2, #36	; 0x24
  401a14:	6099      	str	r1, [r3, #8]
  401a16:	f200 8099 	bhi.w	401b4c <_realloc_r+0x30c>
  401a1a:	2a13      	cmp	r2, #19
  401a1c:	d962      	bls.n	401ae4 <_realloc_r+0x2a4>
  401a1e:	6833      	ldr	r3, [r6, #0]
  401a20:	f8ca 3008 	str.w	r3, [sl, #8]
  401a24:	6873      	ldr	r3, [r6, #4]
  401a26:	f8ca 300c 	str.w	r3, [sl, #12]
  401a2a:	2a1b      	cmp	r2, #27
  401a2c:	f200 80a0 	bhi.w	401b70 <_realloc_r+0x330>
  401a30:	3608      	adds	r6, #8
  401a32:	f10a 0310 	add.w	r3, sl, #16
  401a36:	e056      	b.n	401ae6 <_realloc_r+0x2a6>
  401a38:	f021 0b03 	bic.w	fp, r1, #3
  401a3c:	44a3      	add	fp, r4
  401a3e:	f105 0010 	add.w	r0, r5, #16
  401a42:	4583      	cmp	fp, r0
  401a44:	da59      	bge.n	401afa <_realloc_r+0x2ba>
  401a46:	f01e 0f01 	tst.w	lr, #1
  401a4a:	f47f af25 	bne.w	401898 <_realloc_r+0x58>
  401a4e:	f856 1c08 	ldr.w	r1, [r6, #-8]
  401a52:	ebc1 0a08 	rsb	sl, r1, r8
  401a56:	f8da 1004 	ldr.w	r1, [sl, #4]
  401a5a:	f021 0c03 	bic.w	ip, r1, #3
  401a5e:	44e3      	add	fp, ip
  401a60:	4558      	cmp	r0, fp
  401a62:	f73f af57 	bgt.w	401914 <_realloc_r+0xd4>
  401a66:	4657      	mov	r7, sl
  401a68:	f8da 100c 	ldr.w	r1, [sl, #12]
  401a6c:	f857 0f08 	ldr.w	r0, [r7, #8]!
  401a70:	1f22      	subs	r2, r4, #4
  401a72:	2a24      	cmp	r2, #36	; 0x24
  401a74:	60c1      	str	r1, [r0, #12]
  401a76:	6088      	str	r0, [r1, #8]
  401a78:	f200 80b4 	bhi.w	401be4 <_realloc_r+0x3a4>
  401a7c:	2a13      	cmp	r2, #19
  401a7e:	f240 80a5 	bls.w	401bcc <_realloc_r+0x38c>
  401a82:	6831      	ldr	r1, [r6, #0]
  401a84:	f8ca 1008 	str.w	r1, [sl, #8]
  401a88:	6871      	ldr	r1, [r6, #4]
  401a8a:	f8ca 100c 	str.w	r1, [sl, #12]
  401a8e:	2a1b      	cmp	r2, #27
  401a90:	f200 80af 	bhi.w	401bf2 <_realloc_r+0x3b2>
  401a94:	3608      	adds	r6, #8
  401a96:	f10a 0210 	add.w	r2, sl, #16
  401a9a:	6831      	ldr	r1, [r6, #0]
  401a9c:	6011      	str	r1, [r2, #0]
  401a9e:	6871      	ldr	r1, [r6, #4]
  401aa0:	6051      	str	r1, [r2, #4]
  401aa2:	68b1      	ldr	r1, [r6, #8]
  401aa4:	6091      	str	r1, [r2, #8]
  401aa6:	eb0a 0105 	add.w	r1, sl, r5
  401aaa:	ebc5 020b 	rsb	r2, r5, fp
  401aae:	f042 0201 	orr.w	r2, r2, #1
  401ab2:	6099      	str	r1, [r3, #8]
  401ab4:	604a      	str	r2, [r1, #4]
  401ab6:	f8da 3004 	ldr.w	r3, [sl, #4]
  401aba:	f003 0301 	and.w	r3, r3, #1
  401abe:	431d      	orrs	r5, r3
  401ac0:	4648      	mov	r0, r9
  401ac2:	f8ca 5004 	str.w	r5, [sl, #4]
  401ac6:	f7ff fe7d 	bl	4017c4 <__malloc_unlock>
  401aca:	4638      	mov	r0, r7
  401acc:	e75c      	b.n	401988 <_realloc_r+0x148>
  401ace:	6833      	ldr	r3, [r6, #0]
  401ad0:	6003      	str	r3, [r0, #0]
  401ad2:	6873      	ldr	r3, [r6, #4]
  401ad4:	6043      	str	r3, [r0, #4]
  401ad6:	2a1b      	cmp	r2, #27
  401ad8:	d827      	bhi.n	401b2a <_realloc_r+0x2ea>
  401ada:	f100 0308 	add.w	r3, r0, #8
  401ade:	f106 0208 	add.w	r2, r6, #8
  401ae2:	e6f2      	b.n	4018ca <_realloc_r+0x8a>
  401ae4:	463b      	mov	r3, r7
  401ae6:	6832      	ldr	r2, [r6, #0]
  401ae8:	601a      	str	r2, [r3, #0]
  401aea:	6872      	ldr	r2, [r6, #4]
  401aec:	605a      	str	r2, [r3, #4]
  401aee:	68b2      	ldr	r2, [r6, #8]
  401af0:	609a      	str	r2, [r3, #8]
  401af2:	463e      	mov	r6, r7
  401af4:	4674      	mov	r4, lr
  401af6:	46d0      	mov	r8, sl
  401af8:	e733      	b.n	401962 <_realloc_r+0x122>
  401afa:	eb08 0105 	add.w	r1, r8, r5
  401afe:	ebc5 0b0b 	rsb	fp, r5, fp
  401b02:	f04b 0201 	orr.w	r2, fp, #1
  401b06:	6099      	str	r1, [r3, #8]
  401b08:	604a      	str	r2, [r1, #4]
  401b0a:	f856 3c04 	ldr.w	r3, [r6, #-4]
  401b0e:	f003 0301 	and.w	r3, r3, #1
  401b12:	431d      	orrs	r5, r3
  401b14:	4648      	mov	r0, r9
  401b16:	f846 5c04 	str.w	r5, [r6, #-4]
  401b1a:	f7ff fe53 	bl	4017c4 <__malloc_unlock>
  401b1e:	4630      	mov	r0, r6
  401b20:	e732      	b.n	401988 <_realloc_r+0x148>
  401b22:	4631      	mov	r1, r6
  401b24:	f7ff fd9a 	bl	40165c <memmove>
  401b28:	e6d5      	b.n	4018d6 <_realloc_r+0x96>
  401b2a:	68b3      	ldr	r3, [r6, #8]
  401b2c:	6083      	str	r3, [r0, #8]
  401b2e:	68f3      	ldr	r3, [r6, #12]
  401b30:	60c3      	str	r3, [r0, #12]
  401b32:	2a24      	cmp	r2, #36	; 0x24
  401b34:	d028      	beq.n	401b88 <_realloc_r+0x348>
  401b36:	f100 0310 	add.w	r3, r0, #16
  401b3a:	f106 0210 	add.w	r2, r6, #16
  401b3e:	e6c4      	b.n	4018ca <_realloc_r+0x8a>
  401b40:	f850 3c04 	ldr.w	r3, [r0, #-4]
  401b44:	f023 0303 	bic.w	r3, r3, #3
  401b48:	441c      	add	r4, r3
  401b4a:	e70a      	b.n	401962 <_realloc_r+0x122>
  401b4c:	4631      	mov	r1, r6
  401b4e:	4638      	mov	r0, r7
  401b50:	4674      	mov	r4, lr
  401b52:	46d0      	mov	r8, sl
  401b54:	f7ff fd82 	bl	40165c <memmove>
  401b58:	463e      	mov	r6, r7
  401b5a:	e702      	b.n	401962 <_realloc_r+0x122>
  401b5c:	463a      	mov	r2, r7
  401b5e:	e6f7      	b.n	401950 <_realloc_r+0x110>
  401b60:	4631      	mov	r1, r6
  401b62:	4638      	mov	r0, r7
  401b64:	461c      	mov	r4, r3
  401b66:	46d0      	mov	r8, sl
  401b68:	f7ff fd78 	bl	40165c <memmove>
  401b6c:	463e      	mov	r6, r7
  401b6e:	e6f8      	b.n	401962 <_realloc_r+0x122>
  401b70:	68b3      	ldr	r3, [r6, #8]
  401b72:	f8ca 3010 	str.w	r3, [sl, #16]
  401b76:	68f3      	ldr	r3, [r6, #12]
  401b78:	f8ca 3014 	str.w	r3, [sl, #20]
  401b7c:	2a24      	cmp	r2, #36	; 0x24
  401b7e:	d01b      	beq.n	401bb8 <_realloc_r+0x378>
  401b80:	3610      	adds	r6, #16
  401b82:	f10a 0318 	add.w	r3, sl, #24
  401b86:	e7ae      	b.n	401ae6 <_realloc_r+0x2a6>
  401b88:	6933      	ldr	r3, [r6, #16]
  401b8a:	6103      	str	r3, [r0, #16]
  401b8c:	6973      	ldr	r3, [r6, #20]
  401b8e:	6143      	str	r3, [r0, #20]
  401b90:	f106 0218 	add.w	r2, r6, #24
  401b94:	f100 0318 	add.w	r3, r0, #24
  401b98:	e697      	b.n	4018ca <_realloc_r+0x8a>
  401b9a:	bf00      	nop
  401b9c:	2000043c 	.word	0x2000043c
  401ba0:	68b1      	ldr	r1, [r6, #8]
  401ba2:	f8ca 1010 	str.w	r1, [sl, #16]
  401ba6:	68f1      	ldr	r1, [r6, #12]
  401ba8:	f8ca 1014 	str.w	r1, [sl, #20]
  401bac:	2a24      	cmp	r2, #36	; 0x24
  401bae:	d00f      	beq.n	401bd0 <_realloc_r+0x390>
  401bb0:	3610      	adds	r6, #16
  401bb2:	f10a 0218 	add.w	r2, sl, #24
  401bb6:	e6cb      	b.n	401950 <_realloc_r+0x110>
  401bb8:	6933      	ldr	r3, [r6, #16]
  401bba:	f8ca 3018 	str.w	r3, [sl, #24]
  401bbe:	6973      	ldr	r3, [r6, #20]
  401bc0:	f8ca 301c 	str.w	r3, [sl, #28]
  401bc4:	3618      	adds	r6, #24
  401bc6:	f10a 0320 	add.w	r3, sl, #32
  401bca:	e78c      	b.n	401ae6 <_realloc_r+0x2a6>
  401bcc:	463a      	mov	r2, r7
  401bce:	e764      	b.n	401a9a <_realloc_r+0x25a>
  401bd0:	6932      	ldr	r2, [r6, #16]
  401bd2:	f8ca 2018 	str.w	r2, [sl, #24]
  401bd6:	6972      	ldr	r2, [r6, #20]
  401bd8:	f8ca 201c 	str.w	r2, [sl, #28]
  401bdc:	3618      	adds	r6, #24
  401bde:	f10a 0220 	add.w	r2, sl, #32
  401be2:	e6b5      	b.n	401950 <_realloc_r+0x110>
  401be4:	4631      	mov	r1, r6
  401be6:	4638      	mov	r0, r7
  401be8:	9301      	str	r3, [sp, #4]
  401bea:	f7ff fd37 	bl	40165c <memmove>
  401bee:	9b01      	ldr	r3, [sp, #4]
  401bf0:	e759      	b.n	401aa6 <_realloc_r+0x266>
  401bf2:	68b1      	ldr	r1, [r6, #8]
  401bf4:	f8ca 1010 	str.w	r1, [sl, #16]
  401bf8:	68f1      	ldr	r1, [r6, #12]
  401bfa:	f8ca 1014 	str.w	r1, [sl, #20]
  401bfe:	2a24      	cmp	r2, #36	; 0x24
  401c00:	d003      	beq.n	401c0a <_realloc_r+0x3ca>
  401c02:	3610      	adds	r6, #16
  401c04:	f10a 0218 	add.w	r2, sl, #24
  401c08:	e747      	b.n	401a9a <_realloc_r+0x25a>
  401c0a:	6932      	ldr	r2, [r6, #16]
  401c0c:	f8ca 2018 	str.w	r2, [sl, #24]
  401c10:	6972      	ldr	r2, [r6, #20]
  401c12:	f8ca 201c 	str.w	r2, [sl, #28]
  401c16:	3618      	adds	r6, #24
  401c18:	f10a 0220 	add.w	r2, sl, #32
  401c1c:	e73d      	b.n	401a9a <_realloc_r+0x25a>
  401c1e:	bf00      	nop

00401c20 <_sbrk_r>:
  401c20:	b538      	push	{r3, r4, r5, lr}
  401c22:	4c07      	ldr	r4, [pc, #28]	; (401c40 <_sbrk_r+0x20>)
  401c24:	2300      	movs	r3, #0
  401c26:	4605      	mov	r5, r0
  401c28:	4608      	mov	r0, r1
  401c2a:	6023      	str	r3, [r4, #0]
  401c2c:	f7fe ff0e 	bl	400a4c <_sbrk>
  401c30:	1c43      	adds	r3, r0, #1
  401c32:	d000      	beq.n	401c36 <_sbrk_r+0x16>
  401c34:	bd38      	pop	{r3, r4, r5, pc}
  401c36:	6823      	ldr	r3, [r4, #0]
  401c38:	2b00      	cmp	r3, #0
  401c3a:	d0fb      	beq.n	401c34 <_sbrk_r+0x14>
  401c3c:	602b      	str	r3, [r5, #0]
  401c3e:	bd38      	pop	{r3, r4, r5, pc}
  401c40:	20000990 	.word	0x20000990

00401c44 <setbuf>:
  401c44:	2900      	cmp	r1, #0
  401c46:	bf0c      	ite	eq
  401c48:	2202      	moveq	r2, #2
  401c4a:	2200      	movne	r2, #0
  401c4c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401c50:	f000 b800 	b.w	401c54 <setvbuf>

00401c54 <setvbuf>:
  401c54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401c58:	4c51      	ldr	r4, [pc, #324]	; (401da0 <setvbuf+0x14c>)
  401c5a:	6825      	ldr	r5, [r4, #0]
  401c5c:	b083      	sub	sp, #12
  401c5e:	4604      	mov	r4, r0
  401c60:	460f      	mov	r7, r1
  401c62:	4690      	mov	r8, r2
  401c64:	461e      	mov	r6, r3
  401c66:	b115      	cbz	r5, 401c6e <setvbuf+0x1a>
  401c68:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401c6a:	2b00      	cmp	r3, #0
  401c6c:	d079      	beq.n	401d62 <setvbuf+0x10e>
  401c6e:	f1b8 0f02 	cmp.w	r8, #2
  401c72:	d004      	beq.n	401c7e <setvbuf+0x2a>
  401c74:	f1b8 0f01 	cmp.w	r8, #1
  401c78:	d87f      	bhi.n	401d7a <setvbuf+0x126>
  401c7a:	2e00      	cmp	r6, #0
  401c7c:	db7d      	blt.n	401d7a <setvbuf+0x126>
  401c7e:	4621      	mov	r1, r4
  401c80:	4628      	mov	r0, r5
  401c82:	f001 fed9 	bl	403a38 <_fflush_r>
  401c86:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401c88:	b141      	cbz	r1, 401c9c <setvbuf+0x48>
  401c8a:	f104 0340 	add.w	r3, r4, #64	; 0x40
  401c8e:	4299      	cmp	r1, r3
  401c90:	d002      	beq.n	401c98 <setvbuf+0x44>
  401c92:	4628      	mov	r0, r5
  401c94:	f002 f90e 	bl	403eb4 <_free_r>
  401c98:	2300      	movs	r3, #0
  401c9a:	6323      	str	r3, [r4, #48]	; 0x30
  401c9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401ca0:	2200      	movs	r2, #0
  401ca2:	61a2      	str	r2, [r4, #24]
  401ca4:	6062      	str	r2, [r4, #4]
  401ca6:	061a      	lsls	r2, r3, #24
  401ca8:	d454      	bmi.n	401d54 <setvbuf+0x100>
  401caa:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  401cae:	f023 0303 	bic.w	r3, r3, #3
  401cb2:	f1b8 0f02 	cmp.w	r8, #2
  401cb6:	81a3      	strh	r3, [r4, #12]
  401cb8:	d039      	beq.n	401d2e <setvbuf+0xda>
  401cba:	ab01      	add	r3, sp, #4
  401cbc:	466a      	mov	r2, sp
  401cbe:	4621      	mov	r1, r4
  401cc0:	4628      	mov	r0, r5
  401cc2:	f002 fbc9 	bl	404458 <__swhatbuf_r>
  401cc6:	89a3      	ldrh	r3, [r4, #12]
  401cc8:	4318      	orrs	r0, r3
  401cca:	81a0      	strh	r0, [r4, #12]
  401ccc:	b326      	cbz	r6, 401d18 <setvbuf+0xc4>
  401cce:	b327      	cbz	r7, 401d1a <setvbuf+0xc6>
  401cd0:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401cd2:	2b00      	cmp	r3, #0
  401cd4:	d04d      	beq.n	401d72 <setvbuf+0x11e>
  401cd6:	9b00      	ldr	r3, [sp, #0]
  401cd8:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
  401cdc:	6027      	str	r7, [r4, #0]
  401cde:	429e      	cmp	r6, r3
  401ce0:	bf1c      	itt	ne
  401ce2:	f440 6000 	orrne.w	r0, r0, #2048	; 0x800
  401ce6:	81a0      	strhne	r0, [r4, #12]
  401ce8:	f1b8 0f01 	cmp.w	r8, #1
  401cec:	bf08      	it	eq
  401cee:	f040 0001 	orreq.w	r0, r0, #1
  401cf2:	b283      	uxth	r3, r0
  401cf4:	bf08      	it	eq
  401cf6:	81a0      	strheq	r0, [r4, #12]
  401cf8:	f003 0008 	and.w	r0, r3, #8
  401cfc:	b280      	uxth	r0, r0
  401cfe:	6127      	str	r7, [r4, #16]
  401d00:	6166      	str	r6, [r4, #20]
  401d02:	b318      	cbz	r0, 401d4c <setvbuf+0xf8>
  401d04:	f013 0001 	ands.w	r0, r3, #1
  401d08:	d02f      	beq.n	401d6a <setvbuf+0x116>
  401d0a:	2000      	movs	r0, #0
  401d0c:	4276      	negs	r6, r6
  401d0e:	61a6      	str	r6, [r4, #24]
  401d10:	60a0      	str	r0, [r4, #8]
  401d12:	b003      	add	sp, #12
  401d14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401d18:	9e00      	ldr	r6, [sp, #0]
  401d1a:	4630      	mov	r0, r6
  401d1c:	f7ff f944 	bl	400fa8 <malloc>
  401d20:	4607      	mov	r7, r0
  401d22:	b368      	cbz	r0, 401d80 <setvbuf+0x12c>
  401d24:	89a3      	ldrh	r3, [r4, #12]
  401d26:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401d2a:	81a3      	strh	r3, [r4, #12]
  401d2c:	e7d0      	b.n	401cd0 <setvbuf+0x7c>
  401d2e:	2000      	movs	r0, #0
  401d30:	f104 0243 	add.w	r2, r4, #67	; 0x43
  401d34:	f043 0302 	orr.w	r3, r3, #2
  401d38:	2500      	movs	r5, #0
  401d3a:	2101      	movs	r1, #1
  401d3c:	81a3      	strh	r3, [r4, #12]
  401d3e:	60a5      	str	r5, [r4, #8]
  401d40:	6022      	str	r2, [r4, #0]
  401d42:	6122      	str	r2, [r4, #16]
  401d44:	6161      	str	r1, [r4, #20]
  401d46:	b003      	add	sp, #12
  401d48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401d4c:	60a0      	str	r0, [r4, #8]
  401d4e:	b003      	add	sp, #12
  401d50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401d54:	6921      	ldr	r1, [r4, #16]
  401d56:	4628      	mov	r0, r5
  401d58:	f002 f8ac 	bl	403eb4 <_free_r>
  401d5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401d60:	e7a3      	b.n	401caa <setvbuf+0x56>
  401d62:	4628      	mov	r0, r5
  401d64:	f001 ff0e 	bl	403b84 <__sinit>
  401d68:	e781      	b.n	401c6e <setvbuf+0x1a>
  401d6a:	60a6      	str	r6, [r4, #8]
  401d6c:	b003      	add	sp, #12
  401d6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401d72:	4628      	mov	r0, r5
  401d74:	f001 ff06 	bl	403b84 <__sinit>
  401d78:	e7ad      	b.n	401cd6 <setvbuf+0x82>
  401d7a:	f04f 30ff 	mov.w	r0, #4294967295
  401d7e:	e7e2      	b.n	401d46 <setvbuf+0xf2>
  401d80:	f8dd 9000 	ldr.w	r9, [sp]
  401d84:	45b1      	cmp	r9, r6
  401d86:	d006      	beq.n	401d96 <setvbuf+0x142>
  401d88:	4648      	mov	r0, r9
  401d8a:	f7ff f90d 	bl	400fa8 <malloc>
  401d8e:	4607      	mov	r7, r0
  401d90:	b108      	cbz	r0, 401d96 <setvbuf+0x142>
  401d92:	464e      	mov	r6, r9
  401d94:	e7c6      	b.n	401d24 <setvbuf+0xd0>
  401d96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401d9a:	f04f 30ff 	mov.w	r0, #4294967295
  401d9e:	e7c7      	b.n	401d30 <setvbuf+0xdc>
  401da0:	20000438 	.word	0x20000438
	...

00401dc0 <strlen>:
  401dc0:	f890 f000 	pld	[r0]
  401dc4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  401dc8:	f020 0107 	bic.w	r1, r0, #7
  401dcc:	f06f 0c00 	mvn.w	ip, #0
  401dd0:	f010 0407 	ands.w	r4, r0, #7
  401dd4:	f891 f020 	pld	[r1, #32]
  401dd8:	f040 8049 	bne.w	401e6e <strlen+0xae>
  401ddc:	f04f 0400 	mov.w	r4, #0
  401de0:	f06f 0007 	mvn.w	r0, #7
  401de4:	e9d1 2300 	ldrd	r2, r3, [r1]
  401de8:	f891 f040 	pld	[r1, #64]	; 0x40
  401dec:	f100 0008 	add.w	r0, r0, #8
  401df0:	fa82 f24c 	uadd8	r2, r2, ip
  401df4:	faa4 f28c 	sel	r2, r4, ip
  401df8:	fa83 f34c 	uadd8	r3, r3, ip
  401dfc:	faa2 f38c 	sel	r3, r2, ip
  401e00:	bb4b      	cbnz	r3, 401e56 <strlen+0x96>
  401e02:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  401e06:	fa82 f24c 	uadd8	r2, r2, ip
  401e0a:	f100 0008 	add.w	r0, r0, #8
  401e0e:	faa4 f28c 	sel	r2, r4, ip
  401e12:	fa83 f34c 	uadd8	r3, r3, ip
  401e16:	faa2 f38c 	sel	r3, r2, ip
  401e1a:	b9e3      	cbnz	r3, 401e56 <strlen+0x96>
  401e1c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  401e20:	fa82 f24c 	uadd8	r2, r2, ip
  401e24:	f100 0008 	add.w	r0, r0, #8
  401e28:	faa4 f28c 	sel	r2, r4, ip
  401e2c:	fa83 f34c 	uadd8	r3, r3, ip
  401e30:	faa2 f38c 	sel	r3, r2, ip
  401e34:	b97b      	cbnz	r3, 401e56 <strlen+0x96>
  401e36:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  401e3a:	f101 0120 	add.w	r1, r1, #32
  401e3e:	fa82 f24c 	uadd8	r2, r2, ip
  401e42:	f100 0008 	add.w	r0, r0, #8
  401e46:	faa4 f28c 	sel	r2, r4, ip
  401e4a:	fa83 f34c 	uadd8	r3, r3, ip
  401e4e:	faa2 f38c 	sel	r3, r2, ip
  401e52:	2b00      	cmp	r3, #0
  401e54:	d0c6      	beq.n	401de4 <strlen+0x24>
  401e56:	2a00      	cmp	r2, #0
  401e58:	bf04      	itt	eq
  401e5a:	3004      	addeq	r0, #4
  401e5c:	461a      	moveq	r2, r3
  401e5e:	ba12      	rev	r2, r2
  401e60:	fab2 f282 	clz	r2, r2
  401e64:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  401e68:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  401e6c:	4770      	bx	lr
  401e6e:	e9d1 2300 	ldrd	r2, r3, [r1]
  401e72:	f004 0503 	and.w	r5, r4, #3
  401e76:	f1c4 0000 	rsb	r0, r4, #0
  401e7a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  401e7e:	f014 0f04 	tst.w	r4, #4
  401e82:	f891 f040 	pld	[r1, #64]	; 0x40
  401e86:	fa0c f505 	lsl.w	r5, ip, r5
  401e8a:	ea62 0205 	orn	r2, r2, r5
  401e8e:	bf1c      	itt	ne
  401e90:	ea63 0305 	ornne	r3, r3, r5
  401e94:	4662      	movne	r2, ip
  401e96:	f04f 0400 	mov.w	r4, #0
  401e9a:	e7a9      	b.n	401df0 <strlen+0x30>

00401e9c <__sprint_r.part.0>:
  401e9c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  401e9e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401ea2:	049c      	lsls	r4, r3, #18
  401ea4:	4692      	mov	sl, r2
  401ea6:	d52c      	bpl.n	401f02 <__sprint_r.part.0+0x66>
  401ea8:	6893      	ldr	r3, [r2, #8]
  401eaa:	6812      	ldr	r2, [r2, #0]
  401eac:	b33b      	cbz	r3, 401efe <__sprint_r.part.0+0x62>
  401eae:	460f      	mov	r7, r1
  401eb0:	4680      	mov	r8, r0
  401eb2:	f102 0908 	add.w	r9, r2, #8
  401eb6:	e919 0060 	ldmdb	r9, {r5, r6}
  401eba:	08b6      	lsrs	r6, r6, #2
  401ebc:	d017      	beq.n	401eee <__sprint_r.part.0+0x52>
  401ebe:	3d04      	subs	r5, #4
  401ec0:	2400      	movs	r4, #0
  401ec2:	e001      	b.n	401ec8 <__sprint_r.part.0+0x2c>
  401ec4:	42a6      	cmp	r6, r4
  401ec6:	d010      	beq.n	401eea <__sprint_r.part.0+0x4e>
  401ec8:	463a      	mov	r2, r7
  401eca:	f855 1f04 	ldr.w	r1, [r5, #4]!
  401ece:	4640      	mov	r0, r8
  401ed0:	f001 fec2 	bl	403c58 <_fputwc_r>
  401ed4:	1c43      	adds	r3, r0, #1
  401ed6:	f104 0401 	add.w	r4, r4, #1
  401eda:	d1f3      	bne.n	401ec4 <__sprint_r.part.0+0x28>
  401edc:	2300      	movs	r3, #0
  401ede:	f8ca 3008 	str.w	r3, [sl, #8]
  401ee2:	f8ca 3004 	str.w	r3, [sl, #4]
  401ee6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401eea:	f8da 3008 	ldr.w	r3, [sl, #8]
  401eee:	eba3 0386 	sub.w	r3, r3, r6, lsl #2
  401ef2:	f8ca 3008 	str.w	r3, [sl, #8]
  401ef6:	f109 0908 	add.w	r9, r9, #8
  401efa:	2b00      	cmp	r3, #0
  401efc:	d1db      	bne.n	401eb6 <__sprint_r.part.0+0x1a>
  401efe:	2000      	movs	r0, #0
  401f00:	e7ec      	b.n	401edc <__sprint_r.part.0+0x40>
  401f02:	f002 f8bf 	bl	404084 <__sfvwrite_r>
  401f06:	2300      	movs	r3, #0
  401f08:	f8ca 3008 	str.w	r3, [sl, #8]
  401f0c:	f8ca 3004 	str.w	r3, [sl, #4]
  401f10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00401f14 <_vfiprintf_r>:
  401f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401f18:	b0ab      	sub	sp, #172	; 0xac
  401f1a:	461c      	mov	r4, r3
  401f1c:	9100      	str	r1, [sp, #0]
  401f1e:	4690      	mov	r8, r2
  401f20:	9304      	str	r3, [sp, #16]
  401f22:	9005      	str	r0, [sp, #20]
  401f24:	b118      	cbz	r0, 401f2e <_vfiprintf_r+0x1a>
  401f26:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401f28:	2b00      	cmp	r3, #0
  401f2a:	f000 80de 	beq.w	4020ea <_vfiprintf_r+0x1d6>
  401f2e:	9800      	ldr	r0, [sp, #0]
  401f30:	f9b0 100c 	ldrsh.w	r1, [r0, #12]
  401f34:	b28a      	uxth	r2, r1
  401f36:	0495      	lsls	r5, r2, #18
  401f38:	d407      	bmi.n	401f4a <_vfiprintf_r+0x36>
  401f3a:	6e43      	ldr	r3, [r0, #100]	; 0x64
  401f3c:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
  401f40:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  401f44:	8182      	strh	r2, [r0, #12]
  401f46:	6643      	str	r3, [r0, #100]	; 0x64
  401f48:	b292      	uxth	r2, r2
  401f4a:	0711      	lsls	r1, r2, #28
  401f4c:	f140 80b1 	bpl.w	4020b2 <_vfiprintf_r+0x19e>
  401f50:	9b00      	ldr	r3, [sp, #0]
  401f52:	691b      	ldr	r3, [r3, #16]
  401f54:	2b00      	cmp	r3, #0
  401f56:	f000 80ac 	beq.w	4020b2 <_vfiprintf_r+0x19e>
  401f5a:	f002 021a 	and.w	r2, r2, #26
  401f5e:	2a0a      	cmp	r2, #10
  401f60:	f000 80b5 	beq.w	4020ce <_vfiprintf_r+0x1ba>
  401f64:	2300      	movs	r3, #0
  401f66:	f10d 0b68 	add.w	fp, sp, #104	; 0x68
  401f6a:	9302      	str	r3, [sp, #8]
  401f6c:	930f      	str	r3, [sp, #60]	; 0x3c
  401f6e:	930e      	str	r3, [sp, #56]	; 0x38
  401f70:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  401f74:	46da      	mov	sl, fp
  401f76:	f898 3000 	ldrb.w	r3, [r8]
  401f7a:	4644      	mov	r4, r8
  401f7c:	b1fb      	cbz	r3, 401fbe <_vfiprintf_r+0xaa>
  401f7e:	2b25      	cmp	r3, #37	; 0x25
  401f80:	d102      	bne.n	401f88 <_vfiprintf_r+0x74>
  401f82:	e01c      	b.n	401fbe <_vfiprintf_r+0xaa>
  401f84:	2b25      	cmp	r3, #37	; 0x25
  401f86:	d003      	beq.n	401f90 <_vfiprintf_r+0x7c>
  401f88:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401f8c:	2b00      	cmp	r3, #0
  401f8e:	d1f9      	bne.n	401f84 <_vfiprintf_r+0x70>
  401f90:	ebc8 0504 	rsb	r5, r8, r4
  401f94:	b19d      	cbz	r5, 401fbe <_vfiprintf_r+0xaa>
  401f96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401f98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f9a:	f8ca 8000 	str.w	r8, [sl]
  401f9e:	3301      	adds	r3, #1
  401fa0:	442a      	add	r2, r5
  401fa2:	2b07      	cmp	r3, #7
  401fa4:	f8ca 5004 	str.w	r5, [sl, #4]
  401fa8:	920f      	str	r2, [sp, #60]	; 0x3c
  401faa:	930e      	str	r3, [sp, #56]	; 0x38
  401fac:	dd7b      	ble.n	4020a6 <_vfiprintf_r+0x192>
  401fae:	2a00      	cmp	r2, #0
  401fb0:	f040 8528 	bne.w	402a04 <_vfiprintf_r+0xaf0>
  401fb4:	9b02      	ldr	r3, [sp, #8]
  401fb6:	920e      	str	r2, [sp, #56]	; 0x38
  401fb8:	442b      	add	r3, r5
  401fba:	46da      	mov	sl, fp
  401fbc:	9302      	str	r3, [sp, #8]
  401fbe:	7823      	ldrb	r3, [r4, #0]
  401fc0:	2b00      	cmp	r3, #0
  401fc2:	f000 843e 	beq.w	402842 <_vfiprintf_r+0x92e>
  401fc6:	2100      	movs	r1, #0
  401fc8:	f04f 0300 	mov.w	r3, #0
  401fcc:	f04f 32ff 	mov.w	r2, #4294967295
  401fd0:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401fd4:	f104 0801 	add.w	r8, r4, #1
  401fd8:	7863      	ldrb	r3, [r4, #1]
  401fda:	9201      	str	r2, [sp, #4]
  401fdc:	4608      	mov	r0, r1
  401fde:	460e      	mov	r6, r1
  401fe0:	460c      	mov	r4, r1
  401fe2:	f108 0801 	add.w	r8, r8, #1
  401fe6:	f1a3 0220 	sub.w	r2, r3, #32
  401fea:	2a58      	cmp	r2, #88	; 0x58
  401fec:	f200 8393 	bhi.w	402716 <_vfiprintf_r+0x802>
  401ff0:	e8df f012 	tbh	[pc, r2, lsl #1]
  401ff4:	03910346 	.word	0x03910346
  401ff8:	034e0391 	.word	0x034e0391
  401ffc:	03910391 	.word	0x03910391
  402000:	03910391 	.word	0x03910391
  402004:	03910391 	.word	0x03910391
  402008:	02670289 	.word	0x02670289
  40200c:	00800391 	.word	0x00800391
  402010:	0391026c 	.word	0x0391026c
  402014:	025901c6 	.word	0x025901c6
  402018:	02590259 	.word	0x02590259
  40201c:	02590259 	.word	0x02590259
  402020:	02590259 	.word	0x02590259
  402024:	02590259 	.word	0x02590259
  402028:	03910391 	.word	0x03910391
  40202c:	03910391 	.word	0x03910391
  402030:	03910391 	.word	0x03910391
  402034:	03910391 	.word	0x03910391
  402038:	03910391 	.word	0x03910391
  40203c:	039101cb 	.word	0x039101cb
  402040:	03910391 	.word	0x03910391
  402044:	03910391 	.word	0x03910391
  402048:	03910391 	.word	0x03910391
  40204c:	03910391 	.word	0x03910391
  402050:	02140391 	.word	0x02140391
  402054:	03910391 	.word	0x03910391
  402058:	03910391 	.word	0x03910391
  40205c:	02ee0391 	.word	0x02ee0391
  402060:	03910391 	.word	0x03910391
  402064:	03910311 	.word	0x03910311
  402068:	03910391 	.word	0x03910391
  40206c:	03910391 	.word	0x03910391
  402070:	03910391 	.word	0x03910391
  402074:	03910391 	.word	0x03910391
  402078:	03340391 	.word	0x03340391
  40207c:	0391038a 	.word	0x0391038a
  402080:	03910391 	.word	0x03910391
  402084:	038a0367 	.word	0x038a0367
  402088:	03910391 	.word	0x03910391
  40208c:	0391036c 	.word	0x0391036c
  402090:	02950379 	.word	0x02950379
  402094:	02e90085 	.word	0x02e90085
  402098:	029b0391 	.word	0x029b0391
  40209c:	02ba0391 	.word	0x02ba0391
  4020a0:	03910391 	.word	0x03910391
  4020a4:	0353      	.short	0x0353
  4020a6:	f10a 0a08 	add.w	sl, sl, #8
  4020aa:	9b02      	ldr	r3, [sp, #8]
  4020ac:	442b      	add	r3, r5
  4020ae:	9302      	str	r3, [sp, #8]
  4020b0:	e785      	b.n	401fbe <_vfiprintf_r+0xaa>
  4020b2:	9900      	ldr	r1, [sp, #0]
  4020b4:	9805      	ldr	r0, [sp, #20]
  4020b6:	f001 fba7 	bl	403808 <__swsetup_r>
  4020ba:	2800      	cmp	r0, #0
  4020bc:	f040 8558 	bne.w	402b70 <_vfiprintf_r+0xc5c>
  4020c0:	9b00      	ldr	r3, [sp, #0]
  4020c2:	899a      	ldrh	r2, [r3, #12]
  4020c4:	f002 021a 	and.w	r2, r2, #26
  4020c8:	2a0a      	cmp	r2, #10
  4020ca:	f47f af4b 	bne.w	401f64 <_vfiprintf_r+0x50>
  4020ce:	9900      	ldr	r1, [sp, #0]
  4020d0:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
  4020d4:	2b00      	cmp	r3, #0
  4020d6:	f6ff af45 	blt.w	401f64 <_vfiprintf_r+0x50>
  4020da:	4623      	mov	r3, r4
  4020dc:	4642      	mov	r2, r8
  4020de:	9805      	ldr	r0, [sp, #20]
  4020e0:	f000 fe16 	bl	402d10 <__sbprintf>
  4020e4:	b02b      	add	sp, #172	; 0xac
  4020e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4020ea:	f001 fd4b 	bl	403b84 <__sinit>
  4020ee:	e71e      	b.n	401f2e <_vfiprintf_r+0x1a>
  4020f0:	4264      	negs	r4, r4
  4020f2:	9304      	str	r3, [sp, #16]
  4020f4:	f046 0604 	orr.w	r6, r6, #4
  4020f8:	f898 3000 	ldrb.w	r3, [r8]
  4020fc:	e771      	b.n	401fe2 <_vfiprintf_r+0xce>
  4020fe:	2130      	movs	r1, #48	; 0x30
  402100:	9804      	ldr	r0, [sp, #16]
  402102:	f88d 1030 	strb.w	r1, [sp, #48]	; 0x30
  402106:	9901      	ldr	r1, [sp, #4]
  402108:	9406      	str	r4, [sp, #24]
  40210a:	f04f 0300 	mov.w	r3, #0
  40210e:	2278      	movs	r2, #120	; 0x78
  402110:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  402114:	2900      	cmp	r1, #0
  402116:	4603      	mov	r3, r0
  402118:	f88d 2031 	strb.w	r2, [sp, #49]	; 0x31
  40211c:	6804      	ldr	r4, [r0, #0]
  40211e:	f103 0304 	add.w	r3, r3, #4
  402122:	f04f 0500 	mov.w	r5, #0
  402126:	f046 0202 	orr.w	r2, r6, #2
  40212a:	f2c0 8525 	blt.w	402b78 <_vfiprintf_r+0xc64>
  40212e:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  402132:	ea54 0205 	orrs.w	r2, r4, r5
  402136:	f046 0602 	orr.w	r6, r6, #2
  40213a:	9304      	str	r3, [sp, #16]
  40213c:	f040 84bf 	bne.w	402abe <_vfiprintf_r+0xbaa>
  402140:	48b3      	ldr	r0, [pc, #716]	; (402410 <_vfiprintf_r+0x4fc>)
  402142:	9b01      	ldr	r3, [sp, #4]
  402144:	2b00      	cmp	r3, #0
  402146:	f040 841c 	bne.w	402982 <_vfiprintf_r+0xa6e>
  40214a:	4699      	mov	r9, r3
  40214c:	2300      	movs	r3, #0
  40214e:	9301      	str	r3, [sp, #4]
  402150:	9303      	str	r3, [sp, #12]
  402152:	465f      	mov	r7, fp
  402154:	9b01      	ldr	r3, [sp, #4]
  402156:	9a03      	ldr	r2, [sp, #12]
  402158:	4293      	cmp	r3, r2
  40215a:	bfb8      	it	lt
  40215c:	4613      	movlt	r3, r2
  40215e:	461d      	mov	r5, r3
  402160:	f1b9 0f00 	cmp.w	r9, #0
  402164:	d000      	beq.n	402168 <_vfiprintf_r+0x254>
  402166:	3501      	adds	r5, #1
  402168:	f016 0302 	ands.w	r3, r6, #2
  40216c:	9307      	str	r3, [sp, #28]
  40216e:	bf18      	it	ne
  402170:	3502      	addne	r5, #2
  402172:	f016 0384 	ands.w	r3, r6, #132	; 0x84
  402176:	9308      	str	r3, [sp, #32]
  402178:	f040 82f1 	bne.w	40275e <_vfiprintf_r+0x84a>
  40217c:	9b06      	ldr	r3, [sp, #24]
  40217e:	1b5c      	subs	r4, r3, r5
  402180:	2c00      	cmp	r4, #0
  402182:	f340 82ec 	ble.w	40275e <_vfiprintf_r+0x84a>
  402186:	2c10      	cmp	r4, #16
  402188:	f340 8556 	ble.w	402c38 <_vfiprintf_r+0xd24>
  40218c:	f8df 9284 	ldr.w	r9, [pc, #644]	; 402414 <_vfiprintf_r+0x500>
  402190:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
  402194:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402196:	46d4      	mov	ip, sl
  402198:	2310      	movs	r3, #16
  40219a:	46c2      	mov	sl, r8
  40219c:	4670      	mov	r0, lr
  40219e:	46a8      	mov	r8, r5
  4021a0:	464d      	mov	r5, r9
  4021a2:	f8dd 9014 	ldr.w	r9, [sp, #20]
  4021a6:	e007      	b.n	4021b8 <_vfiprintf_r+0x2a4>
  4021a8:	f100 0e02 	add.w	lr, r0, #2
  4021ac:	f10c 0c08 	add.w	ip, ip, #8
  4021b0:	4608      	mov	r0, r1
  4021b2:	3c10      	subs	r4, #16
  4021b4:	2c10      	cmp	r4, #16
  4021b6:	dd13      	ble.n	4021e0 <_vfiprintf_r+0x2cc>
  4021b8:	1c41      	adds	r1, r0, #1
  4021ba:	3210      	adds	r2, #16
  4021bc:	2907      	cmp	r1, #7
  4021be:	920f      	str	r2, [sp, #60]	; 0x3c
  4021c0:	f8cc 5000 	str.w	r5, [ip]
  4021c4:	f8cc 3004 	str.w	r3, [ip, #4]
  4021c8:	910e      	str	r1, [sp, #56]	; 0x38
  4021ca:	dded      	ble.n	4021a8 <_vfiprintf_r+0x294>
  4021cc:	2a00      	cmp	r2, #0
  4021ce:	f040 82b7 	bne.w	402740 <_vfiprintf_r+0x82c>
  4021d2:	3c10      	subs	r4, #16
  4021d4:	2c10      	cmp	r4, #16
  4021d6:	4610      	mov	r0, r2
  4021d8:	f04f 0e01 	mov.w	lr, #1
  4021dc:	46dc      	mov	ip, fp
  4021de:	dceb      	bgt.n	4021b8 <_vfiprintf_r+0x2a4>
  4021e0:	46a9      	mov	r9, r5
  4021e2:	4670      	mov	r0, lr
  4021e4:	4645      	mov	r5, r8
  4021e6:	46d0      	mov	r8, sl
  4021e8:	46e2      	mov	sl, ip
  4021ea:	4422      	add	r2, r4
  4021ec:	2807      	cmp	r0, #7
  4021ee:	920f      	str	r2, [sp, #60]	; 0x3c
  4021f0:	f8ca 9000 	str.w	r9, [sl]
  4021f4:	f8ca 4004 	str.w	r4, [sl, #4]
  4021f8:	900e      	str	r0, [sp, #56]	; 0x38
  4021fa:	f300 8375 	bgt.w	4028e8 <_vfiprintf_r+0x9d4>
  4021fe:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  402202:	f10a 0a08 	add.w	sl, sl, #8
  402206:	f100 0e01 	add.w	lr, r0, #1
  40220a:	2b00      	cmp	r3, #0
  40220c:	f040 82b0 	bne.w	402770 <_vfiprintf_r+0x85c>
  402210:	9b07      	ldr	r3, [sp, #28]
  402212:	2b00      	cmp	r3, #0
  402214:	f000 82c3 	beq.w	40279e <_vfiprintf_r+0x88a>
  402218:	3202      	adds	r2, #2
  40221a:	a90c      	add	r1, sp, #48	; 0x30
  40221c:	2302      	movs	r3, #2
  40221e:	f1be 0f07 	cmp.w	lr, #7
  402222:	920f      	str	r2, [sp, #60]	; 0x3c
  402224:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  402228:	e88a 000a 	stmia.w	sl, {r1, r3}
  40222c:	f340 8378 	ble.w	402920 <_vfiprintf_r+0xa0c>
  402230:	2a00      	cmp	r2, #0
  402232:	f040 840a 	bne.w	402a4a <_vfiprintf_r+0xb36>
  402236:	9b08      	ldr	r3, [sp, #32]
  402238:	2b80      	cmp	r3, #128	; 0x80
  40223a:	f04f 0e01 	mov.w	lr, #1
  40223e:	4610      	mov	r0, r2
  402240:	46da      	mov	sl, fp
  402242:	f040 82b0 	bne.w	4027a6 <_vfiprintf_r+0x892>
  402246:	9b06      	ldr	r3, [sp, #24]
  402248:	1b5c      	subs	r4, r3, r5
  40224a:	2c00      	cmp	r4, #0
  40224c:	f340 82ab 	ble.w	4027a6 <_vfiprintf_r+0x892>
  402250:	2c10      	cmp	r4, #16
  402252:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 402418 <_vfiprintf_r+0x504>
  402256:	f340 850b 	ble.w	402c70 <_vfiprintf_r+0xd5c>
  40225a:	46d6      	mov	lr, sl
  40225c:	2310      	movs	r3, #16
  40225e:	46c2      	mov	sl, r8
  402260:	46a8      	mov	r8, r5
  402262:	464d      	mov	r5, r9
  402264:	f8dd 9014 	ldr.w	r9, [sp, #20]
  402268:	e007      	b.n	40227a <_vfiprintf_r+0x366>
  40226a:	f100 0c02 	add.w	ip, r0, #2
  40226e:	f10e 0e08 	add.w	lr, lr, #8
  402272:	4608      	mov	r0, r1
  402274:	3c10      	subs	r4, #16
  402276:	2c10      	cmp	r4, #16
  402278:	dd13      	ble.n	4022a2 <_vfiprintf_r+0x38e>
  40227a:	1c41      	adds	r1, r0, #1
  40227c:	3210      	adds	r2, #16
  40227e:	2907      	cmp	r1, #7
  402280:	920f      	str	r2, [sp, #60]	; 0x3c
  402282:	f8ce 5000 	str.w	r5, [lr]
  402286:	f8ce 3004 	str.w	r3, [lr, #4]
  40228a:	910e      	str	r1, [sp, #56]	; 0x38
  40228c:	dded      	ble.n	40226a <_vfiprintf_r+0x356>
  40228e:	2a00      	cmp	r2, #0
  402290:	f040 8315 	bne.w	4028be <_vfiprintf_r+0x9aa>
  402294:	3c10      	subs	r4, #16
  402296:	2c10      	cmp	r4, #16
  402298:	f04f 0c01 	mov.w	ip, #1
  40229c:	4610      	mov	r0, r2
  40229e:	46de      	mov	lr, fp
  4022a0:	dceb      	bgt.n	40227a <_vfiprintf_r+0x366>
  4022a2:	46a9      	mov	r9, r5
  4022a4:	4645      	mov	r5, r8
  4022a6:	46d0      	mov	r8, sl
  4022a8:	46f2      	mov	sl, lr
  4022aa:	4422      	add	r2, r4
  4022ac:	f1bc 0f07 	cmp.w	ip, #7
  4022b0:	920f      	str	r2, [sp, #60]	; 0x3c
  4022b2:	f8ca 9000 	str.w	r9, [sl]
  4022b6:	f8ca 4004 	str.w	r4, [sl, #4]
  4022ba:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
  4022be:	f300 83d2 	bgt.w	402a66 <_vfiprintf_r+0xb52>
  4022c2:	9b01      	ldr	r3, [sp, #4]
  4022c4:	9903      	ldr	r1, [sp, #12]
  4022c6:	1a5c      	subs	r4, r3, r1
  4022c8:	2c00      	cmp	r4, #0
  4022ca:	f10a 0a08 	add.w	sl, sl, #8
  4022ce:	f10c 0e01 	add.w	lr, ip, #1
  4022d2:	4660      	mov	r0, ip
  4022d4:	f300 826d 	bgt.w	4027b2 <_vfiprintf_r+0x89e>
  4022d8:	9903      	ldr	r1, [sp, #12]
  4022da:	f8ca 7000 	str.w	r7, [sl]
  4022de:	440a      	add	r2, r1
  4022e0:	f1be 0f07 	cmp.w	lr, #7
  4022e4:	920f      	str	r2, [sp, #60]	; 0x3c
  4022e6:	f8ca 1004 	str.w	r1, [sl, #4]
  4022ea:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  4022ee:	f340 82ce 	ble.w	40288e <_vfiprintf_r+0x97a>
  4022f2:	2a00      	cmp	r2, #0
  4022f4:	f040 833a 	bne.w	40296c <_vfiprintf_r+0xa58>
  4022f8:	0770      	lsls	r0, r6, #29
  4022fa:	920e      	str	r2, [sp, #56]	; 0x38
  4022fc:	d538      	bpl.n	402370 <_vfiprintf_r+0x45c>
  4022fe:	9b06      	ldr	r3, [sp, #24]
  402300:	1b5c      	subs	r4, r3, r5
  402302:	2c00      	cmp	r4, #0
  402304:	dd34      	ble.n	402370 <_vfiprintf_r+0x45c>
  402306:	46da      	mov	sl, fp
  402308:	2c10      	cmp	r4, #16
  40230a:	f340 84ab 	ble.w	402c64 <_vfiprintf_r+0xd50>
  40230e:	f8df 9104 	ldr.w	r9, [pc, #260]	; 402414 <_vfiprintf_r+0x500>
  402312:	990e      	ldr	r1, [sp, #56]	; 0x38
  402314:	464f      	mov	r7, r9
  402316:	2610      	movs	r6, #16
  402318:	f8dd 9014 	ldr.w	r9, [sp, #20]
  40231c:	e006      	b.n	40232c <_vfiprintf_r+0x418>
  40231e:	1c88      	adds	r0, r1, #2
  402320:	f10a 0a08 	add.w	sl, sl, #8
  402324:	4619      	mov	r1, r3
  402326:	3c10      	subs	r4, #16
  402328:	2c10      	cmp	r4, #16
  40232a:	dd13      	ble.n	402354 <_vfiprintf_r+0x440>
  40232c:	1c4b      	adds	r3, r1, #1
  40232e:	3210      	adds	r2, #16
  402330:	2b07      	cmp	r3, #7
  402332:	920f      	str	r2, [sp, #60]	; 0x3c
  402334:	f8ca 7000 	str.w	r7, [sl]
  402338:	f8ca 6004 	str.w	r6, [sl, #4]
  40233c:	930e      	str	r3, [sp, #56]	; 0x38
  40233e:	ddee      	ble.n	40231e <_vfiprintf_r+0x40a>
  402340:	2a00      	cmp	r2, #0
  402342:	f040 828e 	bne.w	402862 <_vfiprintf_r+0x94e>
  402346:	3c10      	subs	r4, #16
  402348:	2c10      	cmp	r4, #16
  40234a:	f04f 0001 	mov.w	r0, #1
  40234e:	4611      	mov	r1, r2
  402350:	46da      	mov	sl, fp
  402352:	dceb      	bgt.n	40232c <_vfiprintf_r+0x418>
  402354:	46b9      	mov	r9, r7
  402356:	4422      	add	r2, r4
  402358:	2807      	cmp	r0, #7
  40235a:	920f      	str	r2, [sp, #60]	; 0x3c
  40235c:	f8ca 9000 	str.w	r9, [sl]
  402360:	f8ca 4004 	str.w	r4, [sl, #4]
  402364:	900e      	str	r0, [sp, #56]	; 0x38
  402366:	f340 829b 	ble.w	4028a0 <_vfiprintf_r+0x98c>
  40236a:	2a00      	cmp	r2, #0
  40236c:	f040 8425 	bne.w	402bba <_vfiprintf_r+0xca6>
  402370:	9b02      	ldr	r3, [sp, #8]
  402372:	9a06      	ldr	r2, [sp, #24]
  402374:	42aa      	cmp	r2, r5
  402376:	bfac      	ite	ge
  402378:	189b      	addge	r3, r3, r2
  40237a:	195b      	addlt	r3, r3, r5
  40237c:	9302      	str	r3, [sp, #8]
  40237e:	e299      	b.n	4028b4 <_vfiprintf_r+0x9a0>
  402380:	f046 0680 	orr.w	r6, r6, #128	; 0x80
  402384:	f898 3000 	ldrb.w	r3, [r8]
  402388:	e62b      	b.n	401fe2 <_vfiprintf_r+0xce>
  40238a:	9406      	str	r4, [sp, #24]
  40238c:	2900      	cmp	r1, #0
  40238e:	f040 84af 	bne.w	402cf0 <_vfiprintf_r+0xddc>
  402392:	f046 0610 	orr.w	r6, r6, #16
  402396:	06b3      	lsls	r3, r6, #26
  402398:	f140 8312 	bpl.w	4029c0 <_vfiprintf_r+0xaac>
  40239c:	9904      	ldr	r1, [sp, #16]
  40239e:	3107      	adds	r1, #7
  4023a0:	f021 0107 	bic.w	r1, r1, #7
  4023a4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4023a8:	3108      	adds	r1, #8
  4023aa:	9104      	str	r1, [sp, #16]
  4023ac:	4614      	mov	r4, r2
  4023ae:	461d      	mov	r5, r3
  4023b0:	2a00      	cmp	r2, #0
  4023b2:	f173 0300 	sbcs.w	r3, r3, #0
  4023b6:	f2c0 8386 	blt.w	402ac6 <_vfiprintf_r+0xbb2>
  4023ba:	9b01      	ldr	r3, [sp, #4]
  4023bc:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  4023c0:	2b00      	cmp	r3, #0
  4023c2:	f2c0 831a 	blt.w	4029fa <_vfiprintf_r+0xae6>
  4023c6:	ea54 0305 	orrs.w	r3, r4, r5
  4023ca:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4023ce:	f000 80ed 	beq.w	4025ac <_vfiprintf_r+0x698>
  4023d2:	2d00      	cmp	r5, #0
  4023d4:	bf08      	it	eq
  4023d6:	2c0a      	cmpeq	r4, #10
  4023d8:	f0c0 80ed 	bcc.w	4025b6 <_vfiprintf_r+0x6a2>
  4023dc:	465f      	mov	r7, fp
  4023de:	4620      	mov	r0, r4
  4023e0:	4629      	mov	r1, r5
  4023e2:	220a      	movs	r2, #10
  4023e4:	2300      	movs	r3, #0
  4023e6:	f002 ff87 	bl	4052f8 <__aeabi_uldivmod>
  4023ea:	3230      	adds	r2, #48	; 0x30
  4023ec:	f807 2d01 	strb.w	r2, [r7, #-1]!
  4023f0:	4620      	mov	r0, r4
  4023f2:	4629      	mov	r1, r5
  4023f4:	2300      	movs	r3, #0
  4023f6:	220a      	movs	r2, #10
  4023f8:	f002 ff7e 	bl	4052f8 <__aeabi_uldivmod>
  4023fc:	4604      	mov	r4, r0
  4023fe:	460d      	mov	r5, r1
  402400:	ea54 0305 	orrs.w	r3, r4, r5
  402404:	d1eb      	bne.n	4023de <_vfiprintf_r+0x4ca>
  402406:	ebc7 030b 	rsb	r3, r7, fp
  40240a:	9303      	str	r3, [sp, #12]
  40240c:	e6a2      	b.n	402154 <_vfiprintf_r+0x240>
  40240e:	bf00      	nop
  402410:	00405730 	.word	0x00405730
  402414:	0040574c 	.word	0x0040574c
  402418:	0040570c 	.word	0x0040570c
  40241c:	9406      	str	r4, [sp, #24]
  40241e:	2900      	cmp	r1, #0
  402420:	f040 8462 	bne.w	402ce8 <_vfiprintf_r+0xdd4>
  402424:	f046 0610 	orr.w	r6, r6, #16
  402428:	f016 0320 	ands.w	r3, r6, #32
  40242c:	f000 82ae 	beq.w	40298c <_vfiprintf_r+0xa78>
  402430:	9b04      	ldr	r3, [sp, #16]
  402432:	3307      	adds	r3, #7
  402434:	f023 0307 	bic.w	r3, r3, #7
  402438:	f04f 0200 	mov.w	r2, #0
  40243c:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  402440:	e9d3 4500 	ldrd	r4, r5, [r3]
  402444:	f103 0208 	add.w	r2, r3, #8
  402448:	9b01      	ldr	r3, [sp, #4]
  40244a:	9204      	str	r2, [sp, #16]
  40244c:	2b00      	cmp	r3, #0
  40244e:	f2c0 8174 	blt.w	40273a <_vfiprintf_r+0x826>
  402452:	ea54 0305 	orrs.w	r3, r4, r5
  402456:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  40245a:	f040 816e 	bne.w	40273a <_vfiprintf_r+0x826>
  40245e:	9b01      	ldr	r3, [sp, #4]
  402460:	2b00      	cmp	r3, #0
  402462:	f000 8430 	beq.w	402cc6 <_vfiprintf_r+0xdb2>
  402466:	f04f 0900 	mov.w	r9, #0
  40246a:	2400      	movs	r4, #0
  40246c:	2500      	movs	r5, #0
  40246e:	465f      	mov	r7, fp
  402470:	08e2      	lsrs	r2, r4, #3
  402472:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402476:	08e9      	lsrs	r1, r5, #3
  402478:	f004 0307 	and.w	r3, r4, #7
  40247c:	460d      	mov	r5, r1
  40247e:	4614      	mov	r4, r2
  402480:	3330      	adds	r3, #48	; 0x30
  402482:	ea54 0205 	orrs.w	r2, r4, r5
  402486:	f807 3d01 	strb.w	r3, [r7, #-1]!
  40248a:	d1f1      	bne.n	402470 <_vfiprintf_r+0x55c>
  40248c:	07f4      	lsls	r4, r6, #31
  40248e:	d5ba      	bpl.n	402406 <_vfiprintf_r+0x4f2>
  402490:	2b30      	cmp	r3, #48	; 0x30
  402492:	d0b8      	beq.n	402406 <_vfiprintf_r+0x4f2>
  402494:	2230      	movs	r2, #48	; 0x30
  402496:	1e7b      	subs	r3, r7, #1
  402498:	f807 2c01 	strb.w	r2, [r7, #-1]
  40249c:	ebc3 020b 	rsb	r2, r3, fp
  4024a0:	9203      	str	r2, [sp, #12]
  4024a2:	461f      	mov	r7, r3
  4024a4:	e656      	b.n	402154 <_vfiprintf_r+0x240>
  4024a6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4024aa:	2400      	movs	r4, #0
  4024ac:	f818 3b01 	ldrb.w	r3, [r8], #1
  4024b0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4024b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
  4024b8:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4024bc:	2a09      	cmp	r2, #9
  4024be:	d9f5      	bls.n	4024ac <_vfiprintf_r+0x598>
  4024c0:	e591      	b.n	401fe6 <_vfiprintf_r+0xd2>
  4024c2:	f898 3000 	ldrb.w	r3, [r8]
  4024c6:	2101      	movs	r1, #1
  4024c8:	202b      	movs	r0, #43	; 0x2b
  4024ca:	e58a      	b.n	401fe2 <_vfiprintf_r+0xce>
  4024cc:	f898 3000 	ldrb.w	r3, [r8]
  4024d0:	2b2a      	cmp	r3, #42	; 0x2a
  4024d2:	f108 0501 	add.w	r5, r8, #1
  4024d6:	f000 83dd 	beq.w	402c94 <_vfiprintf_r+0xd80>
  4024da:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4024de:	2a09      	cmp	r2, #9
  4024e0:	46a8      	mov	r8, r5
  4024e2:	bf98      	it	ls
  4024e4:	2500      	movls	r5, #0
  4024e6:	f200 83ce 	bhi.w	402c86 <_vfiprintf_r+0xd72>
  4024ea:	f818 3b01 	ldrb.w	r3, [r8], #1
  4024ee:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  4024f2:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  4024f6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4024fa:	2a09      	cmp	r2, #9
  4024fc:	d9f5      	bls.n	4024ea <_vfiprintf_r+0x5d6>
  4024fe:	ea45 72e5 	orr.w	r2, r5, r5, asr #31
  402502:	9201      	str	r2, [sp, #4]
  402504:	e56f      	b.n	401fe6 <_vfiprintf_r+0xd2>
  402506:	9a04      	ldr	r2, [sp, #16]
  402508:	6814      	ldr	r4, [r2, #0]
  40250a:	4613      	mov	r3, r2
  40250c:	2c00      	cmp	r4, #0
  40250e:	f103 0304 	add.w	r3, r3, #4
  402512:	f6ff aded 	blt.w	4020f0 <_vfiprintf_r+0x1dc>
  402516:	9304      	str	r3, [sp, #16]
  402518:	f898 3000 	ldrb.w	r3, [r8]
  40251c:	e561      	b.n	401fe2 <_vfiprintf_r+0xce>
  40251e:	9406      	str	r4, [sp, #24]
  402520:	2900      	cmp	r1, #0
  402522:	d081      	beq.n	402428 <_vfiprintf_r+0x514>
  402524:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402528:	e77e      	b.n	402428 <_vfiprintf_r+0x514>
  40252a:	9a04      	ldr	r2, [sp, #16]
  40252c:	9406      	str	r4, [sp, #24]
  40252e:	6817      	ldr	r7, [r2, #0]
  402530:	f04f 0300 	mov.w	r3, #0
  402534:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  402538:	1d14      	adds	r4, r2, #4
  40253a:	9b01      	ldr	r3, [sp, #4]
  40253c:	2f00      	cmp	r7, #0
  40253e:	f000 8386 	beq.w	402c4e <_vfiprintf_r+0xd3a>
  402542:	2b00      	cmp	r3, #0
  402544:	f2c0 835f 	blt.w	402c06 <_vfiprintf_r+0xcf2>
  402548:	461a      	mov	r2, r3
  40254a:	2100      	movs	r1, #0
  40254c:	4638      	mov	r0, r7
  40254e:	f002 f83f 	bl	4045d0 <memchr>
  402552:	2800      	cmp	r0, #0
  402554:	f000 838f 	beq.w	402c76 <_vfiprintf_r+0xd62>
  402558:	1bc3      	subs	r3, r0, r7
  40255a:	9303      	str	r3, [sp, #12]
  40255c:	2300      	movs	r3, #0
  40255e:	9404      	str	r4, [sp, #16]
  402560:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  402564:	9301      	str	r3, [sp, #4]
  402566:	e5f5      	b.n	402154 <_vfiprintf_r+0x240>
  402568:	9406      	str	r4, [sp, #24]
  40256a:	2900      	cmp	r1, #0
  40256c:	f040 83b9 	bne.w	402ce2 <_vfiprintf_r+0xdce>
  402570:	f016 0920 	ands.w	r9, r6, #32
  402574:	d135      	bne.n	4025e2 <_vfiprintf_r+0x6ce>
  402576:	f016 0310 	ands.w	r3, r6, #16
  40257a:	d103      	bne.n	402584 <_vfiprintf_r+0x670>
  40257c:	f016 0940 	ands.w	r9, r6, #64	; 0x40
  402580:	f040 832a 	bne.w	402bd8 <_vfiprintf_r+0xcc4>
  402584:	9a04      	ldr	r2, [sp, #16]
  402586:	4613      	mov	r3, r2
  402588:	6814      	ldr	r4, [r2, #0]
  40258a:	9a01      	ldr	r2, [sp, #4]
  40258c:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  402590:	2a00      	cmp	r2, #0
  402592:	f103 0304 	add.w	r3, r3, #4
  402596:	f04f 0500 	mov.w	r5, #0
  40259a:	f2c0 8332 	blt.w	402c02 <_vfiprintf_r+0xcee>
  40259e:	ea54 0205 	orrs.w	r2, r4, r5
  4025a2:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4025a6:	9304      	str	r3, [sp, #16]
  4025a8:	f47f af13 	bne.w	4023d2 <_vfiprintf_r+0x4be>
  4025ac:	9b01      	ldr	r3, [sp, #4]
  4025ae:	2b00      	cmp	r3, #0
  4025b0:	f43f adcc 	beq.w	40214c <_vfiprintf_r+0x238>
  4025b4:	2400      	movs	r4, #0
  4025b6:	af2a      	add	r7, sp, #168	; 0xa8
  4025b8:	3430      	adds	r4, #48	; 0x30
  4025ba:	f807 4d41 	strb.w	r4, [r7, #-65]!
  4025be:	ebc7 030b 	rsb	r3, r7, fp
  4025c2:	9303      	str	r3, [sp, #12]
  4025c4:	e5c6      	b.n	402154 <_vfiprintf_r+0x240>
  4025c6:	f046 0620 	orr.w	r6, r6, #32
  4025ca:	f898 3000 	ldrb.w	r3, [r8]
  4025ce:	e508      	b.n	401fe2 <_vfiprintf_r+0xce>
  4025d0:	9406      	str	r4, [sp, #24]
  4025d2:	2900      	cmp	r1, #0
  4025d4:	f040 836e 	bne.w	402cb4 <_vfiprintf_r+0xda0>
  4025d8:	f046 0610 	orr.w	r6, r6, #16
  4025dc:	f016 0920 	ands.w	r9, r6, #32
  4025e0:	d0c9      	beq.n	402576 <_vfiprintf_r+0x662>
  4025e2:	9b04      	ldr	r3, [sp, #16]
  4025e4:	3307      	adds	r3, #7
  4025e6:	f023 0307 	bic.w	r3, r3, #7
  4025ea:	f04f 0200 	mov.w	r2, #0
  4025ee:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  4025f2:	e9d3 4500 	ldrd	r4, r5, [r3]
  4025f6:	f103 0208 	add.w	r2, r3, #8
  4025fa:	9b01      	ldr	r3, [sp, #4]
  4025fc:	9204      	str	r2, [sp, #16]
  4025fe:	2b00      	cmp	r3, #0
  402600:	f2c0 81f9 	blt.w	4029f6 <_vfiprintf_r+0xae2>
  402604:	ea54 0305 	orrs.w	r3, r4, r5
  402608:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  40260c:	f04f 0900 	mov.w	r9, #0
  402610:	f47f aedf 	bne.w	4023d2 <_vfiprintf_r+0x4be>
  402614:	e7ca      	b.n	4025ac <_vfiprintf_r+0x698>
  402616:	9406      	str	r4, [sp, #24]
  402618:	2900      	cmp	r1, #0
  40261a:	f040 8351 	bne.w	402cc0 <_vfiprintf_r+0xdac>
  40261e:	06b2      	lsls	r2, r6, #26
  402620:	48ae      	ldr	r0, [pc, #696]	; (4028dc <_vfiprintf_r+0x9c8>)
  402622:	d541      	bpl.n	4026a8 <_vfiprintf_r+0x794>
  402624:	9a04      	ldr	r2, [sp, #16]
  402626:	3207      	adds	r2, #7
  402628:	f022 0207 	bic.w	r2, r2, #7
  40262c:	e9d2 4500 	ldrd	r4, r5, [r2]
  402630:	f102 0108 	add.w	r1, r2, #8
  402634:	9104      	str	r1, [sp, #16]
  402636:	f016 0901 	ands.w	r9, r6, #1
  40263a:	f000 8177 	beq.w	40292c <_vfiprintf_r+0xa18>
  40263e:	ea54 0205 	orrs.w	r2, r4, r5
  402642:	f040 8226 	bne.w	402a92 <_vfiprintf_r+0xb7e>
  402646:	f04f 0300 	mov.w	r3, #0
  40264a:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  40264e:	9b01      	ldr	r3, [sp, #4]
  402650:	2b00      	cmp	r3, #0
  402652:	f2c0 8196 	blt.w	402982 <_vfiprintf_r+0xa6e>
  402656:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  40265a:	e572      	b.n	402142 <_vfiprintf_r+0x22e>
  40265c:	9a04      	ldr	r2, [sp, #16]
  40265e:	9406      	str	r4, [sp, #24]
  402660:	6813      	ldr	r3, [r2, #0]
  402662:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  402666:	4613      	mov	r3, r2
  402668:	f04f 0100 	mov.w	r1, #0
  40266c:	2501      	movs	r5, #1
  40266e:	3304      	adds	r3, #4
  402670:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  402674:	9304      	str	r3, [sp, #16]
  402676:	9503      	str	r5, [sp, #12]
  402678:	af10      	add	r7, sp, #64	; 0x40
  40267a:	2300      	movs	r3, #0
  40267c:	9301      	str	r3, [sp, #4]
  40267e:	e573      	b.n	402168 <_vfiprintf_r+0x254>
  402680:	f898 3000 	ldrb.w	r3, [r8]
  402684:	2800      	cmp	r0, #0
  402686:	f47f acac 	bne.w	401fe2 <_vfiprintf_r+0xce>
  40268a:	2101      	movs	r1, #1
  40268c:	2020      	movs	r0, #32
  40268e:	e4a8      	b.n	401fe2 <_vfiprintf_r+0xce>
  402690:	f046 0601 	orr.w	r6, r6, #1
  402694:	f898 3000 	ldrb.w	r3, [r8]
  402698:	e4a3      	b.n	401fe2 <_vfiprintf_r+0xce>
  40269a:	9406      	str	r4, [sp, #24]
  40269c:	2900      	cmp	r1, #0
  40269e:	f040 830c 	bne.w	402cba <_vfiprintf_r+0xda6>
  4026a2:	06b2      	lsls	r2, r6, #26
  4026a4:	488e      	ldr	r0, [pc, #568]	; (4028e0 <_vfiprintf_r+0x9cc>)
  4026a6:	d4bd      	bmi.n	402624 <_vfiprintf_r+0x710>
  4026a8:	9904      	ldr	r1, [sp, #16]
  4026aa:	06f7      	lsls	r7, r6, #27
  4026ac:	460a      	mov	r2, r1
  4026ae:	f100 819d 	bmi.w	4029ec <_vfiprintf_r+0xad8>
  4026b2:	0675      	lsls	r5, r6, #25
  4026b4:	f140 819a 	bpl.w	4029ec <_vfiprintf_r+0xad8>
  4026b8:	3204      	adds	r2, #4
  4026ba:	880c      	ldrh	r4, [r1, #0]
  4026bc:	9204      	str	r2, [sp, #16]
  4026be:	2500      	movs	r5, #0
  4026c0:	e7b9      	b.n	402636 <_vfiprintf_r+0x722>
  4026c2:	f046 0640 	orr.w	r6, r6, #64	; 0x40
  4026c6:	f898 3000 	ldrb.w	r3, [r8]
  4026ca:	e48a      	b.n	401fe2 <_vfiprintf_r+0xce>
  4026cc:	f898 3000 	ldrb.w	r3, [r8]
  4026d0:	2b6c      	cmp	r3, #108	; 0x6c
  4026d2:	bf03      	ittte	eq
  4026d4:	f898 3001 	ldrbeq.w	r3, [r8, #1]
  4026d8:	f046 0620 	orreq.w	r6, r6, #32
  4026dc:	f108 0801 	addeq.w	r8, r8, #1
  4026e0:	f046 0610 	orrne.w	r6, r6, #16
  4026e4:	e47d      	b.n	401fe2 <_vfiprintf_r+0xce>
  4026e6:	2900      	cmp	r1, #0
  4026e8:	f040 8309 	bne.w	402cfe <_vfiprintf_r+0xdea>
  4026ec:	06b4      	lsls	r4, r6, #26
  4026ee:	f140 821c 	bpl.w	402b2a <_vfiprintf_r+0xc16>
  4026f2:	9a04      	ldr	r2, [sp, #16]
  4026f4:	9902      	ldr	r1, [sp, #8]
  4026f6:	6813      	ldr	r3, [r2, #0]
  4026f8:	17cd      	asrs	r5, r1, #31
  4026fa:	4608      	mov	r0, r1
  4026fc:	3204      	adds	r2, #4
  4026fe:	4629      	mov	r1, r5
  402700:	9204      	str	r2, [sp, #16]
  402702:	e9c3 0100 	strd	r0, r1, [r3]
  402706:	e436      	b.n	401f76 <_vfiprintf_r+0x62>
  402708:	9406      	str	r4, [sp, #24]
  40270a:	2900      	cmp	r1, #0
  40270c:	f43f ae43 	beq.w	402396 <_vfiprintf_r+0x482>
  402710:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402714:	e63f      	b.n	402396 <_vfiprintf_r+0x482>
  402716:	9406      	str	r4, [sp, #24]
  402718:	2900      	cmp	r1, #0
  40271a:	f040 82ed 	bne.w	402cf8 <_vfiprintf_r+0xde4>
  40271e:	2b00      	cmp	r3, #0
  402720:	f000 808f 	beq.w	402842 <_vfiprintf_r+0x92e>
  402724:	2501      	movs	r5, #1
  402726:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  40272a:	f04f 0300 	mov.w	r3, #0
  40272e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  402732:	9503      	str	r5, [sp, #12]
  402734:	af10      	add	r7, sp, #64	; 0x40
  402736:	e7a0      	b.n	40267a <_vfiprintf_r+0x766>
  402738:	9304      	str	r3, [sp, #16]
  40273a:	f04f 0900 	mov.w	r9, #0
  40273e:	e696      	b.n	40246e <_vfiprintf_r+0x55a>
  402740:	aa0d      	add	r2, sp, #52	; 0x34
  402742:	9900      	ldr	r1, [sp, #0]
  402744:	9309      	str	r3, [sp, #36]	; 0x24
  402746:	4648      	mov	r0, r9
  402748:	f7ff fba8 	bl	401e9c <__sprint_r.part.0>
  40274c:	2800      	cmp	r0, #0
  40274e:	d17f      	bne.n	402850 <_vfiprintf_r+0x93c>
  402750:	980e      	ldr	r0, [sp, #56]	; 0x38
  402752:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402754:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402756:	f100 0e01 	add.w	lr, r0, #1
  40275a:	46dc      	mov	ip, fp
  40275c:	e529      	b.n	4021b2 <_vfiprintf_r+0x29e>
  40275e:	980e      	ldr	r0, [sp, #56]	; 0x38
  402760:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402762:	f100 0e01 	add.w	lr, r0, #1
  402766:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  40276a:	2b00      	cmp	r3, #0
  40276c:	f43f ad50 	beq.w	402210 <_vfiprintf_r+0x2fc>
  402770:	3201      	adds	r2, #1
  402772:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  402776:	2301      	movs	r3, #1
  402778:	f1be 0f07 	cmp.w	lr, #7
  40277c:	920f      	str	r2, [sp, #60]	; 0x3c
  40277e:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  402782:	e88a 000a 	stmia.w	sl, {r1, r3}
  402786:	f340 80bf 	ble.w	402908 <_vfiprintf_r+0x9f4>
  40278a:	2a00      	cmp	r2, #0
  40278c:	f040 814e 	bne.w	402a2c <_vfiprintf_r+0xb18>
  402790:	9907      	ldr	r1, [sp, #28]
  402792:	2900      	cmp	r1, #0
  402794:	f040 80be 	bne.w	402914 <_vfiprintf_r+0xa00>
  402798:	469e      	mov	lr, r3
  40279a:	4610      	mov	r0, r2
  40279c:	46da      	mov	sl, fp
  40279e:	9b08      	ldr	r3, [sp, #32]
  4027a0:	2b80      	cmp	r3, #128	; 0x80
  4027a2:	f43f ad50 	beq.w	402246 <_vfiprintf_r+0x332>
  4027a6:	9b01      	ldr	r3, [sp, #4]
  4027a8:	9903      	ldr	r1, [sp, #12]
  4027aa:	1a5c      	subs	r4, r3, r1
  4027ac:	2c00      	cmp	r4, #0
  4027ae:	f77f ad93 	ble.w	4022d8 <_vfiprintf_r+0x3c4>
  4027b2:	2c10      	cmp	r4, #16
  4027b4:	f8df 912c 	ldr.w	r9, [pc, #300]	; 4028e4 <_vfiprintf_r+0x9d0>
  4027b8:	dd25      	ble.n	402806 <_vfiprintf_r+0x8f2>
  4027ba:	46d4      	mov	ip, sl
  4027bc:	2310      	movs	r3, #16
  4027be:	46c2      	mov	sl, r8
  4027c0:	46a8      	mov	r8, r5
  4027c2:	464d      	mov	r5, r9
  4027c4:	f8dd 9014 	ldr.w	r9, [sp, #20]
  4027c8:	e007      	b.n	4027da <_vfiprintf_r+0x8c6>
  4027ca:	f100 0e02 	add.w	lr, r0, #2
  4027ce:	f10c 0c08 	add.w	ip, ip, #8
  4027d2:	4608      	mov	r0, r1
  4027d4:	3c10      	subs	r4, #16
  4027d6:	2c10      	cmp	r4, #16
  4027d8:	dd11      	ble.n	4027fe <_vfiprintf_r+0x8ea>
  4027da:	1c41      	adds	r1, r0, #1
  4027dc:	3210      	adds	r2, #16
  4027de:	2907      	cmp	r1, #7
  4027e0:	920f      	str	r2, [sp, #60]	; 0x3c
  4027e2:	f8cc 5000 	str.w	r5, [ip]
  4027e6:	f8cc 3004 	str.w	r3, [ip, #4]
  4027ea:	910e      	str	r1, [sp, #56]	; 0x38
  4027ec:	dded      	ble.n	4027ca <_vfiprintf_r+0x8b6>
  4027ee:	b9d2      	cbnz	r2, 402826 <_vfiprintf_r+0x912>
  4027f0:	3c10      	subs	r4, #16
  4027f2:	2c10      	cmp	r4, #16
  4027f4:	f04f 0e01 	mov.w	lr, #1
  4027f8:	4610      	mov	r0, r2
  4027fa:	46dc      	mov	ip, fp
  4027fc:	dced      	bgt.n	4027da <_vfiprintf_r+0x8c6>
  4027fe:	46a9      	mov	r9, r5
  402800:	4645      	mov	r5, r8
  402802:	46d0      	mov	r8, sl
  402804:	46e2      	mov	sl, ip
  402806:	4422      	add	r2, r4
  402808:	f1be 0f07 	cmp.w	lr, #7
  40280c:	920f      	str	r2, [sp, #60]	; 0x3c
  40280e:	f8ca 9000 	str.w	r9, [sl]
  402812:	f8ca 4004 	str.w	r4, [sl, #4]
  402816:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  40281a:	dc2e      	bgt.n	40287a <_vfiprintf_r+0x966>
  40281c:	f10a 0a08 	add.w	sl, sl, #8
  402820:	f10e 0e01 	add.w	lr, lr, #1
  402824:	e558      	b.n	4022d8 <_vfiprintf_r+0x3c4>
  402826:	aa0d      	add	r2, sp, #52	; 0x34
  402828:	9900      	ldr	r1, [sp, #0]
  40282a:	9301      	str	r3, [sp, #4]
  40282c:	4648      	mov	r0, r9
  40282e:	f7ff fb35 	bl	401e9c <__sprint_r.part.0>
  402832:	b968      	cbnz	r0, 402850 <_vfiprintf_r+0x93c>
  402834:	980e      	ldr	r0, [sp, #56]	; 0x38
  402836:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402838:	9b01      	ldr	r3, [sp, #4]
  40283a:	f100 0e01 	add.w	lr, r0, #1
  40283e:	46dc      	mov	ip, fp
  402840:	e7c8      	b.n	4027d4 <_vfiprintf_r+0x8c0>
  402842:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  402844:	b123      	cbz	r3, 402850 <_vfiprintf_r+0x93c>
  402846:	9805      	ldr	r0, [sp, #20]
  402848:	9900      	ldr	r1, [sp, #0]
  40284a:	aa0d      	add	r2, sp, #52	; 0x34
  40284c:	f7ff fb26 	bl	401e9c <__sprint_r.part.0>
  402850:	9b00      	ldr	r3, [sp, #0]
  402852:	899b      	ldrh	r3, [r3, #12]
  402854:	065a      	lsls	r2, r3, #25
  402856:	f100 818b 	bmi.w	402b70 <_vfiprintf_r+0xc5c>
  40285a:	9802      	ldr	r0, [sp, #8]
  40285c:	b02b      	add	sp, #172	; 0xac
  40285e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402862:	aa0d      	add	r2, sp, #52	; 0x34
  402864:	9900      	ldr	r1, [sp, #0]
  402866:	4648      	mov	r0, r9
  402868:	f7ff fb18 	bl	401e9c <__sprint_r.part.0>
  40286c:	2800      	cmp	r0, #0
  40286e:	d1ef      	bne.n	402850 <_vfiprintf_r+0x93c>
  402870:	990e      	ldr	r1, [sp, #56]	; 0x38
  402872:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402874:	1c48      	adds	r0, r1, #1
  402876:	46da      	mov	sl, fp
  402878:	e555      	b.n	402326 <_vfiprintf_r+0x412>
  40287a:	2a00      	cmp	r2, #0
  40287c:	f040 80fb 	bne.w	402a76 <_vfiprintf_r+0xb62>
  402880:	9a03      	ldr	r2, [sp, #12]
  402882:	921b      	str	r2, [sp, #108]	; 0x6c
  402884:	2301      	movs	r3, #1
  402886:	920f      	str	r2, [sp, #60]	; 0x3c
  402888:	971a      	str	r7, [sp, #104]	; 0x68
  40288a:	930e      	str	r3, [sp, #56]	; 0x38
  40288c:	46da      	mov	sl, fp
  40288e:	f10a 0a08 	add.w	sl, sl, #8
  402892:	0771      	lsls	r1, r6, #29
  402894:	d504      	bpl.n	4028a0 <_vfiprintf_r+0x98c>
  402896:	9b06      	ldr	r3, [sp, #24]
  402898:	1b5c      	subs	r4, r3, r5
  40289a:	2c00      	cmp	r4, #0
  40289c:	f73f ad34 	bgt.w	402308 <_vfiprintf_r+0x3f4>
  4028a0:	9b02      	ldr	r3, [sp, #8]
  4028a2:	9906      	ldr	r1, [sp, #24]
  4028a4:	42a9      	cmp	r1, r5
  4028a6:	bfac      	ite	ge
  4028a8:	185b      	addge	r3, r3, r1
  4028aa:	195b      	addlt	r3, r3, r5
  4028ac:	9302      	str	r3, [sp, #8]
  4028ae:	2a00      	cmp	r2, #0
  4028b0:	f040 80b3 	bne.w	402a1a <_vfiprintf_r+0xb06>
  4028b4:	2300      	movs	r3, #0
  4028b6:	930e      	str	r3, [sp, #56]	; 0x38
  4028b8:	46da      	mov	sl, fp
  4028ba:	f7ff bb5c 	b.w	401f76 <_vfiprintf_r+0x62>
  4028be:	aa0d      	add	r2, sp, #52	; 0x34
  4028c0:	9900      	ldr	r1, [sp, #0]
  4028c2:	9307      	str	r3, [sp, #28]
  4028c4:	4648      	mov	r0, r9
  4028c6:	f7ff fae9 	bl	401e9c <__sprint_r.part.0>
  4028ca:	2800      	cmp	r0, #0
  4028cc:	d1c0      	bne.n	402850 <_vfiprintf_r+0x93c>
  4028ce:	980e      	ldr	r0, [sp, #56]	; 0x38
  4028d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4028d2:	9b07      	ldr	r3, [sp, #28]
  4028d4:	f100 0c01 	add.w	ip, r0, #1
  4028d8:	46de      	mov	lr, fp
  4028da:	e4cb      	b.n	402274 <_vfiprintf_r+0x360>
  4028dc:	0040571c 	.word	0x0040571c
  4028e0:	00405730 	.word	0x00405730
  4028e4:	0040570c 	.word	0x0040570c
  4028e8:	2a00      	cmp	r2, #0
  4028ea:	f040 8133 	bne.w	402b54 <_vfiprintf_r+0xc40>
  4028ee:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  4028f2:	2b00      	cmp	r3, #0
  4028f4:	f000 80f5 	beq.w	402ae2 <_vfiprintf_r+0xbce>
  4028f8:	2301      	movs	r3, #1
  4028fa:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  4028fe:	461a      	mov	r2, r3
  402900:	931b      	str	r3, [sp, #108]	; 0x6c
  402902:	469e      	mov	lr, r3
  402904:	911a      	str	r1, [sp, #104]	; 0x68
  402906:	46da      	mov	sl, fp
  402908:	4670      	mov	r0, lr
  40290a:	f10a 0a08 	add.w	sl, sl, #8
  40290e:	f10e 0e01 	add.w	lr, lr, #1
  402912:	e47d      	b.n	402210 <_vfiprintf_r+0x2fc>
  402914:	a90c      	add	r1, sp, #48	; 0x30
  402916:	2202      	movs	r2, #2
  402918:	469e      	mov	lr, r3
  40291a:	911a      	str	r1, [sp, #104]	; 0x68
  40291c:	921b      	str	r2, [sp, #108]	; 0x6c
  40291e:	46da      	mov	sl, fp
  402920:	4670      	mov	r0, lr
  402922:	f10a 0a08 	add.w	sl, sl, #8
  402926:	f10e 0e01 	add.w	lr, lr, #1
  40292a:	e738      	b.n	40279e <_vfiprintf_r+0x88a>
  40292c:	9b01      	ldr	r3, [sp, #4]
  40292e:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  402932:	2b00      	cmp	r3, #0
  402934:	f2c0 812a 	blt.w	402b8c <_vfiprintf_r+0xc78>
  402938:	ea54 0305 	orrs.w	r3, r4, r5
  40293c:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  402940:	f43f abff 	beq.w	402142 <_vfiprintf_r+0x22e>
  402944:	465f      	mov	r7, fp
  402946:	0923      	lsrs	r3, r4, #4
  402948:	f004 010f 	and.w	r1, r4, #15
  40294c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402950:	092a      	lsrs	r2, r5, #4
  402952:	461c      	mov	r4, r3
  402954:	4615      	mov	r5, r2
  402956:	5c43      	ldrb	r3, [r0, r1]
  402958:	f807 3d01 	strb.w	r3, [r7, #-1]!
  40295c:	ea54 0305 	orrs.w	r3, r4, r5
  402960:	d1f1      	bne.n	402946 <_vfiprintf_r+0xa32>
  402962:	ebc7 030b 	rsb	r3, r7, fp
  402966:	9303      	str	r3, [sp, #12]
  402968:	f7ff bbf4 	b.w	402154 <_vfiprintf_r+0x240>
  40296c:	aa0d      	add	r2, sp, #52	; 0x34
  40296e:	9900      	ldr	r1, [sp, #0]
  402970:	9805      	ldr	r0, [sp, #20]
  402972:	f7ff fa93 	bl	401e9c <__sprint_r.part.0>
  402976:	2800      	cmp	r0, #0
  402978:	f47f af6a 	bne.w	402850 <_vfiprintf_r+0x93c>
  40297c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40297e:	46da      	mov	sl, fp
  402980:	e787      	b.n	402892 <_vfiprintf_r+0x97e>
  402982:	f04f 0900 	mov.w	r9, #0
  402986:	2400      	movs	r4, #0
  402988:	2500      	movs	r5, #0
  40298a:	e7db      	b.n	402944 <_vfiprintf_r+0xa30>
  40298c:	f016 0210 	ands.w	r2, r6, #16
  402990:	f000 80b2 	beq.w	402af8 <_vfiprintf_r+0xbe4>
  402994:	9904      	ldr	r1, [sp, #16]
  402996:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  40299a:	460a      	mov	r2, r1
  40299c:	680c      	ldr	r4, [r1, #0]
  40299e:	9901      	ldr	r1, [sp, #4]
  4029a0:	2900      	cmp	r1, #0
  4029a2:	f102 0204 	add.w	r2, r2, #4
  4029a6:	f04f 0500 	mov.w	r5, #0
  4029aa:	f2c0 8159 	blt.w	402c60 <_vfiprintf_r+0xd4c>
  4029ae:	ea54 0105 	orrs.w	r1, r4, r5
  4029b2:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4029b6:	9204      	str	r2, [sp, #16]
  4029b8:	f43f ad51 	beq.w	40245e <_vfiprintf_r+0x54a>
  4029bc:	4699      	mov	r9, r3
  4029be:	e556      	b.n	40246e <_vfiprintf_r+0x55a>
  4029c0:	06f7      	lsls	r7, r6, #27
  4029c2:	d40a      	bmi.n	4029da <_vfiprintf_r+0xac6>
  4029c4:	0675      	lsls	r5, r6, #25
  4029c6:	d508      	bpl.n	4029da <_vfiprintf_r+0xac6>
  4029c8:	9904      	ldr	r1, [sp, #16]
  4029ca:	f9b1 4000 	ldrsh.w	r4, [r1]
  4029ce:	3104      	adds	r1, #4
  4029d0:	17e5      	asrs	r5, r4, #31
  4029d2:	4622      	mov	r2, r4
  4029d4:	462b      	mov	r3, r5
  4029d6:	9104      	str	r1, [sp, #16]
  4029d8:	e4ea      	b.n	4023b0 <_vfiprintf_r+0x49c>
  4029da:	9a04      	ldr	r2, [sp, #16]
  4029dc:	6814      	ldr	r4, [r2, #0]
  4029de:	4613      	mov	r3, r2
  4029e0:	3304      	adds	r3, #4
  4029e2:	17e5      	asrs	r5, r4, #31
  4029e4:	9304      	str	r3, [sp, #16]
  4029e6:	4622      	mov	r2, r4
  4029e8:	462b      	mov	r3, r5
  4029ea:	e4e1      	b.n	4023b0 <_vfiprintf_r+0x49c>
  4029ec:	6814      	ldr	r4, [r2, #0]
  4029ee:	3204      	adds	r2, #4
  4029f0:	9204      	str	r2, [sp, #16]
  4029f2:	2500      	movs	r5, #0
  4029f4:	e61f      	b.n	402636 <_vfiprintf_r+0x722>
  4029f6:	f04f 0900 	mov.w	r9, #0
  4029fa:	ea54 0305 	orrs.w	r3, r4, r5
  4029fe:	f47f ace8 	bne.w	4023d2 <_vfiprintf_r+0x4be>
  402a02:	e5d8      	b.n	4025b6 <_vfiprintf_r+0x6a2>
  402a04:	aa0d      	add	r2, sp, #52	; 0x34
  402a06:	9900      	ldr	r1, [sp, #0]
  402a08:	9805      	ldr	r0, [sp, #20]
  402a0a:	f7ff fa47 	bl	401e9c <__sprint_r.part.0>
  402a0e:	2800      	cmp	r0, #0
  402a10:	f47f af1e 	bne.w	402850 <_vfiprintf_r+0x93c>
  402a14:	46da      	mov	sl, fp
  402a16:	f7ff bb48 	b.w	4020aa <_vfiprintf_r+0x196>
  402a1a:	aa0d      	add	r2, sp, #52	; 0x34
  402a1c:	9900      	ldr	r1, [sp, #0]
  402a1e:	9805      	ldr	r0, [sp, #20]
  402a20:	f7ff fa3c 	bl	401e9c <__sprint_r.part.0>
  402a24:	2800      	cmp	r0, #0
  402a26:	f43f af45 	beq.w	4028b4 <_vfiprintf_r+0x9a0>
  402a2a:	e711      	b.n	402850 <_vfiprintf_r+0x93c>
  402a2c:	aa0d      	add	r2, sp, #52	; 0x34
  402a2e:	9900      	ldr	r1, [sp, #0]
  402a30:	9805      	ldr	r0, [sp, #20]
  402a32:	f7ff fa33 	bl	401e9c <__sprint_r.part.0>
  402a36:	2800      	cmp	r0, #0
  402a38:	f47f af0a 	bne.w	402850 <_vfiprintf_r+0x93c>
  402a3c:	980e      	ldr	r0, [sp, #56]	; 0x38
  402a3e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a40:	f100 0e01 	add.w	lr, r0, #1
  402a44:	46da      	mov	sl, fp
  402a46:	f7ff bbe3 	b.w	402210 <_vfiprintf_r+0x2fc>
  402a4a:	aa0d      	add	r2, sp, #52	; 0x34
  402a4c:	9900      	ldr	r1, [sp, #0]
  402a4e:	9805      	ldr	r0, [sp, #20]
  402a50:	f7ff fa24 	bl	401e9c <__sprint_r.part.0>
  402a54:	2800      	cmp	r0, #0
  402a56:	f47f aefb 	bne.w	402850 <_vfiprintf_r+0x93c>
  402a5a:	980e      	ldr	r0, [sp, #56]	; 0x38
  402a5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a5e:	f100 0e01 	add.w	lr, r0, #1
  402a62:	46da      	mov	sl, fp
  402a64:	e69b      	b.n	40279e <_vfiprintf_r+0x88a>
  402a66:	2a00      	cmp	r2, #0
  402a68:	f040 80d8 	bne.w	402c1c <_vfiprintf_r+0xd08>
  402a6c:	f04f 0e01 	mov.w	lr, #1
  402a70:	4610      	mov	r0, r2
  402a72:	46da      	mov	sl, fp
  402a74:	e697      	b.n	4027a6 <_vfiprintf_r+0x892>
  402a76:	aa0d      	add	r2, sp, #52	; 0x34
  402a78:	9900      	ldr	r1, [sp, #0]
  402a7a:	9805      	ldr	r0, [sp, #20]
  402a7c:	f7ff fa0e 	bl	401e9c <__sprint_r.part.0>
  402a80:	2800      	cmp	r0, #0
  402a82:	f47f aee5 	bne.w	402850 <_vfiprintf_r+0x93c>
  402a86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402a88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a8a:	f103 0e01 	add.w	lr, r3, #1
  402a8e:	46da      	mov	sl, fp
  402a90:	e422      	b.n	4022d8 <_vfiprintf_r+0x3c4>
  402a92:	2230      	movs	r2, #48	; 0x30
  402a94:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
  402a98:	9a01      	ldr	r2, [sp, #4]
  402a9a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  402a9e:	2a00      	cmp	r2, #0
  402aa0:	f04f 0300 	mov.w	r3, #0
  402aa4:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  402aa8:	f046 0302 	orr.w	r3, r6, #2
  402aac:	f2c0 80cb 	blt.w	402c46 <_vfiprintf_r+0xd32>
  402ab0:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  402ab4:	f046 0602 	orr.w	r6, r6, #2
  402ab8:	f04f 0900 	mov.w	r9, #0
  402abc:	e742      	b.n	402944 <_vfiprintf_r+0xa30>
  402abe:	f04f 0900 	mov.w	r9, #0
  402ac2:	4890      	ldr	r0, [pc, #576]	; (402d04 <_vfiprintf_r+0xdf0>)
  402ac4:	e73e      	b.n	402944 <_vfiprintf_r+0xa30>
  402ac6:	9b01      	ldr	r3, [sp, #4]
  402ac8:	4264      	negs	r4, r4
  402aca:	f04f 092d 	mov.w	r9, #45	; 0x2d
  402ace:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402ad2:	2b00      	cmp	r3, #0
  402ad4:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  402ad8:	f6ff ac7b 	blt.w	4023d2 <_vfiprintf_r+0x4be>
  402adc:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  402ae0:	e477      	b.n	4023d2 <_vfiprintf_r+0x4be>
  402ae2:	9b07      	ldr	r3, [sp, #28]
  402ae4:	2b00      	cmp	r3, #0
  402ae6:	d072      	beq.n	402bce <_vfiprintf_r+0xcba>
  402ae8:	ab0c      	add	r3, sp, #48	; 0x30
  402aea:	2202      	movs	r2, #2
  402aec:	931a      	str	r3, [sp, #104]	; 0x68
  402aee:	921b      	str	r2, [sp, #108]	; 0x6c
  402af0:	f04f 0e01 	mov.w	lr, #1
  402af4:	46da      	mov	sl, fp
  402af6:	e713      	b.n	402920 <_vfiprintf_r+0xa0c>
  402af8:	f016 0940 	ands.w	r9, r6, #64	; 0x40
  402afc:	d048      	beq.n	402b90 <_vfiprintf_r+0xc7c>
  402afe:	9904      	ldr	r1, [sp, #16]
  402b00:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  402b04:	460b      	mov	r3, r1
  402b06:	880c      	ldrh	r4, [r1, #0]
  402b08:	9901      	ldr	r1, [sp, #4]
  402b0a:	2900      	cmp	r1, #0
  402b0c:	f103 0304 	add.w	r3, r3, #4
  402b10:	f04f 0500 	mov.w	r5, #0
  402b14:	f6ff ae10 	blt.w	402738 <_vfiprintf_r+0x824>
  402b18:	ea54 0105 	orrs.w	r1, r4, r5
  402b1c:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  402b20:	9304      	str	r3, [sp, #16]
  402b22:	f43f ac9c 	beq.w	40245e <_vfiprintf_r+0x54a>
  402b26:	4691      	mov	r9, r2
  402b28:	e4a1      	b.n	40246e <_vfiprintf_r+0x55a>
  402b2a:	06f0      	lsls	r0, r6, #27
  402b2c:	d40a      	bmi.n	402b44 <_vfiprintf_r+0xc30>
  402b2e:	0671      	lsls	r1, r6, #25
  402b30:	d508      	bpl.n	402b44 <_vfiprintf_r+0xc30>
  402b32:	9a04      	ldr	r2, [sp, #16]
  402b34:	6813      	ldr	r3, [r2, #0]
  402b36:	3204      	adds	r2, #4
  402b38:	9204      	str	r2, [sp, #16]
  402b3a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
  402b3e:	801a      	strh	r2, [r3, #0]
  402b40:	f7ff ba19 	b.w	401f76 <_vfiprintf_r+0x62>
  402b44:	9a04      	ldr	r2, [sp, #16]
  402b46:	6813      	ldr	r3, [r2, #0]
  402b48:	3204      	adds	r2, #4
  402b4a:	9204      	str	r2, [sp, #16]
  402b4c:	9a02      	ldr	r2, [sp, #8]
  402b4e:	601a      	str	r2, [r3, #0]
  402b50:	f7ff ba11 	b.w	401f76 <_vfiprintf_r+0x62>
  402b54:	aa0d      	add	r2, sp, #52	; 0x34
  402b56:	9900      	ldr	r1, [sp, #0]
  402b58:	9805      	ldr	r0, [sp, #20]
  402b5a:	f7ff f99f 	bl	401e9c <__sprint_r.part.0>
  402b5e:	2800      	cmp	r0, #0
  402b60:	f47f ae76 	bne.w	402850 <_vfiprintf_r+0x93c>
  402b64:	980e      	ldr	r0, [sp, #56]	; 0x38
  402b66:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402b68:	f100 0e01 	add.w	lr, r0, #1
  402b6c:	46da      	mov	sl, fp
  402b6e:	e5fa      	b.n	402766 <_vfiprintf_r+0x852>
  402b70:	f04f 30ff 	mov.w	r0, #4294967295
  402b74:	f7ff bab6 	b.w	4020e4 <_vfiprintf_r+0x1d0>
  402b78:	4862      	ldr	r0, [pc, #392]	; (402d04 <_vfiprintf_r+0xdf0>)
  402b7a:	4616      	mov	r6, r2
  402b7c:	ea54 0205 	orrs.w	r2, r4, r5
  402b80:	9304      	str	r3, [sp, #16]
  402b82:	f04f 0900 	mov.w	r9, #0
  402b86:	f47f aedd 	bne.w	402944 <_vfiprintf_r+0xa30>
  402b8a:	e6fc      	b.n	402986 <_vfiprintf_r+0xa72>
  402b8c:	9b04      	ldr	r3, [sp, #16]
  402b8e:	e7f5      	b.n	402b7c <_vfiprintf_r+0xc68>
  402b90:	9a04      	ldr	r2, [sp, #16]
  402b92:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  402b96:	4613      	mov	r3, r2
  402b98:	6814      	ldr	r4, [r2, #0]
  402b9a:	9a01      	ldr	r2, [sp, #4]
  402b9c:	2a00      	cmp	r2, #0
  402b9e:	f103 0304 	add.w	r3, r3, #4
  402ba2:	f04f 0500 	mov.w	r5, #0
  402ba6:	f6ff adc7 	blt.w	402738 <_vfiprintf_r+0x824>
  402baa:	ea54 0205 	orrs.w	r2, r4, r5
  402bae:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  402bb2:	9304      	str	r3, [sp, #16]
  402bb4:	f47f ac5b 	bne.w	40246e <_vfiprintf_r+0x55a>
  402bb8:	e451      	b.n	40245e <_vfiprintf_r+0x54a>
  402bba:	aa0d      	add	r2, sp, #52	; 0x34
  402bbc:	9900      	ldr	r1, [sp, #0]
  402bbe:	9805      	ldr	r0, [sp, #20]
  402bc0:	f7ff f96c 	bl	401e9c <__sprint_r.part.0>
  402bc4:	2800      	cmp	r0, #0
  402bc6:	f47f ae43 	bne.w	402850 <_vfiprintf_r+0x93c>
  402bca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402bcc:	e668      	b.n	4028a0 <_vfiprintf_r+0x98c>
  402bce:	4610      	mov	r0, r2
  402bd0:	f04f 0e01 	mov.w	lr, #1
  402bd4:	46da      	mov	sl, fp
  402bd6:	e5e6      	b.n	4027a6 <_vfiprintf_r+0x892>
  402bd8:	9904      	ldr	r1, [sp, #16]
  402bda:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  402bde:	460a      	mov	r2, r1
  402be0:	880c      	ldrh	r4, [r1, #0]
  402be2:	9901      	ldr	r1, [sp, #4]
  402be4:	2900      	cmp	r1, #0
  402be6:	f102 0204 	add.w	r2, r2, #4
  402bea:	f04f 0500 	mov.w	r5, #0
  402bee:	db4e      	blt.n	402c8e <_vfiprintf_r+0xd7a>
  402bf0:	ea54 0105 	orrs.w	r1, r4, r5
  402bf4:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  402bf8:	9204      	str	r2, [sp, #16]
  402bfa:	4699      	mov	r9, r3
  402bfc:	f47f abe9 	bne.w	4023d2 <_vfiprintf_r+0x4be>
  402c00:	e4d4      	b.n	4025ac <_vfiprintf_r+0x698>
  402c02:	9304      	str	r3, [sp, #16]
  402c04:	e6f9      	b.n	4029fa <_vfiprintf_r+0xae6>
  402c06:	4638      	mov	r0, r7
  402c08:	9404      	str	r4, [sp, #16]
  402c0a:	f7ff f8d9 	bl	401dc0 <strlen>
  402c0e:	2300      	movs	r3, #0
  402c10:	9003      	str	r0, [sp, #12]
  402c12:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  402c16:	9301      	str	r3, [sp, #4]
  402c18:	f7ff ba9c 	b.w	402154 <_vfiprintf_r+0x240>
  402c1c:	aa0d      	add	r2, sp, #52	; 0x34
  402c1e:	9900      	ldr	r1, [sp, #0]
  402c20:	9805      	ldr	r0, [sp, #20]
  402c22:	f7ff f93b 	bl	401e9c <__sprint_r.part.0>
  402c26:	2800      	cmp	r0, #0
  402c28:	f47f ae12 	bne.w	402850 <_vfiprintf_r+0x93c>
  402c2c:	980e      	ldr	r0, [sp, #56]	; 0x38
  402c2e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402c30:	f100 0e01 	add.w	lr, r0, #1
  402c34:	46da      	mov	sl, fp
  402c36:	e5b6      	b.n	4027a6 <_vfiprintf_r+0x892>
  402c38:	980e      	ldr	r0, [sp, #56]	; 0x38
  402c3a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402c3c:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 402d0c <_vfiprintf_r+0xdf8>
  402c40:	3001      	adds	r0, #1
  402c42:	f7ff bad2 	b.w	4021ea <_vfiprintf_r+0x2d6>
  402c46:	461e      	mov	r6, r3
  402c48:	f04f 0900 	mov.w	r9, #0
  402c4c:	e67a      	b.n	402944 <_vfiprintf_r+0xa30>
  402c4e:	2b06      	cmp	r3, #6
  402c50:	bf28      	it	cs
  402c52:	2306      	movcs	r3, #6
  402c54:	9303      	str	r3, [sp, #12]
  402c56:	9404      	str	r4, [sp, #16]
  402c58:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
  402c5c:	4f2a      	ldr	r7, [pc, #168]	; (402d08 <_vfiprintf_r+0xdf4>)
  402c5e:	e50c      	b.n	40267a <_vfiprintf_r+0x766>
  402c60:	9204      	str	r2, [sp, #16]
  402c62:	e56a      	b.n	40273a <_vfiprintf_r+0x826>
  402c64:	980e      	ldr	r0, [sp, #56]	; 0x38
  402c66:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 402d0c <_vfiprintf_r+0xdf8>
  402c6a:	3001      	adds	r0, #1
  402c6c:	f7ff bb73 	b.w	402356 <_vfiprintf_r+0x442>
  402c70:	46f4      	mov	ip, lr
  402c72:	f7ff bb1a 	b.w	4022aa <_vfiprintf_r+0x396>
  402c76:	9b01      	ldr	r3, [sp, #4]
  402c78:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  402c7c:	9303      	str	r3, [sp, #12]
  402c7e:	9404      	str	r4, [sp, #16]
  402c80:	9001      	str	r0, [sp, #4]
  402c82:	f7ff ba67 	b.w	402154 <_vfiprintf_r+0x240>
  402c86:	2200      	movs	r2, #0
  402c88:	9201      	str	r2, [sp, #4]
  402c8a:	f7ff b9ac 	b.w	401fe6 <_vfiprintf_r+0xd2>
  402c8e:	9204      	str	r2, [sp, #16]
  402c90:	4699      	mov	r9, r3
  402c92:	e6b2      	b.n	4029fa <_vfiprintf_r+0xae6>
  402c94:	9a04      	ldr	r2, [sp, #16]
  402c96:	6813      	ldr	r3, [r2, #0]
  402c98:	9301      	str	r3, [sp, #4]
  402c9a:	3204      	adds	r2, #4
  402c9c:	2b00      	cmp	r3, #0
  402c9e:	9204      	str	r2, [sp, #16]
  402ca0:	f898 3001 	ldrb.w	r3, [r8, #1]
  402ca4:	46a8      	mov	r8, r5
  402ca6:	f6bf a99c 	bge.w	401fe2 <_vfiprintf_r+0xce>
  402caa:	f04f 32ff 	mov.w	r2, #4294967295
  402cae:	9201      	str	r2, [sp, #4]
  402cb0:	f7ff b997 	b.w	401fe2 <_vfiprintf_r+0xce>
  402cb4:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402cb8:	e48e      	b.n	4025d8 <_vfiprintf_r+0x6c4>
  402cba:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402cbe:	e4f0      	b.n	4026a2 <_vfiprintf_r+0x78e>
  402cc0:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402cc4:	e4ab      	b.n	40261e <_vfiprintf_r+0x70a>
  402cc6:	4699      	mov	r9, r3
  402cc8:	07f3      	lsls	r3, r6, #31
  402cca:	d505      	bpl.n	402cd8 <_vfiprintf_r+0xdc4>
  402ccc:	af2a      	add	r7, sp, #168	; 0xa8
  402cce:	2330      	movs	r3, #48	; 0x30
  402cd0:	f807 3d41 	strb.w	r3, [r7, #-65]!
  402cd4:	f7ff bb97 	b.w	402406 <_vfiprintf_r+0x4f2>
  402cd8:	9b01      	ldr	r3, [sp, #4]
  402cda:	9303      	str	r3, [sp, #12]
  402cdc:	465f      	mov	r7, fp
  402cde:	f7ff ba39 	b.w	402154 <_vfiprintf_r+0x240>
  402ce2:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402ce6:	e443      	b.n	402570 <_vfiprintf_r+0x65c>
  402ce8:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402cec:	f7ff bb9a 	b.w	402424 <_vfiprintf_r+0x510>
  402cf0:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402cf4:	f7ff bb4d 	b.w	402392 <_vfiprintf_r+0x47e>
  402cf8:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402cfc:	e50f      	b.n	40271e <_vfiprintf_r+0x80a>
  402cfe:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402d02:	e4f3      	b.n	4026ec <_vfiprintf_r+0x7d8>
  402d04:	00405730 	.word	0x00405730
  402d08:	00405744 	.word	0x00405744
  402d0c:	0040574c 	.word	0x0040574c

00402d10 <__sbprintf>:
  402d10:	b5f0      	push	{r4, r5, r6, r7, lr}
  402d12:	460c      	mov	r4, r1
  402d14:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
  402d18:	8989      	ldrh	r1, [r1, #12]
  402d1a:	6e66      	ldr	r6, [r4, #100]	; 0x64
  402d1c:	89e5      	ldrh	r5, [r4, #14]
  402d1e:	9619      	str	r6, [sp, #100]	; 0x64
  402d20:	f021 0102 	bic.w	r1, r1, #2
  402d24:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402d26:	f8ad 500e 	strh.w	r5, [sp, #14]
  402d2a:	2500      	movs	r5, #0
  402d2c:	69e7      	ldr	r7, [r4, #28]
  402d2e:	f8ad 100c 	strh.w	r1, [sp, #12]
  402d32:	9609      	str	r6, [sp, #36]	; 0x24
  402d34:	9506      	str	r5, [sp, #24]
  402d36:	ae1a      	add	r6, sp, #104	; 0x68
  402d38:	f44f 6580 	mov.w	r5, #1024	; 0x400
  402d3c:	4669      	mov	r1, sp
  402d3e:	9600      	str	r6, [sp, #0]
  402d40:	9604      	str	r6, [sp, #16]
  402d42:	9502      	str	r5, [sp, #8]
  402d44:	9505      	str	r5, [sp, #20]
  402d46:	9707      	str	r7, [sp, #28]
  402d48:	4606      	mov	r6, r0
  402d4a:	f7ff f8e3 	bl	401f14 <_vfiprintf_r>
  402d4e:	1e05      	subs	r5, r0, #0
  402d50:	db07      	blt.n	402d62 <__sbprintf+0x52>
  402d52:	4630      	mov	r0, r6
  402d54:	4669      	mov	r1, sp
  402d56:	f000 fe6f 	bl	403a38 <_fflush_r>
  402d5a:	2800      	cmp	r0, #0
  402d5c:	bf18      	it	ne
  402d5e:	f04f 35ff 	movne.w	r5, #4294967295
  402d62:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  402d66:	065b      	lsls	r3, r3, #25
  402d68:	d503      	bpl.n	402d72 <__sbprintf+0x62>
  402d6a:	89a3      	ldrh	r3, [r4, #12]
  402d6c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402d70:	81a3      	strh	r3, [r4, #12]
  402d72:	4628      	mov	r0, r5
  402d74:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
  402d78:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402d7a:	bf00      	nop

00402d7c <__svfiscanf_r>:
  402d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402d80:	468b      	mov	fp, r1
  402d82:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
  402d86:	b0d9      	sub	sp, #356	; 0x164
  402d88:	4607      	mov	r7, r0
  402d8a:	0488      	lsls	r0, r1, #18
  402d8c:	9305      	str	r3, [sp, #20]
  402d8e:	d409      	bmi.n	402da4 <__svfiscanf_r+0x28>
  402d90:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  402d94:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
  402d98:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  402d9c:	f8ab 100c 	strh.w	r1, [fp, #12]
  402da0:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  402da4:	4616      	mov	r6, r2
  402da6:	2300      	movs	r3, #0
  402da8:	f816 1b01 	ldrb.w	r1, [r6], #1
  402dac:	9306      	str	r3, [sp, #24]
  402dae:	9303      	str	r3, [sp, #12]
  402db0:	4699      	mov	r9, r3
  402db2:	9307      	str	r3, [sp, #28]
  402db4:	f8df a4dc 	ldr.w	sl, [pc, #1244]	; 403294 <__svfiscanf_r+0x518>
  402db8:	910b      	str	r1, [sp, #44]	; 0x2c
  402dba:	b371      	cbz	r1, 402e1a <__svfiscanf_r+0x9e>
  402dbc:	f8da c000 	ldr.w	ip, [sl]
  402dc0:	eb0c 0301 	add.w	r3, ip, r1
  402dc4:	785b      	ldrb	r3, [r3, #1]
  402dc6:	f003 0308 	and.w	r3, r3, #8
  402dca:	f003 05ff 	and.w	r5, r3, #255	; 0xff
  402dce:	b343      	cbz	r3, 402e22 <__svfiscanf_r+0xa6>
  402dd0:	f8db 3004 	ldr.w	r3, [fp, #4]
  402dd4:	e012      	b.n	402dfc <__svfiscanf_r+0x80>
  402dd6:	f8db 3000 	ldr.w	r3, [fp]
  402dda:	f8da 1000 	ldr.w	r1, [sl]
  402dde:	781a      	ldrb	r2, [r3, #0]
  402de0:	440a      	add	r2, r1
  402de2:	3301      	adds	r3, #1
  402de4:	7852      	ldrb	r2, [r2, #1]
  402de6:	0712      	lsls	r2, r2, #28
  402de8:	d510      	bpl.n	402e0c <__svfiscanf_r+0x90>
  402dea:	f8db 2004 	ldr.w	r2, [fp, #4]
  402dee:	f8cb 3000 	str.w	r3, [fp]
  402df2:	1e53      	subs	r3, r2, #1
  402df4:	f109 0901 	add.w	r9, r9, #1
  402df8:	f8cb 3004 	str.w	r3, [fp, #4]
  402dfc:	2b00      	cmp	r3, #0
  402dfe:	dcea      	bgt.n	402dd6 <__svfiscanf_r+0x5a>
  402e00:	4659      	mov	r1, fp
  402e02:	4638      	mov	r0, r7
  402e04:	f001 fc3e 	bl	404684 <__srefill_r>
  402e08:	2800      	cmp	r0, #0
  402e0a:	d0e4      	beq.n	402dd6 <__svfiscanf_r+0x5a>
  402e0c:	4632      	mov	r2, r6
  402e0e:	4616      	mov	r6, r2
  402e10:	f816 1b01 	ldrb.w	r1, [r6], #1
  402e14:	910b      	str	r1, [sp, #44]	; 0x2c
  402e16:	2900      	cmp	r1, #0
  402e18:	d1d0      	bne.n	402dbc <__svfiscanf_r+0x40>
  402e1a:	9807      	ldr	r0, [sp, #28]
  402e1c:	b059      	add	sp, #356	; 0x164
  402e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402e22:	2925      	cmp	r1, #37	; 0x25
  402e24:	f040 8082 	bne.w	402f2c <__svfiscanf_r+0x1b0>
  402e28:	7853      	ldrb	r3, [r2, #1]
  402e2a:	462c      	mov	r4, r5
  402e2c:	1c72      	adds	r2, r6, #1
  402e2e:	2b78      	cmp	r3, #120	; 0x78
  402e30:	f200 8264 	bhi.w	4032fc <__svfiscanf_r+0x580>
  402e34:	e8df f013 	tbh	[pc, r3, lsl #1]
  402e38:	02620093 	.word	0x02620093
  402e3c:	02620262 	.word	0x02620262
  402e40:	02620262 	.word	0x02620262
  402e44:	02620262 	.word	0x02620262
  402e48:	02620262 	.word	0x02620262
  402e4c:	02620262 	.word	0x02620262
  402e50:	02620262 	.word	0x02620262
  402e54:	02620262 	.word	0x02620262
  402e58:	02620262 	.word	0x02620262
  402e5c:	02620262 	.word	0x02620262
  402e60:	02620262 	.word	0x02620262
  402e64:	02620262 	.word	0x02620262
  402e68:	02620262 	.word	0x02620262
  402e6c:	02620262 	.word	0x02620262
  402e70:	02620262 	.word	0x02620262
  402e74:	02620262 	.word	0x02620262
  402e78:	02620262 	.word	0x02620262
  402e7c:	02620262 	.word	0x02620262
  402e80:	00790262 	.word	0x00790262
  402e84:	02620262 	.word	0x02620262
  402e88:	02620262 	.word	0x02620262
  402e8c:	026201a7 	.word	0x026201a7
  402e90:	02620262 	.word	0x02620262
  402e94:	02620262 	.word	0x02620262
  402e98:	019f019f 	.word	0x019f019f
  402e9c:	019f019f 	.word	0x019f019f
  402ea0:	019f019f 	.word	0x019f019f
  402ea4:	019f019f 	.word	0x019f019f
  402ea8:	019f019f 	.word	0x019f019f
  402eac:	02620262 	.word	0x02620262
  402eb0:	02620262 	.word	0x02620262
  402eb4:	02620262 	.word	0x02620262
  402eb8:	02620262 	.word	0x02620262
  402ebc:	02620262 	.word	0x02620262
  402ec0:	0262018d 	.word	0x0262018d
  402ec4:	02620262 	.word	0x02620262
  402ec8:	02620262 	.word	0x02620262
  402ecc:	02620262 	.word	0x02620262
  402ed0:	026201be 	.word	0x026201be
  402ed4:	01ac0262 	.word	0x01ac0262
  402ed8:	02620262 	.word	0x02620262
  402edc:	02620262 	.word	0x02620262
  402ee0:	02620262 	.word	0x02620262
  402ee4:	02620262 	.word	0x02620262
  402ee8:	0262017b 	.word	0x0262017b
  402eec:	01440262 	.word	0x01440262
  402ef0:	02620262 	.word	0x02620262
  402ef4:	02620262 	.word	0x02620262
  402ef8:	02620262 	.word	0x02620262
  402efc:	01150262 	.word	0x01150262
  402f00:	02620109 	.word	0x02620109
  402f04:	02620262 	.word	0x02620262
  402f08:	01c30104 	.word	0x01c30104
  402f0c:	02620262 	.word	0x02620262
  402f10:	026200fc 	.word	0x026200fc
  402f14:	00df00eb 	.word	0x00df00eb
  402f18:	026200d1 	.word	0x026200d1
  402f1c:	00c90262 	.word	0x00c90262
  402f20:	00980262 	.word	0x00980262
  402f24:	02620262 	.word	0x02620262
  402f28:	017b      	.short	0x017b
  402f2a:	4616      	mov	r6, r2
  402f2c:	f8db 3004 	ldr.w	r3, [fp, #4]
  402f30:	2b00      	cmp	r3, #0
  402f32:	f340 8244 	ble.w	4033be <__svfiscanf_r+0x642>
  402f36:	f8db 3000 	ldr.w	r3, [fp]
  402f3a:	f816 2c01 	ldrb.w	r2, [r6, #-1]
  402f3e:	7819      	ldrb	r1, [r3, #0]
  402f40:	4291      	cmp	r1, r2
  402f42:	f47f af6a 	bne.w	402e1a <__svfiscanf_r+0x9e>
  402f46:	f8db 2004 	ldr.w	r2, [fp, #4]
  402f4a:	3301      	adds	r3, #1
  402f4c:	3a01      	subs	r2, #1
  402f4e:	f8cb 2004 	str.w	r2, [fp, #4]
  402f52:	f8cb 3000 	str.w	r3, [fp]
  402f56:	f109 0901 	add.w	r9, r9, #1
  402f5a:	4632      	mov	r2, r6
  402f5c:	e757      	b.n	402e0e <__svfiscanf_r+0x92>
  402f5e:	f04f 30ff 	mov.w	r0, #4294967295
  402f62:	b059      	add	sp, #356	; 0x164
  402f64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f68:	f8db 3004 	ldr.w	r3, [fp, #4]
  402f6c:	9202      	str	r2, [sp, #8]
  402f6e:	2b00      	cmp	r3, #0
  402f70:	f340 8259 	ble.w	403426 <__svfiscanf_r+0x6aa>
  402f74:	4bc5      	ldr	r3, [pc, #788]	; (40328c <__svfiscanf_r+0x510>)
  402f76:	9306      	str	r3, [sp, #24]
  402f78:	230a      	movs	r3, #10
  402f7a:	9303      	str	r3, [sp, #12]
  402f7c:	2603      	movs	r6, #3
  402f7e:	f8db 3000 	ldr.w	r3, [fp]
  402f82:	e001      	b.n	402f88 <__svfiscanf_r+0x20c>
  402f84:	f8cb 3000 	str.w	r3, [fp]
  402f88:	f893 e000 	ldrb.w	lr, [r3]
  402f8c:	eb0c 020e 	add.w	r2, ip, lr
  402f90:	7850      	ldrb	r0, [r2, #1]
  402f92:	f000 0208 	and.w	r2, r0, #8
  402f96:	f002 01ff 	and.w	r1, r2, #255	; 0xff
  402f9a:	2a00      	cmp	r2, #0
  402f9c:	f000 826e 	beq.w	40347c <__svfiscanf_r+0x700>
  402fa0:	f8db 2004 	ldr.w	r2, [fp, #4]
  402fa4:	3a01      	subs	r2, #1
  402fa6:	2a00      	cmp	r2, #0
  402fa8:	f109 0901 	add.w	r9, r9, #1
  402fac:	f8cb 2004 	str.w	r2, [fp, #4]
  402fb0:	f103 0301 	add.w	r3, r3, #1
  402fb4:	dce6      	bgt.n	402f84 <__svfiscanf_r+0x208>
  402fb6:	4659      	mov	r1, fp
  402fb8:	4638      	mov	r0, r7
  402fba:	f001 fb63 	bl	404684 <__srefill_r>
  402fbe:	2800      	cmp	r0, #0
  402fc0:	f040 818c 	bne.w	4032dc <__svfiscanf_r+0x560>
  402fc4:	f8da c000 	ldr.w	ip, [sl]
  402fc8:	e7d9      	b.n	402f7e <__svfiscanf_r+0x202>
  402fca:	f8db 3004 	ldr.w	r3, [fp, #4]
  402fce:	9202      	str	r2, [sp, #8]
  402fd0:	2b00      	cmp	r3, #0
  402fd2:	f340 8232 	ble.w	40343a <__svfiscanf_r+0x6be>
  402fd6:	2602      	movs	r6, #2
  402fd8:	e7d1      	b.n	402f7e <__svfiscanf_r+0x202>
  402fda:	f8db 3004 	ldr.w	r3, [fp, #4]
  402fde:	9202      	str	r2, [sp, #8]
  402fe0:	2b00      	cmp	r3, #0
  402fe2:	f445 7508 	orr.w	r5, r5, #544	; 0x220
  402fe6:	f340 80aa 	ble.w	40313e <__svfiscanf_r+0x3c2>
  402fea:	4ba8      	ldr	r3, [pc, #672]	; (40328c <__svfiscanf_r+0x510>)
  402fec:	9306      	str	r3, [sp, #24]
  402fee:	2310      	movs	r3, #16
  402ff0:	9303      	str	r3, [sp, #12]
  402ff2:	2603      	movs	r6, #3
  402ff4:	e7c3      	b.n	402f7e <__svfiscanf_r+0x202>
  402ff6:	f8db 3004 	ldr.w	r3, [fp, #4]
  402ffa:	9202      	str	r2, [sp, #8]
  402ffc:	2b00      	cmp	r3, #0
  402ffe:	f340 80cf 	ble.w	4031a0 <__svfiscanf_r+0x424>
  403002:	4ba2      	ldr	r3, [pc, #648]	; (40328c <__svfiscanf_r+0x510>)
  403004:	9306      	str	r3, [sp, #24]
  403006:	2308      	movs	r3, #8
  403008:	9303      	str	r3, [sp, #12]
  40300a:	2603      	movs	r6, #3
  40300c:	e7b7      	b.n	402f7e <__svfiscanf_r+0x202>
  40300e:	06eb      	lsls	r3, r5, #27
  403010:	9202      	str	r2, [sp, #8]
  403012:	f100 812c 	bmi.w	40326e <__svfiscanf_r+0x4f2>
  403016:	076e      	lsls	r6, r5, #29
  403018:	f140 81e4 	bpl.w	4033e4 <__svfiscanf_r+0x668>
  40301c:	9905      	ldr	r1, [sp, #20]
  40301e:	680b      	ldr	r3, [r1, #0]
  403020:	f8a3 9000 	strh.w	r9, [r3]
  403024:	460b      	mov	r3, r1
  403026:	4616      	mov	r6, r2
  403028:	3304      	adds	r3, #4
  40302a:	9305      	str	r3, [sp, #20]
  40302c:	4632      	mov	r2, r6
  40302e:	e6ee      	b.n	402e0e <__svfiscanf_r+0x92>
  403030:	7873      	ldrb	r3, [r6, #1]
  403032:	2b6c      	cmp	r3, #108	; 0x6c
  403034:	f000 81cb 	beq.w	4033ce <__svfiscanf_r+0x652>
  403038:	f045 0501 	orr.w	r5, r5, #1
  40303c:	4616      	mov	r6, r2
  40303e:	e6f5      	b.n	402e2c <__svfiscanf_r+0xb0>
  403040:	7873      	ldrb	r3, [r6, #1]
  403042:	f045 0504 	orr.w	r5, r5, #4
  403046:	4616      	mov	r6, r2
  403048:	e6f0      	b.n	402e2c <__svfiscanf_r+0xb0>
  40304a:	f8db 3004 	ldr.w	r3, [fp, #4]
  40304e:	9202      	str	r2, [sp, #8]
  403050:	2b00      	cmp	r3, #0
  403052:	f340 8086 	ble.w	403162 <__svfiscanf_r+0x3e6>
  403056:	4b8e      	ldr	r3, [pc, #568]	; (403290 <__svfiscanf_r+0x514>)
  403058:	9306      	str	r3, [sp, #24]
  40305a:	230a      	movs	r3, #10
  40305c:	9303      	str	r3, [sp, #12]
  40305e:	2603      	movs	r6, #3
  403060:	e78d      	b.n	402f7e <__svfiscanf_r+0x202>
  403062:	f8db 3004 	ldr.w	r3, [fp, #4]
  403066:	9202      	str	r2, [sp, #8]
  403068:	2b00      	cmp	r3, #0
  40306a:	f340 81d4 	ble.w	403416 <__svfiscanf_r+0x69a>
  40306e:	2c00      	cmp	r4, #0
  403070:	bf08      	it	eq
  403072:	2401      	moveq	r4, #1
  403074:	f015 0301 	ands.w	r3, r5, #1
  403078:	f040 80ad 	bne.w	4031d6 <__svfiscanf_r+0x45a>
  40307c:	06ea      	lsls	r2, r5, #27
  40307e:	f140 818a 	bpl.w	403396 <__svfiscanf_r+0x61a>
  403082:	461d      	mov	r5, r3
  403084:	e009      	b.n	40309a <__svfiscanf_r+0x31e>
  403086:	4413      	add	r3, r2
  403088:	f8cb 3000 	str.w	r3, [fp]
  40308c:	4415      	add	r5, r2
  40308e:	1aa4      	subs	r4, r4, r2
  403090:	f001 faf8 	bl	404684 <__srefill_r>
  403094:	2800      	cmp	r0, #0
  403096:	f040 8175 	bne.w	403384 <__svfiscanf_r+0x608>
  40309a:	f8db 2004 	ldr.w	r2, [fp, #4]
  40309e:	f8db 3000 	ldr.w	r3, [fp]
  4030a2:	42a2      	cmp	r2, r4
  4030a4:	4659      	mov	r1, fp
  4030a6:	4638      	mov	r0, r7
  4030a8:	dbed      	blt.n	403086 <__svfiscanf_r+0x30a>
  4030aa:	1b12      	subs	r2, r2, r4
  4030ac:	4423      	add	r3, r4
  4030ae:	f8cb 2004 	str.w	r2, [fp, #4]
  4030b2:	4425      	add	r5, r4
  4030b4:	f8cb 3000 	str.w	r3, [fp]
  4030b8:	9e02      	ldr	r6, [sp, #8]
  4030ba:	44a9      	add	r9, r5
  4030bc:	4632      	mov	r2, r6
  4030be:	e6a6      	b.n	402e0e <__svfiscanf_r+0x92>
  4030c0:	f10d 0860 	add.w	r8, sp, #96	; 0x60
  4030c4:	4611      	mov	r1, r2
  4030c6:	4640      	mov	r0, r8
  4030c8:	f001 fb66 	bl	404798 <__sccl>
  4030cc:	f8db 3004 	ldr.w	r3, [fp, #4]
  4030d0:	2b00      	cmp	r3, #0
  4030d2:	4606      	mov	r6, r0
  4030d4:	f340 81ca 	ble.w	40346c <__svfiscanf_r+0x6f0>
  4030d8:	2c00      	cmp	r4, #0
  4030da:	f8db 1000 	ldr.w	r1, [fp]
  4030de:	bf08      	it	eq
  4030e0:	f04f 34ff 	moveq.w	r4, #4294967295
  4030e4:	06eb      	lsls	r3, r5, #27
  4030e6:	7808      	ldrb	r0, [r1, #0]
  4030e8:	f140 80c4 	bpl.w	403274 <__svfiscanf_r+0x4f8>
  4030ec:	9402      	str	r4, [sp, #8]
  4030ee:	2500      	movs	r5, #0
  4030f0:	e000      	b.n	4030f4 <__svfiscanf_r+0x378>
  4030f2:	7808      	ldrb	r0, [r1, #0]
  4030f4:	f818 3000 	ldrb.w	r3, [r8, r0]
  4030f8:	3101      	adds	r1, #1
  4030fa:	2b00      	cmp	r3, #0
  4030fc:	f000 8146 	beq.w	40338c <__svfiscanf_r+0x610>
  403100:	f8db 3004 	ldr.w	r3, [fp, #4]
  403104:	f8cb 1000 	str.w	r1, [fp]
  403108:	3501      	adds	r5, #1
  40310a:	3b01      	subs	r3, #1
  40310c:	42a5      	cmp	r5, r4
  40310e:	f8cb 3004 	str.w	r3, [fp, #4]
  403112:	f000 8110 	beq.w	403336 <__svfiscanf_r+0x5ba>
  403116:	2b00      	cmp	r3, #0
  403118:	dceb      	bgt.n	4030f2 <__svfiscanf_r+0x376>
  40311a:	4659      	mov	r1, fp
  40311c:	4638      	mov	r0, r7
  40311e:	f001 fab1 	bl	404684 <__srefill_r>
  403122:	2800      	cmp	r0, #0
  403124:	f040 8106 	bne.w	403334 <__svfiscanf_r+0x5b8>
  403128:	f8db 1000 	ldr.w	r1, [fp]
  40312c:	e7e1      	b.n	4030f2 <__svfiscanf_r+0x376>
  40312e:	f8db 3004 	ldr.w	r3, [fp, #4]
  403132:	9202      	str	r2, [sp, #8]
  403134:	2b00      	cmp	r3, #0
  403136:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  40313a:	f73f af56 	bgt.w	402fea <__svfiscanf_r+0x26e>
  40313e:	4659      	mov	r1, fp
  403140:	4638      	mov	r0, r7
  403142:	f001 fa9f 	bl	404684 <__srefill_r>
  403146:	2800      	cmp	r0, #0
  403148:	f040 80c8 	bne.w	4032dc <__svfiscanf_r+0x560>
  40314c:	f8da c000 	ldr.w	ip, [sl]
  403150:	e74b      	b.n	402fea <__svfiscanf_r+0x26e>
  403152:	f8db 3004 	ldr.w	r3, [fp, #4]
  403156:	9202      	str	r2, [sp, #8]
  403158:	2b00      	cmp	r3, #0
  40315a:	f045 0501 	orr.w	r5, r5, #1
  40315e:	f73f af7a 	bgt.w	403056 <__svfiscanf_r+0x2da>
  403162:	4659      	mov	r1, fp
  403164:	4638      	mov	r0, r7
  403166:	f001 fa8d 	bl	404684 <__srefill_r>
  40316a:	2800      	cmp	r0, #0
  40316c:	f040 80b6 	bne.w	4032dc <__svfiscanf_r+0x560>
  403170:	f8da c000 	ldr.w	ip, [sl]
  403174:	e76f      	b.n	403056 <__svfiscanf_r+0x2da>
  403176:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40317a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
  40317e:	3c30      	subs	r4, #48	; 0x30
  403180:	7873      	ldrb	r3, [r6, #1]
  403182:	4616      	mov	r6, r2
  403184:	e652      	b.n	402e2c <__svfiscanf_r+0xb0>
  403186:	7873      	ldrb	r3, [r6, #1]
  403188:	f045 0510 	orr.w	r5, r5, #16
  40318c:	4616      	mov	r6, r2
  40318e:	e64d      	b.n	402e2c <__svfiscanf_r+0xb0>
  403190:	f8db 3004 	ldr.w	r3, [fp, #4]
  403194:	9202      	str	r2, [sp, #8]
  403196:	2b00      	cmp	r3, #0
  403198:	f045 0501 	orr.w	r5, r5, #1
  40319c:	f73f af31 	bgt.w	403002 <__svfiscanf_r+0x286>
  4031a0:	4659      	mov	r1, fp
  4031a2:	4638      	mov	r0, r7
  4031a4:	f001 fa6e 	bl	404684 <__srefill_r>
  4031a8:	2800      	cmp	r0, #0
  4031aa:	f040 8097 	bne.w	4032dc <__svfiscanf_r+0x560>
  4031ae:	f8da c000 	ldr.w	ip, [sl]
  4031b2:	e726      	b.n	403002 <__svfiscanf_r+0x286>
  4031b4:	7873      	ldrb	r3, [r6, #1]
  4031b6:	f045 0502 	orr.w	r5, r5, #2
  4031ba:	4616      	mov	r6, r2
  4031bc:	e636      	b.n	402e2c <__svfiscanf_r+0xb0>
  4031be:	f8db 3004 	ldr.w	r3, [fp, #4]
  4031c2:	9202      	str	r2, [sp, #8]
  4031c4:	2b00      	cmp	r3, #0
  4031c6:	f340 8143 	ble.w	403450 <__svfiscanf_r+0x6d4>
  4031ca:	4b31      	ldr	r3, [pc, #196]	; (403290 <__svfiscanf_r+0x514>)
  4031cc:	9306      	str	r3, [sp, #24]
  4031ce:	2300      	movs	r3, #0
  4031d0:	9303      	str	r3, [sp, #12]
  4031d2:	2603      	movs	r6, #3
  4031d4:	e6d3      	b.n	402f7e <__svfiscanf_r+0x202>
  4031d6:	ab0c      	add	r3, sp, #48	; 0x30
  4031d8:	4618      	mov	r0, r3
  4031da:	2208      	movs	r2, #8
  4031dc:	2100      	movs	r1, #0
  4031de:	9308      	str	r3, [sp, #32]
  4031e0:	f7fe faa0 	bl	401724 <memset>
  4031e4:	f015 0310 	ands.w	r3, r5, #16
  4031e8:	9309      	str	r3, [sp, #36]	; 0x24
  4031ea:	f000 80ab 	beq.w	403344 <__svfiscanf_r+0x5c8>
  4031ee:	2300      	movs	r3, #0
  4031f0:	9304      	str	r3, [sp, #16]
  4031f2:	2500      	movs	r5, #0
  4031f4:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  4031f8:	f001 f928 	bl	40444c <__locale_mb_cur_max>
  4031fc:	42a8      	cmp	r0, r5
  4031fe:	d06d      	beq.n	4032dc <__svfiscanf_r+0x560>
  403200:	e89b 000c 	ldmia.w	fp, {r2, r3}
  403204:	f812 0b01 	ldrb.w	r0, [r2], #1
  403208:	f8cb 2000 	str.w	r2, [fp]
  40320c:	3b01      	subs	r3, #1
  40320e:	9a08      	ldr	r2, [sp, #32]
  403210:	9200      	str	r2, [sp, #0]
  403212:	1c6e      	adds	r6, r5, #1
  403214:	f8cb 3004 	str.w	r3, [fp, #4]
  403218:	9904      	ldr	r1, [sp, #16]
  40321a:	f808 0005 	strb.w	r0, [r8, r5]
  40321e:	4633      	mov	r3, r6
  403220:	4642      	mov	r2, r8
  403222:	4638      	mov	r0, r7
  403224:	f001 f98c 	bl	404540 <_mbrtowc_r>
  403228:	1c41      	adds	r1, r0, #1
  40322a:	d057      	beq.n	4032dc <__svfiscanf_r+0x560>
  40322c:	2800      	cmp	r0, #0
  40322e:	f040 8090 	bne.w	403352 <__svfiscanf_r+0x5d6>
  403232:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403234:	2b00      	cmp	r3, #0
  403236:	f040 809b 	bne.w	403370 <__svfiscanf_r+0x5f4>
  40323a:	9a04      	ldr	r2, [sp, #16]
  40323c:	44b1      	add	r9, r6
  40323e:	6013      	str	r3, [r2, #0]
  403240:	3c01      	subs	r4, #1
  403242:	9b04      	ldr	r3, [sp, #16]
  403244:	3304      	adds	r3, #4
  403246:	9304      	str	r3, [sp, #16]
  403248:	f8db 3004 	ldr.w	r3, [fp, #4]
  40324c:	2b00      	cmp	r3, #0
  40324e:	f04f 0500 	mov.w	r5, #0
  403252:	dc73      	bgt.n	40333c <__svfiscanf_r+0x5c0>
  403254:	4659      	mov	r1, fp
  403256:	4638      	mov	r0, r7
  403258:	f001 fa14 	bl	404684 <__srefill_r>
  40325c:	2800      	cmp	r0, #0
  40325e:	d06d      	beq.n	40333c <__svfiscanf_r+0x5c0>
  403260:	2d00      	cmp	r5, #0
  403262:	d13b      	bne.n	4032dc <__svfiscanf_r+0x560>
  403264:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403266:	b913      	cbnz	r3, 40326e <__svfiscanf_r+0x4f2>
  403268:	9b07      	ldr	r3, [sp, #28]
  40326a:	3301      	adds	r3, #1
  40326c:	9307      	str	r3, [sp, #28]
  40326e:	9e02      	ldr	r6, [sp, #8]
  403270:	4632      	mov	r2, r6
  403272:	e5cc      	b.n	402e0e <__svfiscanf_r+0x92>
  403274:	9a05      	ldr	r2, [sp, #20]
  403276:	6815      	ldr	r5, [r2, #0]
  403278:	9504      	str	r5, [sp, #16]
  40327a:	4613      	mov	r3, r2
  40327c:	3304      	adds	r3, #4
  40327e:	192a      	adds	r2, r5, r4
  403280:	9302      	str	r3, [sp, #8]
  403282:	462c      	mov	r4, r5
  403284:	4603      	mov	r3, r0
  403286:	463d      	mov	r5, r7
  403288:	4617      	mov	r7, r2
  40328a:	e008      	b.n	40329e <__svfiscanf_r+0x522>
  40328c:	00404b6d 	.word	0x00404b6d
  403290:	00404895 	.word	0x00404895
  403294:	2000084c 	.word	0x2000084c
  403298:	f8db 1000 	ldr.w	r1, [fp]
  40329c:	780b      	ldrb	r3, [r1, #0]
  40329e:	f818 3003 	ldrb.w	r3, [r8, r3]
  4032a2:	1c48      	adds	r0, r1, #1
  4032a4:	2b00      	cmp	r3, #0
  4032a6:	d036      	beq.n	403316 <__svfiscanf_r+0x59a>
  4032a8:	f8db 3004 	ldr.w	r3, [fp, #4]
  4032ac:	f8cb 0000 	str.w	r0, [fp]
  4032b0:	3b01      	subs	r3, #1
  4032b2:	f8cb 3004 	str.w	r3, [fp, #4]
  4032b6:	780b      	ldrb	r3, [r1, #0]
  4032b8:	f804 3b01 	strb.w	r3, [r4], #1
  4032bc:	42a7      	cmp	r7, r4
  4032be:	d02a      	beq.n	403316 <__svfiscanf_r+0x59a>
  4032c0:	f8db 3004 	ldr.w	r3, [fp, #4]
  4032c4:	2b00      	cmp	r3, #0
  4032c6:	dce7      	bgt.n	403298 <__svfiscanf_r+0x51c>
  4032c8:	4659      	mov	r1, fp
  4032ca:	4628      	mov	r0, r5
  4032cc:	f001 f9da 	bl	404684 <__srefill_r>
  4032d0:	2800      	cmp	r0, #0
  4032d2:	d0e1      	beq.n	403298 <__svfiscanf_r+0x51c>
  4032d4:	462f      	mov	r7, r5
  4032d6:	9d04      	ldr	r5, [sp, #16]
  4032d8:	42a5      	cmp	r5, r4
  4032da:	d11e      	bne.n	40331a <__svfiscanf_r+0x59e>
  4032dc:	9a07      	ldr	r2, [sp, #28]
  4032de:	2a00      	cmp	r2, #0
  4032e0:	f43f ae3d 	beq.w	402f5e <__svfiscanf_r+0x1e2>
  4032e4:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4032e8:	f013 0f40 	tst.w	r3, #64	; 0x40
  4032ec:	4613      	mov	r3, r2
  4032ee:	bf18      	it	ne
  4032f0:	f04f 33ff 	movne.w	r3, #4294967295
  4032f4:	4618      	mov	r0, r3
  4032f6:	b059      	add	sp, #356	; 0x164
  4032f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4032fc:	4463      	add	r3, ip
  4032fe:	9202      	str	r2, [sp, #8]
  403300:	785b      	ldrb	r3, [r3, #1]
  403302:	f003 0303 	and.w	r3, r3, #3
  403306:	2b01      	cmp	r3, #1
  403308:	f8db 3004 	ldr.w	r3, [fp, #4]
  40330c:	d064      	beq.n	4033d8 <__svfiscanf_r+0x65c>
  40330e:	2b00      	cmp	r3, #0
  403310:	f73f aea1 	bgt.w	403056 <__svfiscanf_r+0x2da>
  403314:	e725      	b.n	403162 <__svfiscanf_r+0x3e6>
  403316:	462f      	mov	r7, r5
  403318:	9d04      	ldr	r5, [sp, #16]
  40331a:	1b65      	subs	r5, r4, r5
  40331c:	f43f ad7d 	beq.w	402e1a <__svfiscanf_r+0x9e>
  403320:	9b07      	ldr	r3, [sp, #28]
  403322:	3301      	adds	r3, #1
  403324:	2200      	movs	r2, #0
  403326:	9307      	str	r3, [sp, #28]
  403328:	9b02      	ldr	r3, [sp, #8]
  40332a:	9305      	str	r3, [sp, #20]
  40332c:	7022      	strb	r2, [r4, #0]
  40332e:	44a9      	add	r9, r5
  403330:	4632      	mov	r2, r6
  403332:	e56c      	b.n	402e0e <__svfiscanf_r+0x92>
  403334:	9502      	str	r5, [sp, #8]
  403336:	9d02      	ldr	r5, [sp, #8]
  403338:	44a9      	add	r9, r5
  40333a:	e7f9      	b.n	403330 <__svfiscanf_r+0x5b4>
  40333c:	2c00      	cmp	r4, #0
  40333e:	f47f af5b 	bne.w	4031f8 <__svfiscanf_r+0x47c>
  403342:	e78f      	b.n	403264 <__svfiscanf_r+0x4e8>
  403344:	9a05      	ldr	r2, [sp, #20]
  403346:	6813      	ldr	r3, [r2, #0]
  403348:	9304      	str	r3, [sp, #16]
  40334a:	4613      	mov	r3, r2
  40334c:	3304      	adds	r3, #4
  40334e:	9305      	str	r3, [sp, #20]
  403350:	e74f      	b.n	4031f2 <__svfiscanf_r+0x476>
  403352:	3002      	adds	r0, #2
  403354:	d10f      	bne.n	403376 <__svfiscanf_r+0x5fa>
  403356:	f8db 3004 	ldr.w	r3, [fp, #4]
  40335a:	2b00      	cmp	r3, #0
  40335c:	4635      	mov	r5, r6
  40335e:	f73f af4b 	bgt.w	4031f8 <__svfiscanf_r+0x47c>
  403362:	4659      	mov	r1, fp
  403364:	4638      	mov	r0, r7
  403366:	f001 f98d 	bl	404684 <__srefill_r>
  40336a:	2800      	cmp	r0, #0
  40336c:	d0e6      	beq.n	40333c <__svfiscanf_r+0x5c0>
  40336e:	e777      	b.n	403260 <__svfiscanf_r+0x4e4>
  403370:	44b1      	add	r9, r6
  403372:	3c01      	subs	r4, #1
  403374:	e768      	b.n	403248 <__svfiscanf_r+0x4cc>
  403376:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403378:	44b1      	add	r9, r6
  40337a:	3c01      	subs	r4, #1
  40337c:	2b00      	cmp	r3, #0
  40337e:	f43f af60 	beq.w	403242 <__svfiscanf_r+0x4c6>
  403382:	e761      	b.n	403248 <__svfiscanf_r+0x4cc>
  403384:	2d00      	cmp	r5, #0
  403386:	f47f ae97 	bne.w	4030b8 <__svfiscanf_r+0x33c>
  40338a:	e7a7      	b.n	4032dc <__svfiscanf_r+0x560>
  40338c:	2d00      	cmp	r5, #0
  40338e:	f43f ad44 	beq.w	402e1a <__svfiscanf_r+0x9e>
  403392:	44a9      	add	r9, r5
  403394:	e7cc      	b.n	403330 <__svfiscanf_r+0x5b4>
  403396:	9d05      	ldr	r5, [sp, #20]
  403398:	4623      	mov	r3, r4
  40339a:	6829      	ldr	r1, [r5, #0]
  40339c:	f8cd b000 	str.w	fp, [sp]
  4033a0:	2201      	movs	r2, #1
  4033a2:	4638      	mov	r0, r7
  4033a4:	f000 fc6a 	bl	403c7c <_fread_r>
  4033a8:	3504      	adds	r5, #4
  4033aa:	2800      	cmp	r0, #0
  4033ac:	d096      	beq.n	4032dc <__svfiscanf_r+0x560>
  4033ae:	9b07      	ldr	r3, [sp, #28]
  4033b0:	9e02      	ldr	r6, [sp, #8]
  4033b2:	9505      	str	r5, [sp, #20]
  4033b4:	3301      	adds	r3, #1
  4033b6:	4481      	add	r9, r0
  4033b8:	9307      	str	r3, [sp, #28]
  4033ba:	4632      	mov	r2, r6
  4033bc:	e527      	b.n	402e0e <__svfiscanf_r+0x92>
  4033be:	4659      	mov	r1, fp
  4033c0:	4638      	mov	r0, r7
  4033c2:	f001 f95f 	bl	404684 <__srefill_r>
  4033c6:	2800      	cmp	r0, #0
  4033c8:	f43f adb5 	beq.w	402f36 <__svfiscanf_r+0x1ba>
  4033cc:	e786      	b.n	4032dc <__svfiscanf_r+0x560>
  4033ce:	78b3      	ldrb	r3, [r6, #2]
  4033d0:	f045 0502 	orr.w	r5, r5, #2
  4033d4:	3602      	adds	r6, #2
  4033d6:	e529      	b.n	402e2c <__svfiscanf_r+0xb0>
  4033d8:	2b00      	cmp	r3, #0
  4033da:	f045 0501 	orr.w	r5, r5, #1
  4033de:	f73f ae3a 	bgt.w	403056 <__svfiscanf_r+0x2da>
  4033e2:	e6be      	b.n	403162 <__svfiscanf_r+0x3e6>
  4033e4:	07ec      	lsls	r4, r5, #31
  4033e6:	d40c      	bmi.n	403402 <__svfiscanf_r+0x686>
  4033e8:	07a8      	lsls	r0, r5, #30
  4033ea:	d50a      	bpl.n	403402 <__svfiscanf_r+0x686>
  4033ec:	9805      	ldr	r0, [sp, #20]
  4033ee:	9e02      	ldr	r6, [sp, #8]
  4033f0:	6801      	ldr	r1, [r0, #0]
  4033f2:	464a      	mov	r2, r9
  4033f4:	17d3      	asrs	r3, r2, #31
  4033f6:	3004      	adds	r0, #4
  4033f8:	e9c1 2300 	strd	r2, r3, [r1]
  4033fc:	9005      	str	r0, [sp, #20]
  4033fe:	4632      	mov	r2, r6
  403400:	e505      	b.n	402e0e <__svfiscanf_r+0x92>
  403402:	9a05      	ldr	r2, [sp, #20]
  403404:	9e02      	ldr	r6, [sp, #8]
  403406:	6813      	ldr	r3, [r2, #0]
  403408:	f8c3 9000 	str.w	r9, [r3]
  40340c:	4613      	mov	r3, r2
  40340e:	3304      	adds	r3, #4
  403410:	9305      	str	r3, [sp, #20]
  403412:	4632      	mov	r2, r6
  403414:	e4fb      	b.n	402e0e <__svfiscanf_r+0x92>
  403416:	4659      	mov	r1, fp
  403418:	4638      	mov	r0, r7
  40341a:	f001 f933 	bl	404684 <__srefill_r>
  40341e:	2800      	cmp	r0, #0
  403420:	f43f ae25 	beq.w	40306e <__svfiscanf_r+0x2f2>
  403424:	e75a      	b.n	4032dc <__svfiscanf_r+0x560>
  403426:	4659      	mov	r1, fp
  403428:	4638      	mov	r0, r7
  40342a:	f001 f92b 	bl	404684 <__srefill_r>
  40342e:	2800      	cmp	r0, #0
  403430:	f47f af54 	bne.w	4032dc <__svfiscanf_r+0x560>
  403434:	f8da c000 	ldr.w	ip, [sl]
  403438:	e59c      	b.n	402f74 <__svfiscanf_r+0x1f8>
  40343a:	4659      	mov	r1, fp
  40343c:	4638      	mov	r0, r7
  40343e:	f001 f921 	bl	404684 <__srefill_r>
  403442:	2800      	cmp	r0, #0
  403444:	f47f af4a 	bne.w	4032dc <__svfiscanf_r+0x560>
  403448:	f8da c000 	ldr.w	ip, [sl]
  40344c:	2602      	movs	r6, #2
  40344e:	e596      	b.n	402f7e <__svfiscanf_r+0x202>
  403450:	4659      	mov	r1, fp
  403452:	4638      	mov	r0, r7
  403454:	f001 f916 	bl	404684 <__srefill_r>
  403458:	2800      	cmp	r0, #0
  40345a:	f47f af3f 	bne.w	4032dc <__svfiscanf_r+0x560>
  40345e:	4b8b      	ldr	r3, [pc, #556]	; (40368c <__svfiscanf_r+0x910>)
  403460:	9003      	str	r0, [sp, #12]
  403462:	f8da c000 	ldr.w	ip, [sl]
  403466:	9306      	str	r3, [sp, #24]
  403468:	2603      	movs	r6, #3
  40346a:	e588      	b.n	402f7e <__svfiscanf_r+0x202>
  40346c:	4659      	mov	r1, fp
  40346e:	4638      	mov	r0, r7
  403470:	f001 f908 	bl	404684 <__srefill_r>
  403474:	2800      	cmp	r0, #0
  403476:	f43f ae2f 	beq.w	4030d8 <__svfiscanf_r+0x35c>
  40347a:	e72f      	b.n	4032dc <__svfiscanf_r+0x560>
  40347c:	2e03      	cmp	r6, #3
  40347e:	f040 8098 	bne.w	4035b2 <__svfiscanf_r+0x836>
  403482:	1e62      	subs	r2, r4, #1
  403484:	2a26      	cmp	r2, #38	; 0x26
  403486:	bf98      	it	ls
  403488:	460a      	movls	r2, r1
  40348a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  40348e:	f04f 0100 	mov.w	r1, #0
  403492:	4618      	mov	r0, r3
  403494:	464b      	mov	r3, r9
  403496:	46b9      	mov	r9, r7
  403498:	9f03      	ldr	r7, [sp, #12]
  40349a:	9104      	str	r1, [sp, #16]
  40349c:	bf88      	it	hi
  40349e:	f1a4 0227 	subhi.w	r2, r4, #39	; 0x27
  4034a2:	f445 6558 	orr.w	r5, r5, #3456	; 0xd80
  4034a6:	bf88      	it	hi
  4034a8:	2427      	movhi	r4, #39	; 0x27
  4034aa:	4646      	mov	r6, r8
  4034ac:	f1ae 012b 	sub.w	r1, lr, #43	; 0x2b
  4034b0:	294d      	cmp	r1, #77	; 0x4d
  4034b2:	d850      	bhi.n	403556 <__svfiscanf_r+0x7da>
  4034b4:	e8df f001 	tbb	[pc, r1]
  4034b8:	4f784f78 	.word	0x4f784f78
  4034bc:	7272664f 	.word	0x7272664f
  4034c0:	72727272 	.word	0x72727272
  4034c4:	4f4a4a72 	.word	0x4f4a4a72
  4034c8:	4f4f4f4f 	.word	0x4f4f4f4f
  4034cc:	45454f4f 	.word	0x45454f4f
  4034d0:	45454545 	.word	0x45454545
  4034d4:	4f4f4f4f 	.word	0x4f4f4f4f
  4034d8:	4f4f4f4f 	.word	0x4f4f4f4f
  4034dc:	4f4f4f4f 	.word	0x4f4f4f4f
  4034e0:	4f4f4f4f 	.word	0x4f4f4f4f
  4034e4:	4f4f274f 	.word	0x4f4f274f
  4034e8:	4f4f4f4f 	.word	0x4f4f4f4f
  4034ec:	45454f4f 	.word	0x45454f4f
  4034f0:	45454545 	.word	0x45454545
  4034f4:	4f4f4f4f 	.word	0x4f4f4f4f
  4034f8:	4f4f4f4f 	.word	0x4f4f4f4f
  4034fc:	4f4f4f4f 	.word	0x4f4f4f4f
  403500:	4f4f4f4f 	.word	0x4f4f4f4f
  403504:	274f      	.short	0x274f
  403506:	f405 61c0 	and.w	r1, r5, #1536	; 0x600
  40350a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  40350e:	d122      	bne.n	403556 <__svfiscanf_r+0x7da>
  403510:	f425 7500 	bic.w	r5, r5, #512	; 0x200
  403514:	f445 65a0 	orr.w	r5, r5, #1280	; 0x500
  403518:	2710      	movs	r7, #16
  40351a:	f886 e000 	strb.w	lr, [r6]
  40351e:	3601      	adds	r6, #1
  403520:	f8db 1004 	ldr.w	r1, [fp, #4]
  403524:	3901      	subs	r1, #1
  403526:	2900      	cmp	r1, #0
  403528:	f8cb 1004 	str.w	r1, [fp, #4]
  40352c:	dd6e      	ble.n	40360c <__svfiscanf_r+0x890>
  40352e:	3001      	adds	r0, #1
  403530:	f8cb 0000 	str.w	r0, [fp]
  403534:	3c01      	subs	r4, #1
  403536:	d00e      	beq.n	403556 <__svfiscanf_r+0x7da>
  403538:	f8db 0000 	ldr.w	r0, [fp]
  40353c:	f890 e000 	ldrb.w	lr, [r0]
  403540:	e7b4      	b.n	4034ac <__svfiscanf_r+0x730>
  403542:	2f0a      	cmp	r7, #10
  403544:	dd07      	ble.n	403556 <__svfiscanf_r+0x7da>
  403546:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  40354a:	e7e6      	b.n	40351a <__svfiscanf_r+0x79e>
  40354c:	4950      	ldr	r1, [pc, #320]	; (403690 <__svfiscanf_r+0x914>)
  40354e:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  403552:	2f08      	cmp	r7, #8
  403554:	dcf7      	bgt.n	403546 <__svfiscanf_r+0x7ca>
  403556:	05e8      	lsls	r0, r5, #23
  403558:	9703      	str	r7, [sp, #12]
  40355a:	464f      	mov	r7, r9
  40355c:	4699      	mov	r9, r3
  40355e:	d505      	bpl.n	40356c <__svfiscanf_r+0x7f0>
  403560:	4546      	cmp	r6, r8
  403562:	f200 80e0 	bhi.w	403726 <__svfiscanf_r+0x9aa>
  403566:	4546      	cmp	r6, r8
  403568:	f43f ac57 	beq.w	402e1a <__svfiscanf_r+0x9e>
  40356c:	f015 0410 	ands.w	r4, r5, #16
  403570:	f000 80b3 	beq.w	4036da <__svfiscanf_r+0x95e>
  403574:	9b04      	ldr	r3, [sp, #16]
  403576:	ebc8 0606 	rsb	r6, r8, r6
  40357a:	441e      	add	r6, r3
  40357c:	44b1      	add	r9, r6
  40357e:	9e02      	ldr	r6, [sp, #8]
  403580:	4632      	mov	r2, r6
  403582:	e444      	b.n	402e0e <__svfiscanf_r+0x92>
  403584:	0529      	lsls	r1, r5, #20
  403586:	d5c8      	bpl.n	40351a <__svfiscanf_r+0x79e>
  403588:	b917      	cbnz	r7, 403590 <__svfiscanf_r+0x814>
  40358a:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  40358e:	2708      	movs	r7, #8
  403590:	0569      	lsls	r1, r5, #21
  403592:	f140 80b6 	bpl.w	403702 <__svfiscanf_r+0x986>
  403596:	f425 65b0 	bic.w	r5, r5, #1408	; 0x580
  40359a:	e7be      	b.n	40351a <__svfiscanf_r+0x79e>
  40359c:	493c      	ldr	r1, [pc, #240]	; (403690 <__svfiscanf_r+0x914>)
  40359e:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  4035a2:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  4035a6:	e7b8      	b.n	40351a <__svfiscanf_r+0x79e>
  4035a8:	0629      	lsls	r1, r5, #24
  4035aa:	d5d4      	bpl.n	403556 <__svfiscanf_r+0x7da>
  4035ac:	f025 0580 	bic.w	r5, r5, #128	; 0x80
  4035b0:	e7b3      	b.n	40351a <__svfiscanf_r+0x79e>
  4035b2:	2c00      	cmp	r4, #0
  4035b4:	bf08      	it	eq
  4035b6:	f04f 34ff 	moveq.w	r4, #4294967295
  4035ba:	f015 0201 	ands.w	r2, r5, #1
  4035be:	d169      	bne.n	403694 <__svfiscanf_r+0x918>
  4035c0:	06e9      	lsls	r1, r5, #27
  4035c2:	d52e      	bpl.n	403622 <__svfiscanf_r+0x8a6>
  4035c4:	4615      	mov	r5, r2
  4035c6:	4661      	mov	r1, ip
  4035c8:	e002      	b.n	4035d0 <__svfiscanf_r+0x854>
  4035ca:	781a      	ldrb	r2, [r3, #0]
  4035cc:	440a      	add	r2, r1
  4035ce:	7850      	ldrb	r0, [r2, #1]
  4035d0:	0706      	lsls	r6, r0, #28
  4035d2:	f103 0301 	add.w	r3, r3, #1
  4035d6:	f53f ad6f 	bmi.w	4030b8 <__svfiscanf_r+0x33c>
  4035da:	f8db 2004 	ldr.w	r2, [fp, #4]
  4035de:	f8cb 3000 	str.w	r3, [fp]
  4035e2:	3501      	adds	r5, #1
  4035e4:	3a01      	subs	r2, #1
  4035e6:	42ac      	cmp	r4, r5
  4035e8:	f8cb 2004 	str.w	r2, [fp, #4]
  4035ec:	f43f ad64 	beq.w	4030b8 <__svfiscanf_r+0x33c>
  4035f0:	2a00      	cmp	r2, #0
  4035f2:	dcea      	bgt.n	4035ca <__svfiscanf_r+0x84e>
  4035f4:	4659      	mov	r1, fp
  4035f6:	4638      	mov	r0, r7
  4035f8:	f001 f844 	bl	404684 <__srefill_r>
  4035fc:	2800      	cmp	r0, #0
  4035fe:	f47f ad5b 	bne.w	4030b8 <__svfiscanf_r+0x33c>
  403602:	f8da 1000 	ldr.w	r1, [sl]
  403606:	f8db 3000 	ldr.w	r3, [fp]
  40360a:	e7de      	b.n	4035ca <__svfiscanf_r+0x84e>
  40360c:	4659      	mov	r1, fp
  40360e:	4648      	mov	r0, r9
  403610:	9208      	str	r2, [sp, #32]
  403612:	9303      	str	r3, [sp, #12]
  403614:	f001 f836 	bl	404684 <__srefill_r>
  403618:	9b03      	ldr	r3, [sp, #12]
  40361a:	9a08      	ldr	r2, [sp, #32]
  40361c:	2800      	cmp	r0, #0
  40361e:	d089      	beq.n	403534 <__svfiscanf_r+0x7b8>
  403620:	e799      	b.n	403556 <__svfiscanf_r+0x7da>
  403622:	9905      	ldr	r1, [sp, #20]
  403624:	680e      	ldr	r6, [r1, #0]
  403626:	1d0d      	adds	r5, r1, #4
  403628:	4434      	add	r4, r6
  40362a:	46b0      	mov	r8, r6
  40362c:	e006      	b.n	40363c <__svfiscanf_r+0x8c0>
  40362e:	f8db 3000 	ldr.w	r3, [fp]
  403632:	f8da 2000 	ldr.w	r2, [sl]
  403636:	7819      	ldrb	r1, [r3, #0]
  403638:	440a      	add	r2, r1
  40363a:	7850      	ldrb	r0, [r2, #1]
  40363c:	0700      	lsls	r0, r0, #28
  40363e:	f103 0101 	add.w	r1, r3, #1
  403642:	d415      	bmi.n	403670 <__svfiscanf_r+0x8f4>
  403644:	f8db 2004 	ldr.w	r2, [fp, #4]
  403648:	f8cb 1000 	str.w	r1, [fp]
  40364c:	3a01      	subs	r2, #1
  40364e:	f8cb 2004 	str.w	r2, [fp, #4]
  403652:	781b      	ldrb	r3, [r3, #0]
  403654:	f808 3b01 	strb.w	r3, [r8], #1
  403658:	4544      	cmp	r4, r8
  40365a:	d009      	beq.n	403670 <__svfiscanf_r+0x8f4>
  40365c:	f8db 3004 	ldr.w	r3, [fp, #4]
  403660:	2b00      	cmp	r3, #0
  403662:	dce4      	bgt.n	40362e <__svfiscanf_r+0x8b2>
  403664:	4659      	mov	r1, fp
  403666:	4638      	mov	r0, r7
  403668:	f001 f80c 	bl	404684 <__srefill_r>
  40366c:	2800      	cmp	r0, #0
  40366e:	d0de      	beq.n	40362e <__svfiscanf_r+0x8b2>
  403670:	ebc6 0608 	rsb	r6, r6, r8
  403674:	9a07      	ldr	r2, [sp, #28]
  403676:	9505      	str	r5, [sp, #20]
  403678:	44b1      	add	r9, r6
  40367a:	9e02      	ldr	r6, [sp, #8]
  40367c:	3201      	adds	r2, #1
  40367e:	2300      	movs	r3, #0
  403680:	9207      	str	r2, [sp, #28]
  403682:	f888 3000 	strb.w	r3, [r8]
  403686:	4632      	mov	r2, r6
  403688:	f7ff bbc1 	b.w	402e0e <__svfiscanf_r+0x92>
  40368c:	00404895 	.word	0x00404895
  403690:	0040575c 	.word	0x0040575c
  403694:	ab0c      	add	r3, sp, #48	; 0x30
  403696:	4618      	mov	r0, r3
  403698:	2208      	movs	r2, #8
  40369a:	9308      	str	r3, [sp, #32]
  40369c:	f7fe f842 	bl	401724 <memset>
  4036a0:	f015 0310 	ands.w	r3, r5, #16
  4036a4:	9304      	str	r3, [sp, #16]
  4036a6:	d13b      	bne.n	403720 <__svfiscanf_r+0x9a4>
  4036a8:	9a05      	ldr	r2, [sp, #20]
  4036aa:	4613      	mov	r3, r2
  4036ac:	3304      	adds	r3, #4
  4036ae:	f8d2 8000 	ldr.w	r8, [r2]
  4036b2:	9305      	str	r3, [sp, #20]
  4036b4:	2600      	movs	r6, #0
  4036b6:	f8db 3000 	ldr.w	r3, [fp]
  4036ba:	f8da 2000 	ldr.w	r2, [sl]
  4036be:	781b      	ldrb	r3, [r3, #0]
  4036c0:	4413      	add	r3, r2
  4036c2:	785b      	ldrb	r3, [r3, #1]
  4036c4:	0718      	lsls	r0, r3, #28
  4036c6:	d401      	bmi.n	4036cc <__svfiscanf_r+0x950>
  4036c8:	2c00      	cmp	r4, #0
  4036ca:	d149      	bne.n	403760 <__svfiscanf_r+0x9e4>
  4036cc:	9b04      	ldr	r3, [sp, #16]
  4036ce:	2b00      	cmp	r3, #0
  4036d0:	f47f adcd 	bne.w	40326e <__svfiscanf_r+0x4f2>
  4036d4:	f8c8 3000 	str.w	r3, [r8]
  4036d8:	e5c6      	b.n	403268 <__svfiscanf_r+0x4ec>
  4036da:	4622      	mov	r2, r4
  4036dc:	4641      	mov	r1, r8
  4036de:	7034      	strb	r4, [r6, #0]
  4036e0:	9b03      	ldr	r3, [sp, #12]
  4036e2:	9c06      	ldr	r4, [sp, #24]
  4036e4:	4638      	mov	r0, r7
  4036e6:	47a0      	blx	r4
  4036e8:	06a9      	lsls	r1, r5, #26
  4036ea:	d413      	bmi.n	403714 <__svfiscanf_r+0x998>
  4036ec:	076a      	lsls	r2, r5, #29
  4036ee:	d522      	bpl.n	403736 <__svfiscanf_r+0x9ba>
  4036f0:	9a05      	ldr	r2, [sp, #20]
  4036f2:	6813      	ldr	r3, [r2, #0]
  4036f4:	3204      	adds	r2, #4
  4036f6:	9205      	str	r2, [sp, #20]
  4036f8:	8018      	strh	r0, [r3, #0]
  4036fa:	9b07      	ldr	r3, [sp, #28]
  4036fc:	3301      	adds	r3, #1
  4036fe:	9307      	str	r3, [sp, #28]
  403700:	e738      	b.n	403574 <__svfiscanf_r+0x7f8>
  403702:	f425 7560 	bic.w	r5, r5, #896	; 0x380
  403706:	b10a      	cbz	r2, 40370c <__svfiscanf_r+0x990>
  403708:	3a01      	subs	r2, #1
  40370a:	3401      	adds	r4, #1
  40370c:	9904      	ldr	r1, [sp, #16]
  40370e:	3101      	adds	r1, #1
  403710:	9104      	str	r1, [sp, #16]
  403712:	e705      	b.n	403520 <__svfiscanf_r+0x7a4>
  403714:	9a05      	ldr	r2, [sp, #20]
  403716:	6813      	ldr	r3, [r2, #0]
  403718:	3204      	adds	r2, #4
  40371a:	9205      	str	r2, [sp, #20]
  40371c:	6018      	str	r0, [r3, #0]
  40371e:	e7ec      	b.n	4036fa <__svfiscanf_r+0x97e>
  403720:	f10d 082c 	add.w	r8, sp, #44	; 0x2c
  403724:	e7c6      	b.n	4036b4 <__svfiscanf_r+0x938>
  403726:	f816 1c01 	ldrb.w	r1, [r6, #-1]
  40372a:	465a      	mov	r2, fp
  40372c:	4638      	mov	r0, r7
  40372e:	f001 fbd7 	bl	404ee0 <_ungetc_r>
  403732:	3e01      	subs	r6, #1
  403734:	e717      	b.n	403566 <__svfiscanf_r+0x7ea>
  403736:	f015 0201 	ands.w	r2, r5, #1
  40373a:	d1eb      	bne.n	403714 <__svfiscanf_r+0x998>
  40373c:	07ab      	lsls	r3, r5, #30
  40373e:	d5e9      	bpl.n	403714 <__svfiscanf_r+0x998>
  403740:	4b30      	ldr	r3, [pc, #192]	; (403804 <__svfiscanf_r+0xa88>)
  403742:	9906      	ldr	r1, [sp, #24]
  403744:	4299      	cmp	r1, r3
  403746:	4638      	mov	r0, r7
  403748:	9b03      	ldr	r3, [sp, #12]
  40374a:	4641      	mov	r1, r8
  40374c:	d053      	beq.n	4037f6 <__svfiscanf_r+0xa7a>
  40374e:	f001 f935 	bl	4049bc <_strtoll_r>
  403752:	9a05      	ldr	r2, [sp, #20]
  403754:	6813      	ldr	r3, [r2, #0]
  403756:	3204      	adds	r2, #4
  403758:	9205      	str	r2, [sp, #20]
  40375a:	e9c3 0100 	strd	r0, r1, [r3]
  40375e:	e7cc      	b.n	4036fa <__svfiscanf_r+0x97e>
  403760:	f000 fe74 	bl	40444c <__locale_mb_cur_max>
  403764:	4286      	cmp	r6, r0
  403766:	f43f adb9 	beq.w	4032dc <__svfiscanf_r+0x560>
  40376a:	e89b 000c 	ldmia.w	fp, {r2, r3}
  40376e:	f812 0b01 	ldrb.w	r0, [r2], #1
  403772:	f8cb 2000 	str.w	r2, [fp]
  403776:	9a08      	ldr	r2, [sp, #32]
  403778:	9200      	str	r2, [sp, #0]
  40377a:	aa0e      	add	r2, sp, #56	; 0x38
  40377c:	1c75      	adds	r5, r6, #1
  40377e:	3b01      	subs	r3, #1
  403780:	5590      	strb	r0, [r2, r6]
  403782:	f8cb 3004 	str.w	r3, [fp, #4]
  403786:	4641      	mov	r1, r8
  403788:	462b      	mov	r3, r5
  40378a:	4638      	mov	r0, r7
  40378c:	f000 fed8 	bl	404540 <_mbrtowc_r>
  403790:	1c46      	adds	r6, r0, #1
  403792:	f43f ada3 	beq.w	4032dc <__svfiscanf_r+0x560>
  403796:	b188      	cbz	r0, 4037bc <__svfiscanf_r+0xa40>
  403798:	3002      	adds	r0, #2
  40379a:	bf08      	it	eq
  40379c:	462e      	moveq	r6, r5
  40379e:	d12d      	bne.n	4037fc <__svfiscanf_r+0xa80>
  4037a0:	f8db 3004 	ldr.w	r3, [fp, #4]
  4037a4:	2b00      	cmp	r3, #0
  4037a6:	dc86      	bgt.n	4036b6 <__svfiscanf_r+0x93a>
  4037a8:	4659      	mov	r1, fp
  4037aa:	4638      	mov	r0, r7
  4037ac:	f000 ff6a 	bl	404684 <__srefill_r>
  4037b0:	2800      	cmp	r0, #0
  4037b2:	d080      	beq.n	4036b6 <__svfiscanf_r+0x93a>
  4037b4:	2e00      	cmp	r6, #0
  4037b6:	f47f ad91 	bne.w	4032dc <__svfiscanf_r+0x560>
  4037ba:	e787      	b.n	4036cc <__svfiscanf_r+0x950>
  4037bc:	f8c8 0000 	str.w	r0, [r8]
  4037c0:	f000 fe32 	bl	404428 <iswspace>
  4037c4:	b168      	cbz	r0, 4037e2 <__svfiscanf_r+0xa66>
  4037c6:	2d00      	cmp	r5, #0
  4037c8:	d080      	beq.n	4036cc <__svfiscanf_r+0x950>
  4037ca:	ab0e      	add	r3, sp, #56	; 0x38
  4037cc:	195c      	adds	r4, r3, r5
  4037ce:	3d01      	subs	r5, #1
  4037d0:	465a      	mov	r2, fp
  4037d2:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
  4037d6:	4638      	mov	r0, r7
  4037d8:	f001 fb82 	bl	404ee0 <_ungetc_r>
  4037dc:	2d00      	cmp	r5, #0
  4037de:	d1f6      	bne.n	4037ce <__svfiscanf_r+0xa52>
  4037e0:	e774      	b.n	4036cc <__svfiscanf_r+0x950>
  4037e2:	9b04      	ldr	r3, [sp, #16]
  4037e4:	44a9      	add	r9, r5
  4037e6:	3c01      	subs	r4, #1
  4037e8:	b91b      	cbnz	r3, 4037f2 <__svfiscanf_r+0xa76>
  4037ea:	f108 0804 	add.w	r8, r8, #4
  4037ee:	461e      	mov	r6, r3
  4037f0:	e7d6      	b.n	4037a0 <__svfiscanf_r+0xa24>
  4037f2:	4606      	mov	r6, r0
  4037f4:	e7d4      	b.n	4037a0 <__svfiscanf_r+0xa24>
  4037f6:	f001 fa53 	bl	404ca0 <_strtoull_r>
  4037fa:	e7aa      	b.n	403752 <__svfiscanf_r+0x9d6>
  4037fc:	f8d8 0000 	ldr.w	r0, [r8]
  403800:	e7de      	b.n	4037c0 <__svfiscanf_r+0xa44>
  403802:	bf00      	nop
  403804:	00404b6d 	.word	0x00404b6d

00403808 <__swsetup_r>:
  403808:	b538      	push	{r3, r4, r5, lr}
  40380a:	4b30      	ldr	r3, [pc, #192]	; (4038cc <__swsetup_r+0xc4>)
  40380c:	681b      	ldr	r3, [r3, #0]
  40380e:	4605      	mov	r5, r0
  403810:	460c      	mov	r4, r1
  403812:	b113      	cbz	r3, 40381a <__swsetup_r+0x12>
  403814:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  403816:	2a00      	cmp	r2, #0
  403818:	d038      	beq.n	40388c <__swsetup_r+0x84>
  40381a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40381e:	b293      	uxth	r3, r2
  403820:	0718      	lsls	r0, r3, #28
  403822:	d50c      	bpl.n	40383e <__swsetup_r+0x36>
  403824:	6920      	ldr	r0, [r4, #16]
  403826:	b1a8      	cbz	r0, 403854 <__swsetup_r+0x4c>
  403828:	f013 0201 	ands.w	r2, r3, #1
  40382c:	d01e      	beq.n	40386c <__swsetup_r+0x64>
  40382e:	6963      	ldr	r3, [r4, #20]
  403830:	2200      	movs	r2, #0
  403832:	425b      	negs	r3, r3
  403834:	61a3      	str	r3, [r4, #24]
  403836:	60a2      	str	r2, [r4, #8]
  403838:	b1f0      	cbz	r0, 403878 <__swsetup_r+0x70>
  40383a:	2000      	movs	r0, #0
  40383c:	bd38      	pop	{r3, r4, r5, pc}
  40383e:	06d9      	lsls	r1, r3, #27
  403840:	d53c      	bpl.n	4038bc <__swsetup_r+0xb4>
  403842:	0758      	lsls	r0, r3, #29
  403844:	d426      	bmi.n	403894 <__swsetup_r+0x8c>
  403846:	6920      	ldr	r0, [r4, #16]
  403848:	f042 0308 	orr.w	r3, r2, #8
  40384c:	81a3      	strh	r3, [r4, #12]
  40384e:	b29b      	uxth	r3, r3
  403850:	2800      	cmp	r0, #0
  403852:	d1e9      	bne.n	403828 <__swsetup_r+0x20>
  403854:	f403 7220 	and.w	r2, r3, #640	; 0x280
  403858:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  40385c:	d0e4      	beq.n	403828 <__swsetup_r+0x20>
  40385e:	4628      	mov	r0, r5
  403860:	4621      	mov	r1, r4
  403862:	f000 fe29 	bl	4044b8 <__smakebuf_r>
  403866:	89a3      	ldrh	r3, [r4, #12]
  403868:	6920      	ldr	r0, [r4, #16]
  40386a:	e7dd      	b.n	403828 <__swsetup_r+0x20>
  40386c:	0799      	lsls	r1, r3, #30
  40386e:	bf58      	it	pl
  403870:	6962      	ldrpl	r2, [r4, #20]
  403872:	60a2      	str	r2, [r4, #8]
  403874:	2800      	cmp	r0, #0
  403876:	d1e0      	bne.n	40383a <__swsetup_r+0x32>
  403878:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40387c:	061a      	lsls	r2, r3, #24
  40387e:	d5dd      	bpl.n	40383c <__swsetup_r+0x34>
  403880:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403884:	81a3      	strh	r3, [r4, #12]
  403886:	f04f 30ff 	mov.w	r0, #4294967295
  40388a:	bd38      	pop	{r3, r4, r5, pc}
  40388c:	4618      	mov	r0, r3
  40388e:	f000 f979 	bl	403b84 <__sinit>
  403892:	e7c2      	b.n	40381a <__swsetup_r+0x12>
  403894:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403896:	b151      	cbz	r1, 4038ae <__swsetup_r+0xa6>
  403898:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40389c:	4299      	cmp	r1, r3
  40389e:	d004      	beq.n	4038aa <__swsetup_r+0xa2>
  4038a0:	4628      	mov	r0, r5
  4038a2:	f000 fb07 	bl	403eb4 <_free_r>
  4038a6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4038aa:	2300      	movs	r3, #0
  4038ac:	6323      	str	r3, [r4, #48]	; 0x30
  4038ae:	2300      	movs	r3, #0
  4038b0:	6920      	ldr	r0, [r4, #16]
  4038b2:	6063      	str	r3, [r4, #4]
  4038b4:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  4038b8:	6020      	str	r0, [r4, #0]
  4038ba:	e7c5      	b.n	403848 <__swsetup_r+0x40>
  4038bc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  4038c0:	2309      	movs	r3, #9
  4038c2:	602b      	str	r3, [r5, #0]
  4038c4:	f04f 30ff 	mov.w	r0, #4294967295
  4038c8:	81a2      	strh	r2, [r4, #12]
  4038ca:	bd38      	pop	{r3, r4, r5, pc}
  4038cc:	20000438 	.word	0x20000438

004038d0 <register_fini>:
  4038d0:	4b02      	ldr	r3, [pc, #8]	; (4038dc <register_fini+0xc>)
  4038d2:	b113      	cbz	r3, 4038da <register_fini+0xa>
  4038d4:	4802      	ldr	r0, [pc, #8]	; (4038e0 <register_fini+0x10>)
  4038d6:	f000 b805 	b.w	4038e4 <atexit>
  4038da:	4770      	bx	lr
  4038dc:	00000000 	.word	0x00000000
  4038e0:	00403b99 	.word	0x00403b99

004038e4 <atexit>:
  4038e4:	2300      	movs	r3, #0
  4038e6:	4601      	mov	r1, r0
  4038e8:	461a      	mov	r2, r3
  4038ea:	4618      	mov	r0, r3
  4038ec:	f001 bc0c 	b.w	405108 <__register_exitproc>

004038f0 <__sflush_r>:
  4038f0:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  4038f4:	b29a      	uxth	r2, r3
  4038f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4038fa:	460d      	mov	r5, r1
  4038fc:	0711      	lsls	r1, r2, #28
  4038fe:	4680      	mov	r8, r0
  403900:	d43c      	bmi.n	40397c <__sflush_r+0x8c>
  403902:	686a      	ldr	r2, [r5, #4]
  403904:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  403908:	2a00      	cmp	r2, #0
  40390a:	81ab      	strh	r3, [r5, #12]
  40390c:	dd73      	ble.n	4039f6 <__sflush_r+0x106>
  40390e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  403910:	2c00      	cmp	r4, #0
  403912:	d04b      	beq.n	4039ac <__sflush_r+0xbc>
  403914:	b29b      	uxth	r3, r3
  403916:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  40391a:	2100      	movs	r1, #0
  40391c:	b292      	uxth	r2, r2
  40391e:	f8d8 6000 	ldr.w	r6, [r8]
  403922:	f8c8 1000 	str.w	r1, [r8]
  403926:	2a00      	cmp	r2, #0
  403928:	d069      	beq.n	4039fe <__sflush_r+0x10e>
  40392a:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  40392c:	075f      	lsls	r7, r3, #29
  40392e:	d505      	bpl.n	40393c <__sflush_r+0x4c>
  403930:	6869      	ldr	r1, [r5, #4]
  403932:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  403934:	1a52      	subs	r2, r2, r1
  403936:	b10b      	cbz	r3, 40393c <__sflush_r+0x4c>
  403938:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  40393a:	1ad2      	subs	r2, r2, r3
  40393c:	2300      	movs	r3, #0
  40393e:	69e9      	ldr	r1, [r5, #28]
  403940:	4640      	mov	r0, r8
  403942:	47a0      	blx	r4
  403944:	1c44      	adds	r4, r0, #1
  403946:	d03c      	beq.n	4039c2 <__sflush_r+0xd2>
  403948:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  40394c:	692a      	ldr	r2, [r5, #16]
  40394e:	602a      	str	r2, [r5, #0]
  403950:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  403954:	2200      	movs	r2, #0
  403956:	81ab      	strh	r3, [r5, #12]
  403958:	04db      	lsls	r3, r3, #19
  40395a:	606a      	str	r2, [r5, #4]
  40395c:	d449      	bmi.n	4039f2 <__sflush_r+0x102>
  40395e:	6b29      	ldr	r1, [r5, #48]	; 0x30
  403960:	f8c8 6000 	str.w	r6, [r8]
  403964:	b311      	cbz	r1, 4039ac <__sflush_r+0xbc>
  403966:	f105 0340 	add.w	r3, r5, #64	; 0x40
  40396a:	4299      	cmp	r1, r3
  40396c:	d002      	beq.n	403974 <__sflush_r+0x84>
  40396e:	4640      	mov	r0, r8
  403970:	f000 faa0 	bl	403eb4 <_free_r>
  403974:	2000      	movs	r0, #0
  403976:	6328      	str	r0, [r5, #48]	; 0x30
  403978:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40397c:	692e      	ldr	r6, [r5, #16]
  40397e:	b1ae      	cbz	r6, 4039ac <__sflush_r+0xbc>
  403980:	682c      	ldr	r4, [r5, #0]
  403982:	602e      	str	r6, [r5, #0]
  403984:	0790      	lsls	r0, r2, #30
  403986:	bf0c      	ite	eq
  403988:	696b      	ldreq	r3, [r5, #20]
  40398a:	2300      	movne	r3, #0
  40398c:	1ba4      	subs	r4, r4, r6
  40398e:	60ab      	str	r3, [r5, #8]
  403990:	e00a      	b.n	4039a8 <__sflush_r+0xb8>
  403992:	4623      	mov	r3, r4
  403994:	4632      	mov	r2, r6
  403996:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  403998:	69e9      	ldr	r1, [r5, #28]
  40399a:	4640      	mov	r0, r8
  40399c:	47b8      	blx	r7
  40399e:	2800      	cmp	r0, #0
  4039a0:	eba4 0400 	sub.w	r4, r4, r0
  4039a4:	4406      	add	r6, r0
  4039a6:	dd04      	ble.n	4039b2 <__sflush_r+0xc2>
  4039a8:	2c00      	cmp	r4, #0
  4039aa:	dcf2      	bgt.n	403992 <__sflush_r+0xa2>
  4039ac:	2000      	movs	r0, #0
  4039ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4039b2:	89ab      	ldrh	r3, [r5, #12]
  4039b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4039b8:	81ab      	strh	r3, [r5, #12]
  4039ba:	f04f 30ff 	mov.w	r0, #4294967295
  4039be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4039c2:	f8d8 2000 	ldr.w	r2, [r8]
  4039c6:	2a1d      	cmp	r2, #29
  4039c8:	d8f3      	bhi.n	4039b2 <__sflush_r+0xc2>
  4039ca:	4b1a      	ldr	r3, [pc, #104]	; (403a34 <__sflush_r+0x144>)
  4039cc:	40d3      	lsrs	r3, r2
  4039ce:	f003 0301 	and.w	r3, r3, #1
  4039d2:	f083 0401 	eor.w	r4, r3, #1
  4039d6:	2b00      	cmp	r3, #0
  4039d8:	d0eb      	beq.n	4039b2 <__sflush_r+0xc2>
  4039da:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4039de:	6929      	ldr	r1, [r5, #16]
  4039e0:	6029      	str	r1, [r5, #0]
  4039e2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4039e6:	04d9      	lsls	r1, r3, #19
  4039e8:	606c      	str	r4, [r5, #4]
  4039ea:	81ab      	strh	r3, [r5, #12]
  4039ec:	d5b7      	bpl.n	40395e <__sflush_r+0x6e>
  4039ee:	2a00      	cmp	r2, #0
  4039f0:	d1b5      	bne.n	40395e <__sflush_r+0x6e>
  4039f2:	6528      	str	r0, [r5, #80]	; 0x50
  4039f4:	e7b3      	b.n	40395e <__sflush_r+0x6e>
  4039f6:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  4039f8:	2a00      	cmp	r2, #0
  4039fa:	dc88      	bgt.n	40390e <__sflush_r+0x1e>
  4039fc:	e7d6      	b.n	4039ac <__sflush_r+0xbc>
  4039fe:	2301      	movs	r3, #1
  403a00:	69e9      	ldr	r1, [r5, #28]
  403a02:	4640      	mov	r0, r8
  403a04:	47a0      	blx	r4
  403a06:	1c43      	adds	r3, r0, #1
  403a08:	4602      	mov	r2, r0
  403a0a:	d002      	beq.n	403a12 <__sflush_r+0x122>
  403a0c:	89ab      	ldrh	r3, [r5, #12]
  403a0e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  403a10:	e78c      	b.n	40392c <__sflush_r+0x3c>
  403a12:	f8d8 3000 	ldr.w	r3, [r8]
  403a16:	2b00      	cmp	r3, #0
  403a18:	d0f8      	beq.n	403a0c <__sflush_r+0x11c>
  403a1a:	2b1d      	cmp	r3, #29
  403a1c:	d001      	beq.n	403a22 <__sflush_r+0x132>
  403a1e:	2b16      	cmp	r3, #22
  403a20:	d102      	bne.n	403a28 <__sflush_r+0x138>
  403a22:	f8c8 6000 	str.w	r6, [r8]
  403a26:	e7c1      	b.n	4039ac <__sflush_r+0xbc>
  403a28:	89ab      	ldrh	r3, [r5, #12]
  403a2a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403a2e:	81ab      	strh	r3, [r5, #12]
  403a30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403a34:	20400001 	.word	0x20400001

00403a38 <_fflush_r>:
  403a38:	b510      	push	{r4, lr}
  403a3a:	4604      	mov	r4, r0
  403a3c:	b082      	sub	sp, #8
  403a3e:	b108      	cbz	r0, 403a44 <_fflush_r+0xc>
  403a40:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403a42:	b153      	cbz	r3, 403a5a <_fflush_r+0x22>
  403a44:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  403a48:	b908      	cbnz	r0, 403a4e <_fflush_r+0x16>
  403a4a:	b002      	add	sp, #8
  403a4c:	bd10      	pop	{r4, pc}
  403a4e:	4620      	mov	r0, r4
  403a50:	b002      	add	sp, #8
  403a52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  403a56:	f7ff bf4b 	b.w	4038f0 <__sflush_r>
  403a5a:	9101      	str	r1, [sp, #4]
  403a5c:	f000 f892 	bl	403b84 <__sinit>
  403a60:	9901      	ldr	r1, [sp, #4]
  403a62:	e7ef      	b.n	403a44 <_fflush_r+0xc>

00403a64 <fflush>:
  403a64:	b120      	cbz	r0, 403a70 <fflush+0xc>
  403a66:	4b05      	ldr	r3, [pc, #20]	; (403a7c <fflush+0x18>)
  403a68:	4601      	mov	r1, r0
  403a6a:	6818      	ldr	r0, [r3, #0]
  403a6c:	f7ff bfe4 	b.w	403a38 <_fflush_r>
  403a70:	4b03      	ldr	r3, [pc, #12]	; (403a80 <fflush+0x1c>)
  403a72:	4904      	ldr	r1, [pc, #16]	; (403a84 <fflush+0x20>)
  403a74:	6818      	ldr	r0, [r3, #0]
  403a76:	f000 bcad 	b.w	4043d4 <_fwalk_reent>
  403a7a:	bf00      	nop
  403a7c:	20000438 	.word	0x20000438
  403a80:	00405704 	.word	0x00405704
  403a84:	00403a39 	.word	0x00403a39

00403a88 <_cleanup_r>:
  403a88:	4901      	ldr	r1, [pc, #4]	; (403a90 <_cleanup_r+0x8>)
  403a8a:	f000 bca3 	b.w	4043d4 <_fwalk_reent>
  403a8e:	bf00      	nop
  403a90:	004051d1 	.word	0x004051d1

00403a94 <__sinit.part.1>:
  403a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403a98:	4b35      	ldr	r3, [pc, #212]	; (403b70 <__sinit.part.1+0xdc>)
  403a9a:	6845      	ldr	r5, [r0, #4]
  403a9c:	63c3      	str	r3, [r0, #60]	; 0x3c
  403a9e:	2400      	movs	r4, #0
  403aa0:	4607      	mov	r7, r0
  403aa2:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
  403aa6:	2304      	movs	r3, #4
  403aa8:	2103      	movs	r1, #3
  403aaa:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
  403aae:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
  403ab2:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
  403ab6:	b083      	sub	sp, #12
  403ab8:	602c      	str	r4, [r5, #0]
  403aba:	606c      	str	r4, [r5, #4]
  403abc:	60ac      	str	r4, [r5, #8]
  403abe:	666c      	str	r4, [r5, #100]	; 0x64
  403ac0:	81ec      	strh	r4, [r5, #14]
  403ac2:	612c      	str	r4, [r5, #16]
  403ac4:	616c      	str	r4, [r5, #20]
  403ac6:	61ac      	str	r4, [r5, #24]
  403ac8:	81ab      	strh	r3, [r5, #12]
  403aca:	4621      	mov	r1, r4
  403acc:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  403ad0:	2208      	movs	r2, #8
  403ad2:	f7fd fe27 	bl	401724 <memset>
  403ad6:	68be      	ldr	r6, [r7, #8]
  403ad8:	f8df b098 	ldr.w	fp, [pc, #152]	; 403b74 <__sinit.part.1+0xe0>
  403adc:	f8df a098 	ldr.w	sl, [pc, #152]	; 403b78 <__sinit.part.1+0xe4>
  403ae0:	f8df 9098 	ldr.w	r9, [pc, #152]	; 403b7c <__sinit.part.1+0xe8>
  403ae4:	f8df 8098 	ldr.w	r8, [pc, #152]	; 403b80 <__sinit.part.1+0xec>
  403ae8:	f8c5 b020 	str.w	fp, [r5, #32]
  403aec:	2301      	movs	r3, #1
  403aee:	2209      	movs	r2, #9
  403af0:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  403af4:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  403af8:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  403afc:	61ed      	str	r5, [r5, #28]
  403afe:	4621      	mov	r1, r4
  403b00:	81f3      	strh	r3, [r6, #14]
  403b02:	81b2      	strh	r2, [r6, #12]
  403b04:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  403b08:	6034      	str	r4, [r6, #0]
  403b0a:	6074      	str	r4, [r6, #4]
  403b0c:	60b4      	str	r4, [r6, #8]
  403b0e:	6674      	str	r4, [r6, #100]	; 0x64
  403b10:	6134      	str	r4, [r6, #16]
  403b12:	6174      	str	r4, [r6, #20]
  403b14:	61b4      	str	r4, [r6, #24]
  403b16:	2208      	movs	r2, #8
  403b18:	9301      	str	r3, [sp, #4]
  403b1a:	f7fd fe03 	bl	401724 <memset>
  403b1e:	68fd      	ldr	r5, [r7, #12]
  403b20:	61f6      	str	r6, [r6, #28]
  403b22:	2012      	movs	r0, #18
  403b24:	2202      	movs	r2, #2
  403b26:	f8c6 b020 	str.w	fp, [r6, #32]
  403b2a:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  403b2e:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  403b32:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  403b36:	4621      	mov	r1, r4
  403b38:	81a8      	strh	r0, [r5, #12]
  403b3a:	81ea      	strh	r2, [r5, #14]
  403b3c:	602c      	str	r4, [r5, #0]
  403b3e:	606c      	str	r4, [r5, #4]
  403b40:	60ac      	str	r4, [r5, #8]
  403b42:	666c      	str	r4, [r5, #100]	; 0x64
  403b44:	612c      	str	r4, [r5, #16]
  403b46:	616c      	str	r4, [r5, #20]
  403b48:	61ac      	str	r4, [r5, #24]
  403b4a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  403b4e:	2208      	movs	r2, #8
  403b50:	f7fd fde8 	bl	401724 <memset>
  403b54:	9b01      	ldr	r3, [sp, #4]
  403b56:	61ed      	str	r5, [r5, #28]
  403b58:	f8c5 b020 	str.w	fp, [r5, #32]
  403b5c:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  403b60:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  403b64:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  403b68:	63bb      	str	r3, [r7, #56]	; 0x38
  403b6a:	b003      	add	sp, #12
  403b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b70:	00403a89 	.word	0x00403a89
  403b74:	0040480d 	.word	0x0040480d
  403b78:	00404831 	.word	0x00404831
  403b7c:	0040486d 	.word	0x0040486d
  403b80:	0040488d 	.word	0x0040488d

00403b84 <__sinit>:
  403b84:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403b86:	b103      	cbz	r3, 403b8a <__sinit+0x6>
  403b88:	4770      	bx	lr
  403b8a:	f7ff bf83 	b.w	403a94 <__sinit.part.1>
  403b8e:	bf00      	nop

00403b90 <__sfp_lock_acquire>:
  403b90:	4770      	bx	lr
  403b92:	bf00      	nop

00403b94 <__sfp_lock_release>:
  403b94:	4770      	bx	lr
  403b96:	bf00      	nop

00403b98 <__libc_fini_array>:
  403b98:	b538      	push	{r3, r4, r5, lr}
  403b9a:	4d07      	ldr	r5, [pc, #28]	; (403bb8 <__libc_fini_array+0x20>)
  403b9c:	4c07      	ldr	r4, [pc, #28]	; (403bbc <__libc_fini_array+0x24>)
  403b9e:	1b2c      	subs	r4, r5, r4
  403ba0:	10a4      	asrs	r4, r4, #2
  403ba2:	d005      	beq.n	403bb0 <__libc_fini_array+0x18>
  403ba4:	3c01      	subs	r4, #1
  403ba6:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  403baa:	4798      	blx	r3
  403bac:	2c00      	cmp	r4, #0
  403bae:	d1f9      	bne.n	403ba4 <__libc_fini_array+0xc>
  403bb0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  403bb4:	f001 be70 	b.w	405898 <_fini>
  403bb8:	004058a8 	.word	0x004058a8
  403bbc:	004058a4 	.word	0x004058a4

00403bc0 <__fputwc>:
  403bc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403bc4:	b082      	sub	sp, #8
  403bc6:	4680      	mov	r8, r0
  403bc8:	4689      	mov	r9, r1
  403bca:	4614      	mov	r4, r2
  403bcc:	f000 fc3e 	bl	40444c <__locale_mb_cur_max>
  403bd0:	2801      	cmp	r0, #1
  403bd2:	d033      	beq.n	403c3c <__fputwc+0x7c>
  403bd4:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  403bd8:	464a      	mov	r2, r9
  403bda:	a901      	add	r1, sp, #4
  403bdc:	4640      	mov	r0, r8
  403bde:	f001 fa45 	bl	40506c <_wcrtomb_r>
  403be2:	f1b0 3fff 	cmp.w	r0, #4294967295
  403be6:	4682      	mov	sl, r0
  403be8:	d021      	beq.n	403c2e <__fputwc+0x6e>
  403bea:	b388      	cbz	r0, 403c50 <__fputwc+0x90>
  403bec:	f89d 6004 	ldrb.w	r6, [sp, #4]
  403bf0:	2500      	movs	r5, #0
  403bf2:	e008      	b.n	403c06 <__fputwc+0x46>
  403bf4:	6823      	ldr	r3, [r4, #0]
  403bf6:	1c5a      	adds	r2, r3, #1
  403bf8:	6022      	str	r2, [r4, #0]
  403bfa:	701e      	strb	r6, [r3, #0]
  403bfc:	3501      	adds	r5, #1
  403bfe:	4555      	cmp	r5, sl
  403c00:	d226      	bcs.n	403c50 <__fputwc+0x90>
  403c02:	ab01      	add	r3, sp, #4
  403c04:	5d5e      	ldrb	r6, [r3, r5]
  403c06:	68a3      	ldr	r3, [r4, #8]
  403c08:	3b01      	subs	r3, #1
  403c0a:	2b00      	cmp	r3, #0
  403c0c:	60a3      	str	r3, [r4, #8]
  403c0e:	daf1      	bge.n	403bf4 <__fputwc+0x34>
  403c10:	69a7      	ldr	r7, [r4, #24]
  403c12:	42bb      	cmp	r3, r7
  403c14:	4631      	mov	r1, r6
  403c16:	4622      	mov	r2, r4
  403c18:	4640      	mov	r0, r8
  403c1a:	db01      	blt.n	403c20 <__fputwc+0x60>
  403c1c:	2e0a      	cmp	r6, #10
  403c1e:	d1e9      	bne.n	403bf4 <__fputwc+0x34>
  403c20:	f001 f9ce 	bl	404fc0 <__swbuf_r>
  403c24:	1c43      	adds	r3, r0, #1
  403c26:	d1e9      	bne.n	403bfc <__fputwc+0x3c>
  403c28:	b002      	add	sp, #8
  403c2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403c2e:	89a3      	ldrh	r3, [r4, #12]
  403c30:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403c34:	81a3      	strh	r3, [r4, #12]
  403c36:	b002      	add	sp, #8
  403c38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403c3c:	f109 33ff 	add.w	r3, r9, #4294967295
  403c40:	2bfe      	cmp	r3, #254	; 0xfe
  403c42:	d8c7      	bhi.n	403bd4 <__fputwc+0x14>
  403c44:	fa5f f689 	uxtb.w	r6, r9
  403c48:	4682      	mov	sl, r0
  403c4a:	f88d 6004 	strb.w	r6, [sp, #4]
  403c4e:	e7cf      	b.n	403bf0 <__fputwc+0x30>
  403c50:	4648      	mov	r0, r9
  403c52:	b002      	add	sp, #8
  403c54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00403c58 <_fputwc_r>:
  403c58:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  403c5c:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  403c60:	d10a      	bne.n	403c78 <_fputwc_r+0x20>
  403c62:	b410      	push	{r4}
  403c64:	6e54      	ldr	r4, [r2, #100]	; 0x64
  403c66:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  403c6a:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  403c6e:	6654      	str	r4, [r2, #100]	; 0x64
  403c70:	8193      	strh	r3, [r2, #12]
  403c72:	bc10      	pop	{r4}
  403c74:	f7ff bfa4 	b.w	403bc0 <__fputwc>
  403c78:	f7ff bfa2 	b.w	403bc0 <__fputwc>

00403c7c <_fread_r>:
  403c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403c80:	b083      	sub	sp, #12
  403c82:	fb02 f603 	mul.w	r6, r2, r3
  403c86:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403c8a:	2e00      	cmp	r6, #0
  403c8c:	d048      	beq.n	403d20 <_fread_r+0xa4>
  403c8e:	4691      	mov	r9, r2
  403c90:	4698      	mov	r8, r3
  403c92:	460c      	mov	r4, r1
  403c94:	4605      	mov	r5, r0
  403c96:	b118      	cbz	r0, 403ca0 <_fread_r+0x24>
  403c98:	6b82      	ldr	r2, [r0, #56]	; 0x38
  403c9a:	2a00      	cmp	r2, #0
  403c9c:	f000 80ab 	beq.w	403df6 <_fread_r+0x17a>
  403ca0:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
  403ca4:	b291      	uxth	r1, r2
  403ca6:	0488      	lsls	r0, r1, #18
  403ca8:	d40a      	bmi.n	403cc0 <_fread_r+0x44>
  403caa:	f8db 1064 	ldr.w	r1, [fp, #100]	; 0x64
  403cae:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  403cb2:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
  403cb6:	f8ab 200c 	strh.w	r2, [fp, #12]
  403cba:	b291      	uxth	r1, r2
  403cbc:	f8cb 0064 	str.w	r0, [fp, #100]	; 0x64
  403cc0:	f8db 7004 	ldr.w	r7, [fp, #4]
  403cc4:	2f00      	cmp	r7, #0
  403cc6:	db36      	blt.n	403d36 <_fread_r+0xba>
  403cc8:	078b      	lsls	r3, r1, #30
  403cca:	463a      	mov	r2, r7
  403ccc:	d43a      	bmi.n	403d44 <_fread_r+0xc8>
  403cce:	46b2      	mov	sl, r6
  403cd0:	e012      	b.n	403cf8 <_fread_r+0x7c>
  403cd2:	f8db 1000 	ldr.w	r1, [fp]
  403cd6:	f7fd fc27 	bl	401528 <memcpy>
  403cda:	f8db 3000 	ldr.w	r3, [fp]
  403cde:	443b      	add	r3, r7
  403ce0:	f8cb 3000 	str.w	r3, [fp]
  403ce4:	4659      	mov	r1, fp
  403ce6:	4628      	mov	r0, r5
  403ce8:	443c      	add	r4, r7
  403cea:	ebc7 0a0a 	rsb	sl, r7, sl
  403cee:	f000 fcc9 	bl	404684 <__srefill_r>
  403cf2:	b9c8      	cbnz	r0, 403d28 <_fread_r+0xac>
  403cf4:	f8db 7004 	ldr.w	r7, [fp, #4]
  403cf8:	45ba      	cmp	sl, r7
  403cfa:	463a      	mov	r2, r7
  403cfc:	4620      	mov	r0, r4
  403cfe:	d8e8      	bhi.n	403cd2 <_fread_r+0x56>
  403d00:	4652      	mov	r2, sl
  403d02:	f8db 1000 	ldr.w	r1, [fp]
  403d06:	f7fd fc0f 	bl	401528 <memcpy>
  403d0a:	e89b 0006 	ldmia.w	fp, {r1, r2}
  403d0e:	ebca 0202 	rsb	r2, sl, r2
  403d12:	4451      	add	r1, sl
  403d14:	e88b 0006 	stmia.w	fp, {r1, r2}
  403d18:	4640      	mov	r0, r8
  403d1a:	b003      	add	sp, #12
  403d1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d20:	4630      	mov	r0, r6
  403d22:	b003      	add	sp, #12
  403d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d28:	ebca 0606 	rsb	r6, sl, r6
  403d2c:	fbb6 f0f9 	udiv	r0, r6, r9
  403d30:	b003      	add	sp, #12
  403d32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d36:	2000      	movs	r0, #0
  403d38:	078b      	lsls	r3, r1, #30
  403d3a:	4602      	mov	r2, r0
  403d3c:	f8cb 0004 	str.w	r0, [fp, #4]
  403d40:	4607      	mov	r7, r0
  403d42:	d5c4      	bpl.n	403cce <_fread_r+0x52>
  403d44:	42b2      	cmp	r2, r6
  403d46:	4613      	mov	r3, r2
  403d48:	bf28      	it	cs
  403d4a:	4633      	movcs	r3, r6
  403d4c:	461a      	mov	r2, r3
  403d4e:	f8db 1000 	ldr.w	r1, [fp]
  403d52:	9300      	str	r3, [sp, #0]
  403d54:	4620      	mov	r0, r4
  403d56:	f7fd fbe7 	bl	401528 <memcpy>
  403d5a:	f8db 7000 	ldr.w	r7, [fp]
  403d5e:	9b00      	ldr	r3, [sp, #0]
  403d60:	f8db 2004 	ldr.w	r2, [fp, #4]
  403d64:	f8db 1030 	ldr.w	r1, [fp, #48]	; 0x30
  403d68:	eb07 0a03 	add.w	sl, r7, r3
  403d6c:	1ad2      	subs	r2, r2, r3
  403d6e:	f8cb a000 	str.w	sl, [fp]
  403d72:	f8cb 2004 	str.w	r2, [fp, #4]
  403d76:	1af7      	subs	r7, r6, r3
  403d78:	2900      	cmp	r1, #0
  403d7a:	d049      	beq.n	403e10 <_fread_r+0x194>
  403d7c:	2f00      	cmp	r7, #0
  403d7e:	d045      	beq.n	403e0c <_fread_r+0x190>
  403d80:	f10b 0040 	add.w	r0, fp, #64	; 0x40
  403d84:	4281      	cmp	r1, r0
  403d86:	d006      	beq.n	403d96 <_fread_r+0x11a>
  403d88:	4628      	mov	r0, r5
  403d8a:	9300      	str	r3, [sp, #0]
  403d8c:	f000 f892 	bl	403eb4 <_free_r>
  403d90:	f8db a000 	ldr.w	sl, [fp]
  403d94:	9b00      	ldr	r3, [sp, #0]
  403d96:	2100      	movs	r1, #0
  403d98:	f8cb 1030 	str.w	r1, [fp, #48]	; 0x30
  403d9c:	f8db 2010 	ldr.w	r2, [fp, #16]
  403da0:	f8db 1014 	ldr.w	r1, [fp, #20]
  403da4:	9600      	str	r6, [sp, #0]
  403da6:	441c      	add	r4, r3
  403da8:	f8cd 8004 	str.w	r8, [sp, #4]
  403dac:	4616      	mov	r6, r2
  403dae:	46a0      	mov	r8, r4
  403db0:	4654      	mov	r4, sl
  403db2:	46aa      	mov	sl, r5
  403db4:	460d      	mov	r5, r1
  403db6:	e000      	b.n	403dba <_fread_r+0x13e>
  403db8:	b337      	cbz	r7, 403e08 <_fread_r+0x18c>
  403dba:	f8cb 8010 	str.w	r8, [fp, #16]
  403dbe:	f8cb 7014 	str.w	r7, [fp, #20]
  403dc2:	f8cb 8000 	str.w	r8, [fp]
  403dc6:	4659      	mov	r1, fp
  403dc8:	4650      	mov	r0, sl
  403dca:	f000 fc5b 	bl	404684 <__srefill_r>
  403dce:	f8db 1004 	ldr.w	r1, [fp, #4]
  403dd2:	f8cb 6010 	str.w	r6, [fp, #16]
  403dd6:	2300      	movs	r3, #0
  403dd8:	f8cb 5014 	str.w	r5, [fp, #20]
  403ddc:	f8cb 4000 	str.w	r4, [fp]
  403de0:	1a7f      	subs	r7, r7, r1
  403de2:	4488      	add	r8, r1
  403de4:	f8cb 3004 	str.w	r3, [fp, #4]
  403de8:	2800      	cmp	r0, #0
  403dea:	d0e5      	beq.n	403db8 <_fread_r+0x13c>
  403dec:	9e00      	ldr	r6, [sp, #0]
  403dee:	1bf6      	subs	r6, r6, r7
  403df0:	fbb6 f0f9 	udiv	r0, r6, r9
  403df4:	e791      	b.n	403d1a <_fread_r+0x9e>
  403df6:	f7ff fec5 	bl	403b84 <__sinit>
  403dfa:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
  403dfe:	b291      	uxth	r1, r2
  403e00:	0488      	lsls	r0, r1, #18
  403e02:	f53f af5d 	bmi.w	403cc0 <_fread_r+0x44>
  403e06:	e750      	b.n	403caa <_fread_r+0x2e>
  403e08:	f8dd 8004 	ldr.w	r8, [sp, #4]
  403e0c:	4640      	mov	r0, r8
  403e0e:	e784      	b.n	403d1a <_fread_r+0x9e>
  403e10:	2f00      	cmp	r7, #0
  403e12:	d1c3      	bne.n	403d9c <_fread_r+0x120>
  403e14:	4640      	mov	r0, r8
  403e16:	e780      	b.n	403d1a <_fread_r+0x9e>

00403e18 <_malloc_trim_r>:
  403e18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403e1a:	4f23      	ldr	r7, [pc, #140]	; (403ea8 <_malloc_trim_r+0x90>)
  403e1c:	460c      	mov	r4, r1
  403e1e:	4606      	mov	r6, r0
  403e20:	f7fd fcce 	bl	4017c0 <__malloc_lock>
  403e24:	68bb      	ldr	r3, [r7, #8]
  403e26:	685d      	ldr	r5, [r3, #4]
  403e28:	f025 0503 	bic.w	r5, r5, #3
  403e2c:	1b29      	subs	r1, r5, r4
  403e2e:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  403e32:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  403e36:	f021 010f 	bic.w	r1, r1, #15
  403e3a:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  403e3e:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  403e42:	db07      	blt.n	403e54 <_malloc_trim_r+0x3c>
  403e44:	2100      	movs	r1, #0
  403e46:	4630      	mov	r0, r6
  403e48:	f7fd feea 	bl	401c20 <_sbrk_r>
  403e4c:	68bb      	ldr	r3, [r7, #8]
  403e4e:	442b      	add	r3, r5
  403e50:	4298      	cmp	r0, r3
  403e52:	d004      	beq.n	403e5e <_malloc_trim_r+0x46>
  403e54:	4630      	mov	r0, r6
  403e56:	f7fd fcb5 	bl	4017c4 <__malloc_unlock>
  403e5a:	2000      	movs	r0, #0
  403e5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403e5e:	4261      	negs	r1, r4
  403e60:	4630      	mov	r0, r6
  403e62:	f7fd fedd 	bl	401c20 <_sbrk_r>
  403e66:	3001      	adds	r0, #1
  403e68:	d00d      	beq.n	403e86 <_malloc_trim_r+0x6e>
  403e6a:	4b10      	ldr	r3, [pc, #64]	; (403eac <_malloc_trim_r+0x94>)
  403e6c:	68ba      	ldr	r2, [r7, #8]
  403e6e:	6819      	ldr	r1, [r3, #0]
  403e70:	1b2d      	subs	r5, r5, r4
  403e72:	f045 0501 	orr.w	r5, r5, #1
  403e76:	4630      	mov	r0, r6
  403e78:	1b09      	subs	r1, r1, r4
  403e7a:	6055      	str	r5, [r2, #4]
  403e7c:	6019      	str	r1, [r3, #0]
  403e7e:	f7fd fca1 	bl	4017c4 <__malloc_unlock>
  403e82:	2001      	movs	r0, #1
  403e84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403e86:	2100      	movs	r1, #0
  403e88:	4630      	mov	r0, r6
  403e8a:	f7fd fec9 	bl	401c20 <_sbrk_r>
  403e8e:	68ba      	ldr	r2, [r7, #8]
  403e90:	1a83      	subs	r3, r0, r2
  403e92:	2b0f      	cmp	r3, #15
  403e94:	ddde      	ble.n	403e54 <_malloc_trim_r+0x3c>
  403e96:	4c06      	ldr	r4, [pc, #24]	; (403eb0 <_malloc_trim_r+0x98>)
  403e98:	4904      	ldr	r1, [pc, #16]	; (403eac <_malloc_trim_r+0x94>)
  403e9a:	6824      	ldr	r4, [r4, #0]
  403e9c:	f043 0301 	orr.w	r3, r3, #1
  403ea0:	1b00      	subs	r0, r0, r4
  403ea2:	6053      	str	r3, [r2, #4]
  403ea4:	6008      	str	r0, [r1, #0]
  403ea6:	e7d5      	b.n	403e54 <_malloc_trim_r+0x3c>
  403ea8:	2000043c 	.word	0x2000043c
  403eac:	2000095c 	.word	0x2000095c
  403eb0:	20000848 	.word	0x20000848

00403eb4 <_free_r>:
  403eb4:	2900      	cmp	r1, #0
  403eb6:	d045      	beq.n	403f44 <_free_r+0x90>
  403eb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403ebc:	460d      	mov	r5, r1
  403ebe:	4680      	mov	r8, r0
  403ec0:	f7fd fc7e 	bl	4017c0 <__malloc_lock>
  403ec4:	f855 7c04 	ldr.w	r7, [r5, #-4]
  403ec8:	496a      	ldr	r1, [pc, #424]	; (404074 <_free_r+0x1c0>)
  403eca:	f027 0301 	bic.w	r3, r7, #1
  403ece:	f1a5 0408 	sub.w	r4, r5, #8
  403ed2:	18e2      	adds	r2, r4, r3
  403ed4:	688e      	ldr	r6, [r1, #8]
  403ed6:	6850      	ldr	r0, [r2, #4]
  403ed8:	42b2      	cmp	r2, r6
  403eda:	f020 0003 	bic.w	r0, r0, #3
  403ede:	d062      	beq.n	403fa6 <_free_r+0xf2>
  403ee0:	07fe      	lsls	r6, r7, #31
  403ee2:	6050      	str	r0, [r2, #4]
  403ee4:	d40b      	bmi.n	403efe <_free_r+0x4a>
  403ee6:	f855 7c08 	ldr.w	r7, [r5, #-8]
  403eea:	1be4      	subs	r4, r4, r7
  403eec:	f101 0e08 	add.w	lr, r1, #8
  403ef0:	68a5      	ldr	r5, [r4, #8]
  403ef2:	4575      	cmp	r5, lr
  403ef4:	443b      	add	r3, r7
  403ef6:	d06f      	beq.n	403fd8 <_free_r+0x124>
  403ef8:	68e7      	ldr	r7, [r4, #12]
  403efa:	60ef      	str	r7, [r5, #12]
  403efc:	60bd      	str	r5, [r7, #8]
  403efe:	1815      	adds	r5, r2, r0
  403f00:	686d      	ldr	r5, [r5, #4]
  403f02:	07ed      	lsls	r5, r5, #31
  403f04:	d542      	bpl.n	403f8c <_free_r+0xd8>
  403f06:	f043 0201 	orr.w	r2, r3, #1
  403f0a:	6062      	str	r2, [r4, #4]
  403f0c:	50e3      	str	r3, [r4, r3]
  403f0e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403f12:	d218      	bcs.n	403f46 <_free_r+0x92>
  403f14:	08db      	lsrs	r3, r3, #3
  403f16:	1c5a      	adds	r2, r3, #1
  403f18:	684d      	ldr	r5, [r1, #4]
  403f1a:	f851 7032 	ldr.w	r7, [r1, r2, lsl #3]
  403f1e:	60a7      	str	r7, [r4, #8]
  403f20:	2001      	movs	r0, #1
  403f22:	109b      	asrs	r3, r3, #2
  403f24:	fa00 f303 	lsl.w	r3, r0, r3
  403f28:	eb01 00c2 	add.w	r0, r1, r2, lsl #3
  403f2c:	431d      	orrs	r5, r3
  403f2e:	3808      	subs	r0, #8
  403f30:	60e0      	str	r0, [r4, #12]
  403f32:	604d      	str	r5, [r1, #4]
  403f34:	f841 4032 	str.w	r4, [r1, r2, lsl #3]
  403f38:	60fc      	str	r4, [r7, #12]
  403f3a:	4640      	mov	r0, r8
  403f3c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403f40:	f7fd bc40 	b.w	4017c4 <__malloc_unlock>
  403f44:	4770      	bx	lr
  403f46:	0a5a      	lsrs	r2, r3, #9
  403f48:	2a04      	cmp	r2, #4
  403f4a:	d853      	bhi.n	403ff4 <_free_r+0x140>
  403f4c:	099a      	lsrs	r2, r3, #6
  403f4e:	f102 0739 	add.w	r7, r2, #57	; 0x39
  403f52:	007f      	lsls	r7, r7, #1
  403f54:	f102 0538 	add.w	r5, r2, #56	; 0x38
  403f58:	eb01 0087 	add.w	r0, r1, r7, lsl #2
  403f5c:	f851 2027 	ldr.w	r2, [r1, r7, lsl #2]
  403f60:	4944      	ldr	r1, [pc, #272]	; (404074 <_free_r+0x1c0>)
  403f62:	3808      	subs	r0, #8
  403f64:	4290      	cmp	r0, r2
  403f66:	d04d      	beq.n	404004 <_free_r+0x150>
  403f68:	6851      	ldr	r1, [r2, #4]
  403f6a:	f021 0103 	bic.w	r1, r1, #3
  403f6e:	428b      	cmp	r3, r1
  403f70:	d202      	bcs.n	403f78 <_free_r+0xc4>
  403f72:	6892      	ldr	r2, [r2, #8]
  403f74:	4290      	cmp	r0, r2
  403f76:	d1f7      	bne.n	403f68 <_free_r+0xb4>
  403f78:	68d0      	ldr	r0, [r2, #12]
  403f7a:	60e0      	str	r0, [r4, #12]
  403f7c:	60a2      	str	r2, [r4, #8]
  403f7e:	6084      	str	r4, [r0, #8]
  403f80:	60d4      	str	r4, [r2, #12]
  403f82:	4640      	mov	r0, r8
  403f84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403f88:	f7fd bc1c 	b.w	4017c4 <__malloc_unlock>
  403f8c:	6895      	ldr	r5, [r2, #8]
  403f8e:	4f3a      	ldr	r7, [pc, #232]	; (404078 <_free_r+0x1c4>)
  403f90:	42bd      	cmp	r5, r7
  403f92:	4403      	add	r3, r0
  403f94:	d03f      	beq.n	404016 <_free_r+0x162>
  403f96:	68d0      	ldr	r0, [r2, #12]
  403f98:	60e8      	str	r0, [r5, #12]
  403f9a:	f043 0201 	orr.w	r2, r3, #1
  403f9e:	6085      	str	r5, [r0, #8]
  403fa0:	6062      	str	r2, [r4, #4]
  403fa2:	50e3      	str	r3, [r4, r3]
  403fa4:	e7b3      	b.n	403f0e <_free_r+0x5a>
  403fa6:	07ff      	lsls	r7, r7, #31
  403fa8:	4403      	add	r3, r0
  403faa:	d407      	bmi.n	403fbc <_free_r+0x108>
  403fac:	f855 2c08 	ldr.w	r2, [r5, #-8]
  403fb0:	1aa4      	subs	r4, r4, r2
  403fb2:	4413      	add	r3, r2
  403fb4:	68a0      	ldr	r0, [r4, #8]
  403fb6:	68e2      	ldr	r2, [r4, #12]
  403fb8:	60c2      	str	r2, [r0, #12]
  403fba:	6090      	str	r0, [r2, #8]
  403fbc:	4a2f      	ldr	r2, [pc, #188]	; (40407c <_free_r+0x1c8>)
  403fbe:	6812      	ldr	r2, [r2, #0]
  403fc0:	f043 0001 	orr.w	r0, r3, #1
  403fc4:	4293      	cmp	r3, r2
  403fc6:	6060      	str	r0, [r4, #4]
  403fc8:	608c      	str	r4, [r1, #8]
  403fca:	d3b6      	bcc.n	403f3a <_free_r+0x86>
  403fcc:	4b2c      	ldr	r3, [pc, #176]	; (404080 <_free_r+0x1cc>)
  403fce:	4640      	mov	r0, r8
  403fd0:	6819      	ldr	r1, [r3, #0]
  403fd2:	f7ff ff21 	bl	403e18 <_malloc_trim_r>
  403fd6:	e7b0      	b.n	403f3a <_free_r+0x86>
  403fd8:	1811      	adds	r1, r2, r0
  403fda:	6849      	ldr	r1, [r1, #4]
  403fdc:	07c9      	lsls	r1, r1, #31
  403fde:	d444      	bmi.n	40406a <_free_r+0x1b6>
  403fe0:	6891      	ldr	r1, [r2, #8]
  403fe2:	68d2      	ldr	r2, [r2, #12]
  403fe4:	60ca      	str	r2, [r1, #12]
  403fe6:	4403      	add	r3, r0
  403fe8:	f043 0001 	orr.w	r0, r3, #1
  403fec:	6091      	str	r1, [r2, #8]
  403fee:	6060      	str	r0, [r4, #4]
  403ff0:	50e3      	str	r3, [r4, r3]
  403ff2:	e7a2      	b.n	403f3a <_free_r+0x86>
  403ff4:	2a14      	cmp	r2, #20
  403ff6:	d817      	bhi.n	404028 <_free_r+0x174>
  403ff8:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  403ffc:	007f      	lsls	r7, r7, #1
  403ffe:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  404002:	e7a9      	b.n	403f58 <_free_r+0xa4>
  404004:	10aa      	asrs	r2, r5, #2
  404006:	684b      	ldr	r3, [r1, #4]
  404008:	2501      	movs	r5, #1
  40400a:	fa05 f202 	lsl.w	r2, r5, r2
  40400e:	4313      	orrs	r3, r2
  404010:	604b      	str	r3, [r1, #4]
  404012:	4602      	mov	r2, r0
  404014:	e7b1      	b.n	403f7a <_free_r+0xc6>
  404016:	f043 0201 	orr.w	r2, r3, #1
  40401a:	614c      	str	r4, [r1, #20]
  40401c:	610c      	str	r4, [r1, #16]
  40401e:	60e5      	str	r5, [r4, #12]
  404020:	60a5      	str	r5, [r4, #8]
  404022:	6062      	str	r2, [r4, #4]
  404024:	50e3      	str	r3, [r4, r3]
  404026:	e788      	b.n	403f3a <_free_r+0x86>
  404028:	2a54      	cmp	r2, #84	; 0x54
  40402a:	d806      	bhi.n	40403a <_free_r+0x186>
  40402c:	0b1a      	lsrs	r2, r3, #12
  40402e:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  404032:	007f      	lsls	r7, r7, #1
  404034:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  404038:	e78e      	b.n	403f58 <_free_r+0xa4>
  40403a:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40403e:	d806      	bhi.n	40404e <_free_r+0x19a>
  404040:	0bda      	lsrs	r2, r3, #15
  404042:	f102 0778 	add.w	r7, r2, #120	; 0x78
  404046:	007f      	lsls	r7, r7, #1
  404048:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40404c:	e784      	b.n	403f58 <_free_r+0xa4>
  40404e:	f240 5054 	movw	r0, #1364	; 0x554
  404052:	4282      	cmp	r2, r0
  404054:	d806      	bhi.n	404064 <_free_r+0x1b0>
  404056:	0c9a      	lsrs	r2, r3, #18
  404058:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40405c:	007f      	lsls	r7, r7, #1
  40405e:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  404062:	e779      	b.n	403f58 <_free_r+0xa4>
  404064:	27fe      	movs	r7, #254	; 0xfe
  404066:	257e      	movs	r5, #126	; 0x7e
  404068:	e776      	b.n	403f58 <_free_r+0xa4>
  40406a:	f043 0201 	orr.w	r2, r3, #1
  40406e:	6062      	str	r2, [r4, #4]
  404070:	50e3      	str	r3, [r4, r3]
  404072:	e762      	b.n	403f3a <_free_r+0x86>
  404074:	2000043c 	.word	0x2000043c
  404078:	20000444 	.word	0x20000444
  40407c:	20000844 	.word	0x20000844
  404080:	20000958 	.word	0x20000958

00404084 <__sfvwrite_r>:
  404084:	6893      	ldr	r3, [r2, #8]
  404086:	2b00      	cmp	r3, #0
  404088:	d076      	beq.n	404178 <__sfvwrite_r+0xf4>
  40408a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40408e:	898b      	ldrh	r3, [r1, #12]
  404090:	b085      	sub	sp, #20
  404092:	460c      	mov	r4, r1
  404094:	0719      	lsls	r1, r3, #28
  404096:	9001      	str	r0, [sp, #4]
  404098:	4616      	mov	r6, r2
  40409a:	d529      	bpl.n	4040f0 <__sfvwrite_r+0x6c>
  40409c:	6922      	ldr	r2, [r4, #16]
  40409e:	b33a      	cbz	r2, 4040f0 <__sfvwrite_r+0x6c>
  4040a0:	f003 0802 	and.w	r8, r3, #2
  4040a4:	fa1f f088 	uxth.w	r0, r8
  4040a8:	6835      	ldr	r5, [r6, #0]
  4040aa:	2800      	cmp	r0, #0
  4040ac:	d02f      	beq.n	40410e <__sfvwrite_r+0x8a>
  4040ae:	f04f 0900 	mov.w	r9, #0
  4040b2:	4fb4      	ldr	r7, [pc, #720]	; (404384 <__sfvwrite_r+0x300>)
  4040b4:	46c8      	mov	r8, r9
  4040b6:	46b2      	mov	sl, r6
  4040b8:	45b8      	cmp	r8, r7
  4040ba:	4643      	mov	r3, r8
  4040bc:	464a      	mov	r2, r9
  4040be:	bf28      	it	cs
  4040c0:	463b      	movcs	r3, r7
  4040c2:	9801      	ldr	r0, [sp, #4]
  4040c4:	f1b8 0f00 	cmp.w	r8, #0
  4040c8:	d050      	beq.n	40416c <__sfvwrite_r+0xe8>
  4040ca:	69e1      	ldr	r1, [r4, #28]
  4040cc:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4040ce:	47b0      	blx	r6
  4040d0:	2800      	cmp	r0, #0
  4040d2:	dd71      	ble.n	4041b8 <__sfvwrite_r+0x134>
  4040d4:	f8da 3008 	ldr.w	r3, [sl, #8]
  4040d8:	1a1b      	subs	r3, r3, r0
  4040da:	4481      	add	r9, r0
  4040dc:	ebc0 0808 	rsb	r8, r0, r8
  4040e0:	f8ca 3008 	str.w	r3, [sl, #8]
  4040e4:	2b00      	cmp	r3, #0
  4040e6:	d1e7      	bne.n	4040b8 <__sfvwrite_r+0x34>
  4040e8:	2000      	movs	r0, #0
  4040ea:	b005      	add	sp, #20
  4040ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4040f0:	4621      	mov	r1, r4
  4040f2:	9801      	ldr	r0, [sp, #4]
  4040f4:	f7ff fb88 	bl	403808 <__swsetup_r>
  4040f8:	2800      	cmp	r0, #0
  4040fa:	f040 813a 	bne.w	404372 <__sfvwrite_r+0x2ee>
  4040fe:	89a3      	ldrh	r3, [r4, #12]
  404100:	6835      	ldr	r5, [r6, #0]
  404102:	f003 0802 	and.w	r8, r3, #2
  404106:	fa1f f088 	uxth.w	r0, r8
  40410a:	2800      	cmp	r0, #0
  40410c:	d1cf      	bne.n	4040ae <__sfvwrite_r+0x2a>
  40410e:	f013 0901 	ands.w	r9, r3, #1
  404112:	d15b      	bne.n	4041cc <__sfvwrite_r+0x148>
  404114:	464f      	mov	r7, r9
  404116:	9602      	str	r6, [sp, #8]
  404118:	b31f      	cbz	r7, 404162 <__sfvwrite_r+0xde>
  40411a:	059a      	lsls	r2, r3, #22
  40411c:	f8d4 8008 	ldr.w	r8, [r4, #8]
  404120:	d52c      	bpl.n	40417c <__sfvwrite_r+0xf8>
  404122:	4547      	cmp	r7, r8
  404124:	46c2      	mov	sl, r8
  404126:	f0c0 80a4 	bcc.w	404272 <__sfvwrite_r+0x1ee>
  40412a:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40412e:	f040 80b1 	bne.w	404294 <__sfvwrite_r+0x210>
  404132:	6820      	ldr	r0, [r4, #0]
  404134:	4652      	mov	r2, sl
  404136:	4649      	mov	r1, r9
  404138:	f7fd fa90 	bl	40165c <memmove>
  40413c:	68a0      	ldr	r0, [r4, #8]
  40413e:	6823      	ldr	r3, [r4, #0]
  404140:	ebc8 0000 	rsb	r0, r8, r0
  404144:	4453      	add	r3, sl
  404146:	60a0      	str	r0, [r4, #8]
  404148:	6023      	str	r3, [r4, #0]
  40414a:	4638      	mov	r0, r7
  40414c:	9a02      	ldr	r2, [sp, #8]
  40414e:	6893      	ldr	r3, [r2, #8]
  404150:	1a1b      	subs	r3, r3, r0
  404152:	4481      	add	r9, r0
  404154:	1a3f      	subs	r7, r7, r0
  404156:	6093      	str	r3, [r2, #8]
  404158:	2b00      	cmp	r3, #0
  40415a:	d0c5      	beq.n	4040e8 <__sfvwrite_r+0x64>
  40415c:	89a3      	ldrh	r3, [r4, #12]
  40415e:	2f00      	cmp	r7, #0
  404160:	d1db      	bne.n	40411a <__sfvwrite_r+0x96>
  404162:	f8d5 9000 	ldr.w	r9, [r5]
  404166:	686f      	ldr	r7, [r5, #4]
  404168:	3508      	adds	r5, #8
  40416a:	e7d5      	b.n	404118 <__sfvwrite_r+0x94>
  40416c:	f8d5 9000 	ldr.w	r9, [r5]
  404170:	f8d5 8004 	ldr.w	r8, [r5, #4]
  404174:	3508      	adds	r5, #8
  404176:	e79f      	b.n	4040b8 <__sfvwrite_r+0x34>
  404178:	2000      	movs	r0, #0
  40417a:	4770      	bx	lr
  40417c:	6820      	ldr	r0, [r4, #0]
  40417e:	6923      	ldr	r3, [r4, #16]
  404180:	4298      	cmp	r0, r3
  404182:	d803      	bhi.n	40418c <__sfvwrite_r+0x108>
  404184:	6961      	ldr	r1, [r4, #20]
  404186:	428f      	cmp	r7, r1
  404188:	f080 80b7 	bcs.w	4042fa <__sfvwrite_r+0x276>
  40418c:	45b8      	cmp	r8, r7
  40418e:	bf28      	it	cs
  404190:	46b8      	movcs	r8, r7
  404192:	4642      	mov	r2, r8
  404194:	4649      	mov	r1, r9
  404196:	f7fd fa61 	bl	40165c <memmove>
  40419a:	68a3      	ldr	r3, [r4, #8]
  40419c:	6822      	ldr	r2, [r4, #0]
  40419e:	ebc8 0303 	rsb	r3, r8, r3
  4041a2:	4442      	add	r2, r8
  4041a4:	60a3      	str	r3, [r4, #8]
  4041a6:	6022      	str	r2, [r4, #0]
  4041a8:	2b00      	cmp	r3, #0
  4041aa:	d149      	bne.n	404240 <__sfvwrite_r+0x1bc>
  4041ac:	4621      	mov	r1, r4
  4041ae:	9801      	ldr	r0, [sp, #4]
  4041b0:	f7ff fc42 	bl	403a38 <_fflush_r>
  4041b4:	2800      	cmp	r0, #0
  4041b6:	d043      	beq.n	404240 <__sfvwrite_r+0x1bc>
  4041b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4041bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4041c0:	f04f 30ff 	mov.w	r0, #4294967295
  4041c4:	81a3      	strh	r3, [r4, #12]
  4041c6:	b005      	add	sp, #20
  4041c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4041cc:	4680      	mov	r8, r0
  4041ce:	9002      	str	r0, [sp, #8]
  4041d0:	4682      	mov	sl, r0
  4041d2:	4681      	mov	r9, r0
  4041d4:	f1b9 0f00 	cmp.w	r9, #0
  4041d8:	d02a      	beq.n	404230 <__sfvwrite_r+0x1ac>
  4041da:	9b02      	ldr	r3, [sp, #8]
  4041dc:	2b00      	cmp	r3, #0
  4041de:	d04c      	beq.n	40427a <__sfvwrite_r+0x1f6>
  4041e0:	6820      	ldr	r0, [r4, #0]
  4041e2:	6923      	ldr	r3, [r4, #16]
  4041e4:	6962      	ldr	r2, [r4, #20]
  4041e6:	45c8      	cmp	r8, r9
  4041e8:	46c3      	mov	fp, r8
  4041ea:	bf28      	it	cs
  4041ec:	46cb      	movcs	fp, r9
  4041ee:	4298      	cmp	r0, r3
  4041f0:	465f      	mov	r7, fp
  4041f2:	d904      	bls.n	4041fe <__sfvwrite_r+0x17a>
  4041f4:	68a3      	ldr	r3, [r4, #8]
  4041f6:	4413      	add	r3, r2
  4041f8:	459b      	cmp	fp, r3
  4041fa:	f300 8090 	bgt.w	40431e <__sfvwrite_r+0x29a>
  4041fe:	4593      	cmp	fp, r2
  404200:	db20      	blt.n	404244 <__sfvwrite_r+0x1c0>
  404202:	4613      	mov	r3, r2
  404204:	6a67      	ldr	r7, [r4, #36]	; 0x24
  404206:	69e1      	ldr	r1, [r4, #28]
  404208:	9801      	ldr	r0, [sp, #4]
  40420a:	4652      	mov	r2, sl
  40420c:	47b8      	blx	r7
  40420e:	1e07      	subs	r7, r0, #0
  404210:	ddd2      	ble.n	4041b8 <__sfvwrite_r+0x134>
  404212:	ebb8 0807 	subs.w	r8, r8, r7
  404216:	d023      	beq.n	404260 <__sfvwrite_r+0x1dc>
  404218:	68b3      	ldr	r3, [r6, #8]
  40421a:	1bdb      	subs	r3, r3, r7
  40421c:	44ba      	add	sl, r7
  40421e:	ebc7 0909 	rsb	r9, r7, r9
  404222:	60b3      	str	r3, [r6, #8]
  404224:	2b00      	cmp	r3, #0
  404226:	f43f af5f 	beq.w	4040e8 <__sfvwrite_r+0x64>
  40422a:	f1b9 0f00 	cmp.w	r9, #0
  40422e:	d1d4      	bne.n	4041da <__sfvwrite_r+0x156>
  404230:	2300      	movs	r3, #0
  404232:	f8d5 a000 	ldr.w	sl, [r5]
  404236:	f8d5 9004 	ldr.w	r9, [r5, #4]
  40423a:	9302      	str	r3, [sp, #8]
  40423c:	3508      	adds	r5, #8
  40423e:	e7c9      	b.n	4041d4 <__sfvwrite_r+0x150>
  404240:	4640      	mov	r0, r8
  404242:	e783      	b.n	40414c <__sfvwrite_r+0xc8>
  404244:	465a      	mov	r2, fp
  404246:	4651      	mov	r1, sl
  404248:	f7fd fa08 	bl	40165c <memmove>
  40424c:	68a2      	ldr	r2, [r4, #8]
  40424e:	6823      	ldr	r3, [r4, #0]
  404250:	ebcb 0202 	rsb	r2, fp, r2
  404254:	445b      	add	r3, fp
  404256:	ebb8 0807 	subs.w	r8, r8, r7
  40425a:	60a2      	str	r2, [r4, #8]
  40425c:	6023      	str	r3, [r4, #0]
  40425e:	d1db      	bne.n	404218 <__sfvwrite_r+0x194>
  404260:	4621      	mov	r1, r4
  404262:	9801      	ldr	r0, [sp, #4]
  404264:	f7ff fbe8 	bl	403a38 <_fflush_r>
  404268:	2800      	cmp	r0, #0
  40426a:	d1a5      	bne.n	4041b8 <__sfvwrite_r+0x134>
  40426c:	f8cd 8008 	str.w	r8, [sp, #8]
  404270:	e7d2      	b.n	404218 <__sfvwrite_r+0x194>
  404272:	6820      	ldr	r0, [r4, #0]
  404274:	46b8      	mov	r8, r7
  404276:	46ba      	mov	sl, r7
  404278:	e75c      	b.n	404134 <__sfvwrite_r+0xb0>
  40427a:	464a      	mov	r2, r9
  40427c:	210a      	movs	r1, #10
  40427e:	4650      	mov	r0, sl
  404280:	f000 f9a6 	bl	4045d0 <memchr>
  404284:	2800      	cmp	r0, #0
  404286:	d06f      	beq.n	404368 <__sfvwrite_r+0x2e4>
  404288:	3001      	adds	r0, #1
  40428a:	2301      	movs	r3, #1
  40428c:	ebca 0800 	rsb	r8, sl, r0
  404290:	9302      	str	r3, [sp, #8]
  404292:	e7a5      	b.n	4041e0 <__sfvwrite_r+0x15c>
  404294:	6962      	ldr	r2, [r4, #20]
  404296:	6820      	ldr	r0, [r4, #0]
  404298:	6921      	ldr	r1, [r4, #16]
  40429a:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  40429e:	ebc1 0a00 	rsb	sl, r1, r0
  4042a2:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  4042a6:	f10a 0001 	add.w	r0, sl, #1
  4042aa:	ea4f 0868 	mov.w	r8, r8, asr #1
  4042ae:	4438      	add	r0, r7
  4042b0:	4540      	cmp	r0, r8
  4042b2:	4642      	mov	r2, r8
  4042b4:	bf84      	itt	hi
  4042b6:	4680      	movhi	r8, r0
  4042b8:	4642      	movhi	r2, r8
  4042ba:	055b      	lsls	r3, r3, #21
  4042bc:	d542      	bpl.n	404344 <__sfvwrite_r+0x2c0>
  4042be:	4611      	mov	r1, r2
  4042c0:	9801      	ldr	r0, [sp, #4]
  4042c2:	f7fc fe79 	bl	400fb8 <_malloc_r>
  4042c6:	4683      	mov	fp, r0
  4042c8:	2800      	cmp	r0, #0
  4042ca:	d055      	beq.n	404378 <__sfvwrite_r+0x2f4>
  4042cc:	4652      	mov	r2, sl
  4042ce:	6921      	ldr	r1, [r4, #16]
  4042d0:	f7fd f92a 	bl	401528 <memcpy>
  4042d4:	89a3      	ldrh	r3, [r4, #12]
  4042d6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  4042da:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4042de:	81a3      	strh	r3, [r4, #12]
  4042e0:	ebca 0308 	rsb	r3, sl, r8
  4042e4:	eb0b 000a 	add.w	r0, fp, sl
  4042e8:	f8c4 8014 	str.w	r8, [r4, #20]
  4042ec:	f8c4 b010 	str.w	fp, [r4, #16]
  4042f0:	6020      	str	r0, [r4, #0]
  4042f2:	60a3      	str	r3, [r4, #8]
  4042f4:	46b8      	mov	r8, r7
  4042f6:	46ba      	mov	sl, r7
  4042f8:	e71c      	b.n	404134 <__sfvwrite_r+0xb0>
  4042fa:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
  4042fe:	42bb      	cmp	r3, r7
  404300:	bf28      	it	cs
  404302:	463b      	movcs	r3, r7
  404304:	464a      	mov	r2, r9
  404306:	fb93 f3f1 	sdiv	r3, r3, r1
  40430a:	9801      	ldr	r0, [sp, #4]
  40430c:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40430e:	fb01 f303 	mul.w	r3, r1, r3
  404312:	69e1      	ldr	r1, [r4, #28]
  404314:	47b0      	blx	r6
  404316:	2800      	cmp	r0, #0
  404318:	f73f af18 	bgt.w	40414c <__sfvwrite_r+0xc8>
  40431c:	e74c      	b.n	4041b8 <__sfvwrite_r+0x134>
  40431e:	461a      	mov	r2, r3
  404320:	4651      	mov	r1, sl
  404322:	9303      	str	r3, [sp, #12]
  404324:	f7fd f99a 	bl	40165c <memmove>
  404328:	6822      	ldr	r2, [r4, #0]
  40432a:	9b03      	ldr	r3, [sp, #12]
  40432c:	9801      	ldr	r0, [sp, #4]
  40432e:	441a      	add	r2, r3
  404330:	6022      	str	r2, [r4, #0]
  404332:	4621      	mov	r1, r4
  404334:	f7ff fb80 	bl	403a38 <_fflush_r>
  404338:	9b03      	ldr	r3, [sp, #12]
  40433a:	2800      	cmp	r0, #0
  40433c:	f47f af3c 	bne.w	4041b8 <__sfvwrite_r+0x134>
  404340:	461f      	mov	r7, r3
  404342:	e766      	b.n	404212 <__sfvwrite_r+0x18e>
  404344:	9801      	ldr	r0, [sp, #4]
  404346:	f7fd fa7b 	bl	401840 <_realloc_r>
  40434a:	4683      	mov	fp, r0
  40434c:	2800      	cmp	r0, #0
  40434e:	d1c7      	bne.n	4042e0 <__sfvwrite_r+0x25c>
  404350:	9d01      	ldr	r5, [sp, #4]
  404352:	6921      	ldr	r1, [r4, #16]
  404354:	4628      	mov	r0, r5
  404356:	f7ff fdad 	bl	403eb4 <_free_r>
  40435a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40435e:	220c      	movs	r2, #12
  404360:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  404364:	602a      	str	r2, [r5, #0]
  404366:	e729      	b.n	4041bc <__sfvwrite_r+0x138>
  404368:	2301      	movs	r3, #1
  40436a:	f109 0801 	add.w	r8, r9, #1
  40436e:	9302      	str	r3, [sp, #8]
  404370:	e736      	b.n	4041e0 <__sfvwrite_r+0x15c>
  404372:	f04f 30ff 	mov.w	r0, #4294967295
  404376:	e6b8      	b.n	4040ea <__sfvwrite_r+0x66>
  404378:	9a01      	ldr	r2, [sp, #4]
  40437a:	230c      	movs	r3, #12
  40437c:	6013      	str	r3, [r2, #0]
  40437e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404382:	e71b      	b.n	4041bc <__sfvwrite_r+0x138>
  404384:	7ffffc00 	.word	0x7ffffc00

00404388 <_fwalk>:
  404388:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40438c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  404390:	d01b      	beq.n	4043ca <_fwalk+0x42>
  404392:	4688      	mov	r8, r1
  404394:	2600      	movs	r6, #0
  404396:	687d      	ldr	r5, [r7, #4]
  404398:	68bc      	ldr	r4, [r7, #8]
  40439a:	3d01      	subs	r5, #1
  40439c:	d40f      	bmi.n	4043be <_fwalk+0x36>
  40439e:	89a3      	ldrh	r3, [r4, #12]
  4043a0:	2b01      	cmp	r3, #1
  4043a2:	f105 35ff 	add.w	r5, r5, #4294967295
  4043a6:	d906      	bls.n	4043b6 <_fwalk+0x2e>
  4043a8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4043ac:	3301      	adds	r3, #1
  4043ae:	4620      	mov	r0, r4
  4043b0:	d001      	beq.n	4043b6 <_fwalk+0x2e>
  4043b2:	47c0      	blx	r8
  4043b4:	4306      	orrs	r6, r0
  4043b6:	1c6b      	adds	r3, r5, #1
  4043b8:	f104 0468 	add.w	r4, r4, #104	; 0x68
  4043bc:	d1ef      	bne.n	40439e <_fwalk+0x16>
  4043be:	683f      	ldr	r7, [r7, #0]
  4043c0:	2f00      	cmp	r7, #0
  4043c2:	d1e8      	bne.n	404396 <_fwalk+0xe>
  4043c4:	4630      	mov	r0, r6
  4043c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4043ca:	463e      	mov	r6, r7
  4043cc:	4630      	mov	r0, r6
  4043ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4043d2:	bf00      	nop

004043d4 <_fwalk_reent>:
  4043d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4043d8:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  4043dc:	d01f      	beq.n	40441e <_fwalk_reent+0x4a>
  4043de:	4688      	mov	r8, r1
  4043e0:	4606      	mov	r6, r0
  4043e2:	f04f 0900 	mov.w	r9, #0
  4043e6:	687d      	ldr	r5, [r7, #4]
  4043e8:	68bc      	ldr	r4, [r7, #8]
  4043ea:	3d01      	subs	r5, #1
  4043ec:	d411      	bmi.n	404412 <_fwalk_reent+0x3e>
  4043ee:	89a3      	ldrh	r3, [r4, #12]
  4043f0:	2b01      	cmp	r3, #1
  4043f2:	f105 35ff 	add.w	r5, r5, #4294967295
  4043f6:	d908      	bls.n	40440a <_fwalk_reent+0x36>
  4043f8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4043fc:	3301      	adds	r3, #1
  4043fe:	4621      	mov	r1, r4
  404400:	4630      	mov	r0, r6
  404402:	d002      	beq.n	40440a <_fwalk_reent+0x36>
  404404:	47c0      	blx	r8
  404406:	ea49 0900 	orr.w	r9, r9, r0
  40440a:	1c6b      	adds	r3, r5, #1
  40440c:	f104 0468 	add.w	r4, r4, #104	; 0x68
  404410:	d1ed      	bne.n	4043ee <_fwalk_reent+0x1a>
  404412:	683f      	ldr	r7, [r7, #0]
  404414:	2f00      	cmp	r7, #0
  404416:	d1e6      	bne.n	4043e6 <_fwalk_reent+0x12>
  404418:	4648      	mov	r0, r9
  40441a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40441e:	46b9      	mov	r9, r7
  404420:	4648      	mov	r0, r9
  404422:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404426:	bf00      	nop

00404428 <iswspace>:
  404428:	28ff      	cmp	r0, #255	; 0xff
  40442a:	d807      	bhi.n	40443c <iswspace+0x14>
  40442c:	4b04      	ldr	r3, [pc, #16]	; (404440 <iswspace+0x18>)
  40442e:	681b      	ldr	r3, [r3, #0]
  404430:	4418      	add	r0, r3
  404432:	7840      	ldrb	r0, [r0, #1]
  404434:	f000 0008 	and.w	r0, r0, #8
  404438:	b2c0      	uxtb	r0, r0
  40443a:	4770      	bx	lr
  40443c:	2000      	movs	r0, #0
  40443e:	4770      	bx	lr
  404440:	2000084c 	.word	0x2000084c

00404444 <__locale_charset>:
  404444:	4800      	ldr	r0, [pc, #0]	; (404448 <__locale_charset+0x4>)
  404446:	4770      	bx	lr
  404448:	20000850 	.word	0x20000850

0040444c <__locale_mb_cur_max>:
  40444c:	4b01      	ldr	r3, [pc, #4]	; (404454 <__locale_mb_cur_max+0x8>)
  40444e:	6818      	ldr	r0, [r3, #0]
  404450:	4770      	bx	lr
  404452:	bf00      	nop
  404454:	20000870 	.word	0x20000870

00404458 <__swhatbuf_r>:
  404458:	b570      	push	{r4, r5, r6, lr}
  40445a:	460d      	mov	r5, r1
  40445c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404460:	2900      	cmp	r1, #0
  404462:	b090      	sub	sp, #64	; 0x40
  404464:	4614      	mov	r4, r2
  404466:	461e      	mov	r6, r3
  404468:	db14      	blt.n	404494 <__swhatbuf_r+0x3c>
  40446a:	aa01      	add	r2, sp, #4
  40446c:	f000 fef2 	bl	405254 <_fstat_r>
  404470:	2800      	cmp	r0, #0
  404472:	db0f      	blt.n	404494 <__swhatbuf_r+0x3c>
  404474:	9a02      	ldr	r2, [sp, #8]
  404476:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  40447a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  40447e:	fab2 f282 	clz	r2, r2
  404482:	0952      	lsrs	r2, r2, #5
  404484:	f44f 6380 	mov.w	r3, #1024	; 0x400
  404488:	f44f 6000 	mov.w	r0, #2048	; 0x800
  40448c:	6032      	str	r2, [r6, #0]
  40448e:	6023      	str	r3, [r4, #0]
  404490:	b010      	add	sp, #64	; 0x40
  404492:	bd70      	pop	{r4, r5, r6, pc}
  404494:	89a8      	ldrh	r0, [r5, #12]
  404496:	f000 0080 	and.w	r0, r0, #128	; 0x80
  40449a:	b282      	uxth	r2, r0
  40449c:	2000      	movs	r0, #0
  40449e:	6030      	str	r0, [r6, #0]
  4044a0:	b11a      	cbz	r2, 4044aa <__swhatbuf_r+0x52>
  4044a2:	2340      	movs	r3, #64	; 0x40
  4044a4:	6023      	str	r3, [r4, #0]
  4044a6:	b010      	add	sp, #64	; 0x40
  4044a8:	bd70      	pop	{r4, r5, r6, pc}
  4044aa:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4044ae:	4610      	mov	r0, r2
  4044b0:	6023      	str	r3, [r4, #0]
  4044b2:	b010      	add	sp, #64	; 0x40
  4044b4:	bd70      	pop	{r4, r5, r6, pc}
  4044b6:	bf00      	nop

004044b8 <__smakebuf_r>:
  4044b8:	898a      	ldrh	r2, [r1, #12]
  4044ba:	0792      	lsls	r2, r2, #30
  4044bc:	460b      	mov	r3, r1
  4044be:	d506      	bpl.n	4044ce <__smakebuf_r+0x16>
  4044c0:	f101 0243 	add.w	r2, r1, #67	; 0x43
  4044c4:	2101      	movs	r1, #1
  4044c6:	601a      	str	r2, [r3, #0]
  4044c8:	611a      	str	r2, [r3, #16]
  4044ca:	6159      	str	r1, [r3, #20]
  4044cc:	4770      	bx	lr
  4044ce:	b5f0      	push	{r4, r5, r6, r7, lr}
  4044d0:	b083      	sub	sp, #12
  4044d2:	ab01      	add	r3, sp, #4
  4044d4:	466a      	mov	r2, sp
  4044d6:	460c      	mov	r4, r1
  4044d8:	4605      	mov	r5, r0
  4044da:	f7ff ffbd 	bl	404458 <__swhatbuf_r>
  4044de:	9900      	ldr	r1, [sp, #0]
  4044e0:	4606      	mov	r6, r0
  4044e2:	4628      	mov	r0, r5
  4044e4:	f7fc fd68 	bl	400fb8 <_malloc_r>
  4044e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4044ec:	b1d0      	cbz	r0, 404524 <__smakebuf_r+0x6c>
  4044ee:	9a01      	ldr	r2, [sp, #4]
  4044f0:	4f12      	ldr	r7, [pc, #72]	; (40453c <__smakebuf_r+0x84>)
  4044f2:	9900      	ldr	r1, [sp, #0]
  4044f4:	63ef      	str	r7, [r5, #60]	; 0x3c
  4044f6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4044fa:	81a3      	strh	r3, [r4, #12]
  4044fc:	6020      	str	r0, [r4, #0]
  4044fe:	6120      	str	r0, [r4, #16]
  404500:	6161      	str	r1, [r4, #20]
  404502:	b91a      	cbnz	r2, 40450c <__smakebuf_r+0x54>
  404504:	4333      	orrs	r3, r6
  404506:	81a3      	strh	r3, [r4, #12]
  404508:	b003      	add	sp, #12
  40450a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40450c:	4628      	mov	r0, r5
  40450e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  404512:	f000 feb3 	bl	40527c <_isatty_r>
  404516:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40451a:	2800      	cmp	r0, #0
  40451c:	d0f2      	beq.n	404504 <__smakebuf_r+0x4c>
  40451e:	f043 0301 	orr.w	r3, r3, #1
  404522:	e7ef      	b.n	404504 <__smakebuf_r+0x4c>
  404524:	059a      	lsls	r2, r3, #22
  404526:	d4ef      	bmi.n	404508 <__smakebuf_r+0x50>
  404528:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40452c:	f043 0302 	orr.w	r3, r3, #2
  404530:	2101      	movs	r1, #1
  404532:	81a3      	strh	r3, [r4, #12]
  404534:	6022      	str	r2, [r4, #0]
  404536:	6122      	str	r2, [r4, #16]
  404538:	6161      	str	r1, [r4, #20]
  40453a:	e7e5      	b.n	404508 <__smakebuf_r+0x50>
  40453c:	00403a89 	.word	0x00403a89

00404540 <_mbrtowc_r>:
  404540:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  404544:	b083      	sub	sp, #12
  404546:	4605      	mov	r5, r0
  404548:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  40454a:	4614      	mov	r4, r2
  40454c:	b1b2      	cbz	r2, 40457c <_mbrtowc_r+0x3c>
  40454e:	4698      	mov	r8, r3
  404550:	4b10      	ldr	r3, [pc, #64]	; (404594 <_mbrtowc_r+0x54>)
  404552:	460f      	mov	r7, r1
  404554:	f8d3 9000 	ldr.w	r9, [r3]
  404558:	f7ff ff74 	bl	404444 <__locale_charset>
  40455c:	4643      	mov	r3, r8
  40455e:	e88d 0041 	stmia.w	sp, {r0, r6}
  404562:	4622      	mov	r2, r4
  404564:	4639      	mov	r1, r7
  404566:	4628      	mov	r0, r5
  404568:	47c8      	blx	r9
  40456a:	1c43      	adds	r3, r0, #1
  40456c:	d103      	bne.n	404576 <_mbrtowc_r+0x36>
  40456e:	2200      	movs	r2, #0
  404570:	238a      	movs	r3, #138	; 0x8a
  404572:	6032      	str	r2, [r6, #0]
  404574:	602b      	str	r3, [r5, #0]
  404576:	b003      	add	sp, #12
  404578:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40457c:	4b05      	ldr	r3, [pc, #20]	; (404594 <_mbrtowc_r+0x54>)
  40457e:	681f      	ldr	r7, [r3, #0]
  404580:	f7ff ff60 	bl	404444 <__locale_charset>
  404584:	4621      	mov	r1, r4
  404586:	e88d 0041 	stmia.w	sp, {r0, r6}
  40458a:	2301      	movs	r3, #1
  40458c:	4a02      	ldr	r2, [pc, #8]	; (404598 <_mbrtowc_r+0x58>)
  40458e:	4628      	mov	r0, r5
  404590:	47b8      	blx	r7
  404592:	e7ea      	b.n	40456a <_mbrtowc_r+0x2a>
  404594:	20000874 	.word	0x20000874
  404598:	00405668 	.word	0x00405668

0040459c <__ascii_mbtowc>:
  40459c:	b082      	sub	sp, #8
  40459e:	b149      	cbz	r1, 4045b4 <__ascii_mbtowc+0x18>
  4045a0:	b15a      	cbz	r2, 4045ba <__ascii_mbtowc+0x1e>
  4045a2:	b16b      	cbz	r3, 4045c0 <__ascii_mbtowc+0x24>
  4045a4:	7813      	ldrb	r3, [r2, #0]
  4045a6:	600b      	str	r3, [r1, #0]
  4045a8:	7812      	ldrb	r2, [r2, #0]
  4045aa:	1c10      	adds	r0, r2, #0
  4045ac:	bf18      	it	ne
  4045ae:	2001      	movne	r0, #1
  4045b0:	b002      	add	sp, #8
  4045b2:	4770      	bx	lr
  4045b4:	a901      	add	r1, sp, #4
  4045b6:	2a00      	cmp	r2, #0
  4045b8:	d1f3      	bne.n	4045a2 <__ascii_mbtowc+0x6>
  4045ba:	4610      	mov	r0, r2
  4045bc:	b002      	add	sp, #8
  4045be:	4770      	bx	lr
  4045c0:	f06f 0001 	mvn.w	r0, #1
  4045c4:	e7f4      	b.n	4045b0 <__ascii_mbtowc+0x14>
  4045c6:	bf00      	nop
	...

004045d0 <memchr>:
  4045d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4045d4:	2a10      	cmp	r2, #16
  4045d6:	db2b      	blt.n	404630 <memchr+0x60>
  4045d8:	f010 0f07 	tst.w	r0, #7
  4045dc:	d008      	beq.n	4045f0 <memchr+0x20>
  4045de:	f810 3b01 	ldrb.w	r3, [r0], #1
  4045e2:	3a01      	subs	r2, #1
  4045e4:	428b      	cmp	r3, r1
  4045e6:	d02d      	beq.n	404644 <memchr+0x74>
  4045e8:	f010 0f07 	tst.w	r0, #7
  4045ec:	b342      	cbz	r2, 404640 <memchr+0x70>
  4045ee:	d1f6      	bne.n	4045de <memchr+0xe>
  4045f0:	b4f0      	push	{r4, r5, r6, r7}
  4045f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4045f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4045fa:	f022 0407 	bic.w	r4, r2, #7
  4045fe:	f07f 0700 	mvns.w	r7, #0
  404602:	2300      	movs	r3, #0
  404604:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404608:	3c08      	subs	r4, #8
  40460a:	ea85 0501 	eor.w	r5, r5, r1
  40460e:	ea86 0601 	eor.w	r6, r6, r1
  404612:	fa85 f547 	uadd8	r5, r5, r7
  404616:	faa3 f587 	sel	r5, r3, r7
  40461a:	fa86 f647 	uadd8	r6, r6, r7
  40461e:	faa5 f687 	sel	r6, r5, r7
  404622:	b98e      	cbnz	r6, 404648 <memchr+0x78>
  404624:	d1ee      	bne.n	404604 <memchr+0x34>
  404626:	bcf0      	pop	{r4, r5, r6, r7}
  404628:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40462c:	f002 0207 	and.w	r2, r2, #7
  404630:	b132      	cbz	r2, 404640 <memchr+0x70>
  404632:	f810 3b01 	ldrb.w	r3, [r0], #1
  404636:	3a01      	subs	r2, #1
  404638:	ea83 0301 	eor.w	r3, r3, r1
  40463c:	b113      	cbz	r3, 404644 <memchr+0x74>
  40463e:	d1f8      	bne.n	404632 <memchr+0x62>
  404640:	2000      	movs	r0, #0
  404642:	4770      	bx	lr
  404644:	3801      	subs	r0, #1
  404646:	4770      	bx	lr
  404648:	2d00      	cmp	r5, #0
  40464a:	bf06      	itte	eq
  40464c:	4635      	moveq	r5, r6
  40464e:	3803      	subeq	r0, #3
  404650:	3807      	subne	r0, #7
  404652:	f015 0f01 	tst.w	r5, #1
  404656:	d107      	bne.n	404668 <memchr+0x98>
  404658:	3001      	adds	r0, #1
  40465a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40465e:	bf02      	ittt	eq
  404660:	3001      	addeq	r0, #1
  404662:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404666:	3001      	addeq	r0, #1
  404668:	bcf0      	pop	{r4, r5, r6, r7}
  40466a:	3801      	subs	r0, #1
  40466c:	4770      	bx	lr
  40466e:	bf00      	nop

00404670 <lflush>:
  404670:	8983      	ldrh	r3, [r0, #12]
  404672:	f003 0309 	and.w	r3, r3, #9
  404676:	2b09      	cmp	r3, #9
  404678:	d001      	beq.n	40467e <lflush+0xe>
  40467a:	2000      	movs	r0, #0
  40467c:	4770      	bx	lr
  40467e:	f7ff b9f1 	b.w	403a64 <fflush>
  404682:	bf00      	nop

00404684 <__srefill_r>:
  404684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404686:	460c      	mov	r4, r1
  404688:	4605      	mov	r5, r0
  40468a:	b110      	cbz	r0, 404692 <__srefill_r+0xe>
  40468c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40468e:	2b00      	cmp	r3, #0
  404690:	d045      	beq.n	40471e <__srefill_r+0x9a>
  404692:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404696:	b29a      	uxth	r2, r3
  404698:	0497      	lsls	r7, r2, #18
  40469a:	d407      	bmi.n	4046ac <__srefill_r+0x28>
  40469c:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40469e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4046a2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  4046a6:	6662      	str	r2, [r4, #100]	; 0x64
  4046a8:	81a3      	strh	r3, [r4, #12]
  4046aa:	b29a      	uxth	r2, r3
  4046ac:	2100      	movs	r1, #0
  4046ae:	0696      	lsls	r6, r2, #26
  4046b0:	6061      	str	r1, [r4, #4]
  4046b2:	d431      	bmi.n	404718 <__srefill_r+0x94>
  4046b4:	0750      	lsls	r0, r2, #29
  4046b6:	d522      	bpl.n	4046fe <__srefill_r+0x7a>
  4046b8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4046ba:	b161      	cbz	r1, 4046d6 <__srefill_r+0x52>
  4046bc:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4046c0:	4299      	cmp	r1, r3
  4046c2:	d002      	beq.n	4046ca <__srefill_r+0x46>
  4046c4:	4628      	mov	r0, r5
  4046c6:	f7ff fbf5 	bl	403eb4 <_free_r>
  4046ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  4046cc:	6063      	str	r3, [r4, #4]
  4046ce:	2000      	movs	r0, #0
  4046d0:	6320      	str	r0, [r4, #48]	; 0x30
  4046d2:	2b00      	cmp	r3, #0
  4046d4:	d13f      	bne.n	404756 <__srefill_r+0xd2>
  4046d6:	6923      	ldr	r3, [r4, #16]
  4046d8:	2b00      	cmp	r3, #0
  4046da:	d04c      	beq.n	404776 <__srefill_r+0xf2>
  4046dc:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
  4046e0:	b2be      	uxth	r6, r7
  4046e2:	07b3      	lsls	r3, r6, #30
  4046e4:	d11e      	bne.n	404724 <__srefill_r+0xa0>
  4046e6:	6922      	ldr	r2, [r4, #16]
  4046e8:	6022      	str	r2, [r4, #0]
  4046ea:	4628      	mov	r0, r5
  4046ec:	6963      	ldr	r3, [r4, #20]
  4046ee:	6a25      	ldr	r5, [r4, #32]
  4046f0:	69e1      	ldr	r1, [r4, #28]
  4046f2:	47a8      	blx	r5
  4046f4:	2800      	cmp	r0, #0
  4046f6:	6060      	str	r0, [r4, #4]
  4046f8:	dd09      	ble.n	40470e <__srefill_r+0x8a>
  4046fa:	2000      	movs	r0, #0
  4046fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4046fe:	06d1      	lsls	r1, r2, #27
  404700:	d53e      	bpl.n	404780 <__srefill_r+0xfc>
  404702:	0712      	lsls	r2, r2, #28
  404704:	d42a      	bmi.n	40475c <__srefill_r+0xd8>
  404706:	f043 0304 	orr.w	r3, r3, #4
  40470a:	81a3      	strh	r3, [r4, #12]
  40470c:	e7e3      	b.n	4046d6 <__srefill_r+0x52>
  40470e:	89a3      	ldrh	r3, [r4, #12]
  404710:	d119      	bne.n	404746 <__srefill_r+0xc2>
  404712:	f043 0320 	orr.w	r3, r3, #32
  404716:	81a3      	strh	r3, [r4, #12]
  404718:	f04f 30ff 	mov.w	r0, #4294967295
  40471c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40471e:	f7ff fa31 	bl	403b84 <__sinit>
  404722:	e7b6      	b.n	404692 <__srefill_r+0xe>
  404724:	4b1a      	ldr	r3, [pc, #104]	; (404790 <__srefill_r+0x10c>)
  404726:	491b      	ldr	r1, [pc, #108]	; (404794 <__srefill_r+0x110>)
  404728:	6818      	ldr	r0, [r3, #0]
  40472a:	2301      	movs	r3, #1
  40472c:	81a3      	strh	r3, [r4, #12]
  40472e:	f006 0609 	and.w	r6, r6, #9
  404732:	f7ff fe29 	bl	404388 <_fwalk>
  404736:	2e09      	cmp	r6, #9
  404738:	81a7      	strh	r7, [r4, #12]
  40473a:	d1d4      	bne.n	4046e6 <__srefill_r+0x62>
  40473c:	4621      	mov	r1, r4
  40473e:	4628      	mov	r0, r5
  404740:	f7ff f8d6 	bl	4038f0 <__sflush_r>
  404744:	e7cf      	b.n	4046e6 <__srefill_r+0x62>
  404746:	2200      	movs	r2, #0
  404748:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40474c:	81a3      	strh	r3, [r4, #12]
  40474e:	6062      	str	r2, [r4, #4]
  404750:	f04f 30ff 	mov.w	r0, #4294967295
  404754:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404756:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  404758:	6023      	str	r3, [r4, #0]
  40475a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40475c:	4621      	mov	r1, r4
  40475e:	4628      	mov	r0, r5
  404760:	f7ff f96a 	bl	403a38 <_fflush_r>
  404764:	2800      	cmp	r0, #0
  404766:	d1d7      	bne.n	404718 <__srefill_r+0x94>
  404768:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40476c:	60a0      	str	r0, [r4, #8]
  40476e:	61a0      	str	r0, [r4, #24]
  404770:	f023 0308 	bic.w	r3, r3, #8
  404774:	e7c7      	b.n	404706 <__srefill_r+0x82>
  404776:	4621      	mov	r1, r4
  404778:	4628      	mov	r0, r5
  40477a:	f7ff fe9d 	bl	4044b8 <__smakebuf_r>
  40477e:	e7ad      	b.n	4046dc <__srefill_r+0x58>
  404780:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404784:	2209      	movs	r2, #9
  404786:	602a      	str	r2, [r5, #0]
  404788:	f04f 30ff 	mov.w	r0, #4294967295
  40478c:	81a3      	strh	r3, [r4, #12]
  40478e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404790:	00405704 	.word	0x00405704
  404794:	00404671 	.word	0x00404671

00404798 <__sccl>:
  404798:	b470      	push	{r4, r5, r6}
  40479a:	780d      	ldrb	r5, [r1, #0]
  40479c:	2d5e      	cmp	r5, #94	; 0x5e
  40479e:	d02f      	beq.n	404800 <__sccl+0x68>
  4047a0:	2200      	movs	r2, #0
  4047a2:	3101      	adds	r1, #1
  4047a4:	4616      	mov	r6, r2
  4047a6:	1e43      	subs	r3, r0, #1
  4047a8:	f100 04ff 	add.w	r4, r0, #255	; 0xff
  4047ac:	f803 2f01 	strb.w	r2, [r3, #1]!
  4047b0:	42a3      	cmp	r3, r4
  4047b2:	d1fb      	bne.n	4047ac <__sccl+0x14>
  4047b4:	b185      	cbz	r5, 4047d8 <__sccl+0x40>
  4047b6:	f086 0201 	eor.w	r2, r6, #1
  4047ba:	5542      	strb	r2, [r0, r5]
  4047bc:	1c4c      	adds	r4, r1, #1
  4047be:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  4047c2:	2b2d      	cmp	r3, #45	; 0x2d
  4047c4:	d00e      	beq.n	4047e4 <__sccl+0x4c>
  4047c6:	2b5d      	cmp	r3, #93	; 0x5d
  4047c8:	d009      	beq.n	4047de <__sccl+0x46>
  4047ca:	b113      	cbz	r3, 4047d2 <__sccl+0x3a>
  4047cc:	461d      	mov	r5, r3
  4047ce:	4621      	mov	r1, r4
  4047d0:	e7f3      	b.n	4047ba <__sccl+0x22>
  4047d2:	4608      	mov	r0, r1
  4047d4:	bc70      	pop	{r4, r5, r6}
  4047d6:	4770      	bx	lr
  4047d8:	1e48      	subs	r0, r1, #1
  4047da:	bc70      	pop	{r4, r5, r6}
  4047dc:	4770      	bx	lr
  4047de:	4620      	mov	r0, r4
  4047e0:	bc70      	pop	{r4, r5, r6}
  4047e2:	4770      	bx	lr
  4047e4:	784e      	ldrb	r6, [r1, #1]
  4047e6:	2e5d      	cmp	r6, #93	; 0x5d
  4047e8:	d0f0      	beq.n	4047cc <__sccl+0x34>
  4047ea:	42b5      	cmp	r5, r6
  4047ec:	dcee      	bgt.n	4047cc <__sccl+0x34>
  4047ee:	3102      	adds	r1, #2
  4047f0:	1943      	adds	r3, r0, r5
  4047f2:	3501      	adds	r5, #1
  4047f4:	42ae      	cmp	r6, r5
  4047f6:	f803 2f01 	strb.w	r2, [r3, #1]!
  4047fa:	dcfa      	bgt.n	4047f2 <__sccl+0x5a>
  4047fc:	3402      	adds	r4, #2
  4047fe:	e7de      	b.n	4047be <__sccl+0x26>
  404800:	2201      	movs	r2, #1
  404802:	784d      	ldrb	r5, [r1, #1]
  404804:	4616      	mov	r6, r2
  404806:	3102      	adds	r1, #2
  404808:	e7cd      	b.n	4047a6 <__sccl+0xe>
  40480a:	bf00      	nop

0040480c <__sread>:
  40480c:	b510      	push	{r4, lr}
  40480e:	460c      	mov	r4, r1
  404810:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404814:	f000 fd5a 	bl	4052cc <_read_r>
  404818:	2800      	cmp	r0, #0
  40481a:	db03      	blt.n	404824 <__sread+0x18>
  40481c:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40481e:	4403      	add	r3, r0
  404820:	6523      	str	r3, [r4, #80]	; 0x50
  404822:	bd10      	pop	{r4, pc}
  404824:	89a3      	ldrh	r3, [r4, #12]
  404826:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  40482a:	81a3      	strh	r3, [r4, #12]
  40482c:	bd10      	pop	{r4, pc}
  40482e:	bf00      	nop

00404830 <__swrite>:
  404830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404834:	4616      	mov	r6, r2
  404836:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  40483a:	461f      	mov	r7, r3
  40483c:	05d3      	lsls	r3, r2, #23
  40483e:	460c      	mov	r4, r1
  404840:	4605      	mov	r5, r0
  404842:	d507      	bpl.n	404854 <__swrite+0x24>
  404844:	2200      	movs	r2, #0
  404846:	2302      	movs	r3, #2
  404848:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40484c:	f000 fd28 	bl	4052a0 <_lseek_r>
  404850:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404854:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  404858:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  40485c:	81a2      	strh	r2, [r4, #12]
  40485e:	463b      	mov	r3, r7
  404860:	4632      	mov	r2, r6
  404862:	4628      	mov	r0, r5
  404864:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404868:	f000 bc38 	b.w	4050dc <_write_r>

0040486c <__sseek>:
  40486c:	b510      	push	{r4, lr}
  40486e:	460c      	mov	r4, r1
  404870:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404874:	f000 fd14 	bl	4052a0 <_lseek_r>
  404878:	89a3      	ldrh	r3, [r4, #12]
  40487a:	1c42      	adds	r2, r0, #1
  40487c:	bf0e      	itee	eq
  40487e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  404882:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  404886:	6520      	strne	r0, [r4, #80]	; 0x50
  404888:	81a3      	strh	r3, [r4, #12]
  40488a:	bd10      	pop	{r4, pc}

0040488c <__sclose>:
  40488c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404890:	f000 bc8c 	b.w	4051ac <_close_r>

00404894 <_strtol_r>:
  404894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404898:	4c47      	ldr	r4, [pc, #284]	; (4049b8 <_strtol_r+0x124>)
  40489a:	4683      	mov	fp, r0
  40489c:	460e      	mov	r6, r1
  40489e:	f8d4 e000 	ldr.w	lr, [r4]
  4048a2:	e000      	b.n	4048a6 <_strtol_r+0x12>
  4048a4:	4626      	mov	r6, r4
  4048a6:	4634      	mov	r4, r6
  4048a8:	f814 5b01 	ldrb.w	r5, [r4], #1
  4048ac:	eb0e 0005 	add.w	r0, lr, r5
  4048b0:	7840      	ldrb	r0, [r0, #1]
  4048b2:	f000 0008 	and.w	r0, r0, #8
  4048b6:	f000 08ff 	and.w	r8, r0, #255	; 0xff
  4048ba:	2800      	cmp	r0, #0
  4048bc:	d1f2      	bne.n	4048a4 <_strtol_r+0x10>
  4048be:	2d2d      	cmp	r5, #45	; 0x2d
  4048c0:	d05c      	beq.n	40497c <_strtol_r+0xe8>
  4048c2:	2d2b      	cmp	r5, #43	; 0x2b
  4048c4:	bf04      	itt	eq
  4048c6:	7875      	ldrbeq	r5, [r6, #1]
  4048c8:	1cb4      	addeq	r4, r6, #2
  4048ca:	2b00      	cmp	r3, #0
  4048cc:	d03e      	beq.n	40494c <_strtol_r+0xb8>
  4048ce:	2b10      	cmp	r3, #16
  4048d0:	d060      	beq.n	404994 <_strtol_r+0x100>
  4048d2:	469a      	mov	sl, r3
  4048d4:	f1b8 0f00 	cmp.w	r8, #0
  4048d8:	bf0c      	ite	eq
  4048da:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4048de:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
  4048e2:	2700      	movs	r7, #0
  4048e4:	fbb0 f9fa 	udiv	r9, r0, sl
  4048e8:	46bc      	mov	ip, r7
  4048ea:	fb0a 0019 	mls	r0, sl, r9, r0
  4048ee:	e00c      	b.n	40490a <_strtol_r+0x76>
  4048f0:	3d30      	subs	r5, #48	; 0x30
  4048f2:	42ab      	cmp	r3, r5
  4048f4:	dd19      	ble.n	40492a <_strtol_r+0x96>
  4048f6:	1c7e      	adds	r6, r7, #1
  4048f8:	d005      	beq.n	404906 <_strtol_r+0x72>
  4048fa:	45cc      	cmp	ip, r9
  4048fc:	d823      	bhi.n	404946 <_strtol_r+0xb2>
  4048fe:	d020      	beq.n	404942 <_strtol_r+0xae>
  404900:	fb0a 5c0c 	mla	ip, sl, ip, r5
  404904:	2701      	movs	r7, #1
  404906:	f814 5b01 	ldrb.w	r5, [r4], #1
  40490a:	eb0e 0605 	add.w	r6, lr, r5
  40490e:	7876      	ldrb	r6, [r6, #1]
  404910:	f016 0f04 	tst.w	r6, #4
  404914:	d1ec      	bne.n	4048f0 <_strtol_r+0x5c>
  404916:	f016 0603 	ands.w	r6, r6, #3
  40491a:	d006      	beq.n	40492a <_strtol_r+0x96>
  40491c:	2e01      	cmp	r6, #1
  40491e:	bf14      	ite	ne
  404920:	2657      	movne	r6, #87	; 0x57
  404922:	2637      	moveq	r6, #55	; 0x37
  404924:	1bad      	subs	r5, r5, r6
  404926:	42ab      	cmp	r3, r5
  404928:	dce5      	bgt.n	4048f6 <_strtol_r+0x62>
  40492a:	1c7b      	adds	r3, r7, #1
  40492c:	d016      	beq.n	40495c <_strtol_r+0xc8>
  40492e:	f1b8 0f00 	cmp.w	r8, #0
  404932:	d110      	bne.n	404956 <_strtol_r+0xc2>
  404934:	4660      	mov	r0, ip
  404936:	2a00      	cmp	r2, #0
  404938:	d039      	beq.n	4049ae <_strtol_r+0x11a>
  40493a:	b9df      	cbnz	r7, 404974 <_strtol_r+0xe0>
  40493c:	6011      	str	r1, [r2, #0]
  40493e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404942:	4285      	cmp	r5, r0
  404944:	dddc      	ble.n	404900 <_strtol_r+0x6c>
  404946:	f04f 37ff 	mov.w	r7, #4294967295
  40494a:	e7dc      	b.n	404906 <_strtol_r+0x72>
  40494c:	2d30      	cmp	r5, #48	; 0x30
  40494e:	d01a      	beq.n	404986 <_strtol_r+0xf2>
  404950:	230a      	movs	r3, #10
  404952:	469a      	mov	sl, r3
  404954:	e7be      	b.n	4048d4 <_strtol_r+0x40>
  404956:	f1cc 0c00 	rsb	ip, ip, #0
  40495a:	e7eb      	b.n	404934 <_strtol_r+0xa0>
  40495c:	f1b8 0f00 	cmp.w	r8, #0
  404960:	f04f 0322 	mov.w	r3, #34	; 0x22
  404964:	bf0c      	ite	eq
  404966:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40496a:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
  40496e:	f8cb 3000 	str.w	r3, [fp]
  404972:	b1f2      	cbz	r2, 4049b2 <_strtol_r+0x11e>
  404974:	1e61      	subs	r1, r4, #1
  404976:	6011      	str	r1, [r2, #0]
  404978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40497c:	1cb4      	adds	r4, r6, #2
  40497e:	7875      	ldrb	r5, [r6, #1]
  404980:	f04f 0801 	mov.w	r8, #1
  404984:	e7a1      	b.n	4048ca <_strtol_r+0x36>
  404986:	7823      	ldrb	r3, [r4, #0]
  404988:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  40498c:	2b58      	cmp	r3, #88	; 0x58
  40498e:	d008      	beq.n	4049a2 <_strtol_r+0x10e>
  404990:	2308      	movs	r3, #8
  404992:	e79e      	b.n	4048d2 <_strtol_r+0x3e>
  404994:	2d30      	cmp	r5, #48	; 0x30
  404996:	d19c      	bne.n	4048d2 <_strtol_r+0x3e>
  404998:	7820      	ldrb	r0, [r4, #0]
  40499a:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  40499e:	2858      	cmp	r0, #88	; 0x58
  4049a0:	d197      	bne.n	4048d2 <_strtol_r+0x3e>
  4049a2:	f04f 0a10 	mov.w	sl, #16
  4049a6:	7865      	ldrb	r5, [r4, #1]
  4049a8:	4653      	mov	r3, sl
  4049aa:	3402      	adds	r4, #2
  4049ac:	e792      	b.n	4048d4 <_strtol_r+0x40>
  4049ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049b6:	bf00      	nop
  4049b8:	2000084c 	.word	0x2000084c

004049bc <_strtoll_r>:
  4049bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4049c0:	4c69      	ldr	r4, [pc, #420]	; (404b68 <_strtoll_r+0x1ac>)
  4049c2:	b087      	sub	sp, #28
  4049c4:	469b      	mov	fp, r3
  4049c6:	9202      	str	r2, [sp, #8]
  4049c8:	9104      	str	r1, [sp, #16]
  4049ca:	9005      	str	r0, [sp, #20]
  4049cc:	460a      	mov	r2, r1
  4049ce:	f8d4 a000 	ldr.w	sl, [r4]
  4049d2:	e000      	b.n	4049d6 <_strtoll_r+0x1a>
  4049d4:	462a      	mov	r2, r5
  4049d6:	4615      	mov	r5, r2
  4049d8:	f815 4b01 	ldrb.w	r4, [r5], #1
  4049dc:	eb0a 0304 	add.w	r3, sl, r4
  4049e0:	785b      	ldrb	r3, [r3, #1]
  4049e2:	f003 0308 	and.w	r3, r3, #8
  4049e6:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  4049ea:	2b00      	cmp	r3, #0
  4049ec:	d1f2      	bne.n	4049d4 <_strtoll_r+0x18>
  4049ee:	2c2d      	cmp	r4, #45	; 0x2d
  4049f0:	f000 8083 	beq.w	404afa <_strtoll_r+0x13e>
  4049f4:	2c2b      	cmp	r4, #43	; 0x2b
  4049f6:	bf08      	it	eq
  4049f8:	7854      	ldrbeq	r4, [r2, #1]
  4049fa:	9101      	str	r1, [sp, #4]
  4049fc:	bf08      	it	eq
  4049fe:	1c95      	addeq	r5, r2, #2
  404a00:	f1bb 0f00 	cmp.w	fp, #0
  404a04:	d00c      	beq.n	404a20 <_strtoll_r+0x64>
  404a06:	f1bb 0f10 	cmp.w	fp, #16
  404a0a:	f000 8095 	beq.w	404b38 <_strtoll_r+0x17c>
  404a0e:	9b01      	ldr	r3, [sp, #4]
  404a10:	465e      	mov	r6, fp
  404a12:	17f7      	asrs	r7, r6, #31
  404a14:	b96b      	cbnz	r3, 404a32 <_strtoll_r+0x76>
  404a16:	f04f 38ff 	mov.w	r8, #4294967295
  404a1a:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
  404a1e:	e00c      	b.n	404a3a <_strtoll_r+0x7e>
  404a20:	2c30      	cmp	r4, #48	; 0x30
  404a22:	d07f      	beq.n	404b24 <_strtoll_r+0x168>
  404a24:	260a      	movs	r6, #10
  404a26:	2700      	movs	r7, #0
  404a28:	f04f 0b0a 	mov.w	fp, #10
  404a2c:	9b01      	ldr	r3, [sp, #4]
  404a2e:	2b00      	cmp	r3, #0
  404a30:	d0f1      	beq.n	404a16 <_strtoll_r+0x5a>
  404a32:	f04f 0800 	mov.w	r8, #0
  404a36:	f04f 4900 	mov.w	r9, #2147483648	; 0x80000000
  404a3a:	4640      	mov	r0, r8
  404a3c:	4632      	mov	r2, r6
  404a3e:	463b      	mov	r3, r7
  404a40:	4649      	mov	r1, r9
  404a42:	f000 fc59 	bl	4052f8 <__aeabi_uldivmod>
  404a46:	463b      	mov	r3, r7
  404a48:	9203      	str	r2, [sp, #12]
  404a4a:	4640      	mov	r0, r8
  404a4c:	4632      	mov	r2, r6
  404a4e:	4649      	mov	r1, r9
  404a50:	f000 fc52 	bl	4052f8 <__aeabi_uldivmod>
  404a54:	f04f 0e00 	mov.w	lr, #0
  404a58:	2200      	movs	r2, #0
  404a5a:	2300      	movs	r3, #0
  404a5c:	f8dd 800c 	ldr.w	r8, [sp, #12]
  404a60:	e01b      	b.n	404a9a <_strtoll_r+0xde>
  404a62:	3c30      	subs	r4, #48	; 0x30
  404a64:	45a3      	cmp	fp, r4
  404a66:	dd2d      	ble.n	404ac4 <_strtoll_r+0x108>
  404a68:	f1be 3fff 	cmp.w	lr, #4294967295
  404a6c:	d013      	beq.n	404a96 <_strtoll_r+0xda>
  404a6e:	4299      	cmp	r1, r3
  404a70:	bf08      	it	eq
  404a72:	4290      	cmpeq	r0, r2
  404a74:	d33e      	bcc.n	404af4 <_strtoll_r+0x138>
  404a76:	428b      	cmp	r3, r1
  404a78:	bf08      	it	eq
  404a7a:	4282      	cmpeq	r2, r0
  404a7c:	d038      	beq.n	404af0 <_strtoll_r+0x134>
  404a7e:	fb02 fe07 	mul.w	lr, r2, r7
  404a82:	fb06 ee03 	mla	lr, r6, r3, lr
  404a86:	fba2 2306 	umull	r2, r3, r2, r6
  404a8a:	4473      	add	r3, lr
  404a8c:	1912      	adds	r2, r2, r4
  404a8e:	eb43 73e4 	adc.w	r3, r3, r4, asr #31
  404a92:	f04f 0e01 	mov.w	lr, #1
  404a96:	f815 4b01 	ldrb.w	r4, [r5], #1
  404a9a:	eb0a 0c04 	add.w	ip, sl, r4
  404a9e:	f89c c001 	ldrb.w	ip, [ip, #1]
  404aa2:	f01c 0f04 	tst.w	ip, #4
  404aa6:	d1dc      	bne.n	404a62 <_strtoll_r+0xa6>
  404aa8:	f01c 0c03 	ands.w	ip, ip, #3
  404aac:	d00a      	beq.n	404ac4 <_strtoll_r+0x108>
  404aae:	f1bc 0f01 	cmp.w	ip, #1
  404ab2:	bf14      	ite	ne
  404ab4:	f04f 0c57 	movne.w	ip, #87	; 0x57
  404ab8:	f04f 0c37 	moveq.w	ip, #55	; 0x37
  404abc:	ebcc 0404 	rsb	r4, ip, r4
  404ac0:	45a3      	cmp	fp, r4
  404ac2:	dcd1      	bgt.n	404a68 <_strtoll_r+0xac>
  404ac4:	f1be 3fff 	cmp.w	lr, #4294967295
  404ac8:	d01c      	beq.n	404b04 <_strtoll_r+0x148>
  404aca:	9901      	ldr	r1, [sp, #4]
  404acc:	b111      	cbz	r1, 404ad4 <_strtoll_r+0x118>
  404ace:	4252      	negs	r2, r2
  404ad0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  404ad4:	9902      	ldr	r1, [sp, #8]
  404ad6:	2900      	cmp	r1, #0
  404ad8:	d040      	beq.n	404b5c <_strtoll_r+0x1a0>
  404ada:	f1be 0f00 	cmp.w	lr, #0
  404ade:	d11d      	bne.n	404b1c <_strtoll_r+0x160>
  404ae0:	9d04      	ldr	r5, [sp, #16]
  404ae2:	4610      	mov	r0, r2
  404ae4:	4619      	mov	r1, r3
  404ae6:	9b02      	ldr	r3, [sp, #8]
  404ae8:	601d      	str	r5, [r3, #0]
  404aea:	b007      	add	sp, #28
  404aec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404af0:	4544      	cmp	r4, r8
  404af2:	ddc4      	ble.n	404a7e <_strtoll_r+0xc2>
  404af4:	f04f 3eff 	mov.w	lr, #4294967295
  404af8:	e7cd      	b.n	404a96 <_strtoll_r+0xda>
  404afa:	2301      	movs	r3, #1
  404afc:	1c95      	adds	r5, r2, #2
  404afe:	7854      	ldrb	r4, [r2, #1]
  404b00:	9301      	str	r3, [sp, #4]
  404b02:	e77d      	b.n	404a00 <_strtoll_r+0x44>
  404b04:	9b01      	ldr	r3, [sp, #4]
  404b06:	bb2b      	cbnz	r3, 404b54 <_strtoll_r+0x198>
  404b08:	f04f 30ff 	mov.w	r0, #4294967295
  404b0c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  404b10:	9a05      	ldr	r2, [sp, #20]
  404b12:	2322      	movs	r3, #34	; 0x22
  404b14:	6013      	str	r3, [r2, #0]
  404b16:	9b02      	ldr	r3, [sp, #8]
  404b18:	b913      	cbnz	r3, 404b20 <_strtoll_r+0x164>
  404b1a:	e7e6      	b.n	404aea <_strtoll_r+0x12e>
  404b1c:	4610      	mov	r0, r2
  404b1e:	4619      	mov	r1, r3
  404b20:	3d01      	subs	r5, #1
  404b22:	e7e0      	b.n	404ae6 <_strtoll_r+0x12a>
  404b24:	782b      	ldrb	r3, [r5, #0]
  404b26:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404b2a:	2b58      	cmp	r3, #88	; 0x58
  404b2c:	d00b      	beq.n	404b46 <_strtoll_r+0x18a>
  404b2e:	2608      	movs	r6, #8
  404b30:	2700      	movs	r7, #0
  404b32:	f04f 0b08 	mov.w	fp, #8
  404b36:	e779      	b.n	404a2c <_strtoll_r+0x70>
  404b38:	2c30      	cmp	r4, #48	; 0x30
  404b3a:	d112      	bne.n	404b62 <_strtoll_r+0x1a6>
  404b3c:	782b      	ldrb	r3, [r5, #0]
  404b3e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404b42:	2b58      	cmp	r3, #88	; 0x58
  404b44:	d10d      	bne.n	404b62 <_strtoll_r+0x1a6>
  404b46:	786c      	ldrb	r4, [r5, #1]
  404b48:	2610      	movs	r6, #16
  404b4a:	2700      	movs	r7, #0
  404b4c:	3502      	adds	r5, #2
  404b4e:	f04f 0b10 	mov.w	fp, #16
  404b52:	e76b      	b.n	404a2c <_strtoll_r+0x70>
  404b54:	2000      	movs	r0, #0
  404b56:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  404b5a:	e7d9      	b.n	404b10 <_strtoll_r+0x154>
  404b5c:	4610      	mov	r0, r2
  404b5e:	4619      	mov	r1, r3
  404b60:	e7c3      	b.n	404aea <_strtoll_r+0x12e>
  404b62:	2610      	movs	r6, #16
  404b64:	2700      	movs	r7, #0
  404b66:	e761      	b.n	404a2c <_strtoll_r+0x70>
  404b68:	2000084c 	.word	0x2000084c

00404b6c <_strtoul_r>:
  404b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404b70:	4c49      	ldr	r4, [pc, #292]	; (404c98 <_strtoul_r+0x12c>)
  404b72:	4682      	mov	sl, r0
  404b74:	460e      	mov	r6, r1
  404b76:	f8d4 e000 	ldr.w	lr, [r4]
  404b7a:	e000      	b.n	404b7e <_strtoul_r+0x12>
  404b7c:	4626      	mov	r6, r4
  404b7e:	4634      	mov	r4, r6
  404b80:	f814 5b01 	ldrb.w	r5, [r4], #1
  404b84:	eb0e 0005 	add.w	r0, lr, r5
  404b88:	7840      	ldrb	r0, [r0, #1]
  404b8a:	f000 0008 	and.w	r0, r0, #8
  404b8e:	f000 0cff 	and.w	ip, r0, #255	; 0xff
  404b92:	2800      	cmp	r0, #0
  404b94:	d1f2      	bne.n	404b7c <_strtoul_r+0x10>
  404b96:	2d2d      	cmp	r5, #45	; 0x2d
  404b98:	d054      	beq.n	404c44 <_strtoul_r+0xd8>
  404b9a:	2d2b      	cmp	r5, #43	; 0x2b
  404b9c:	bf04      	itt	eq
  404b9e:	7875      	ldrbeq	r5, [r6, #1]
  404ba0:	1cb4      	addeq	r4, r6, #2
  404ba2:	b15b      	cbz	r3, 404bbc <_strtoul_r+0x50>
  404ba4:	2b10      	cmp	r3, #16
  404ba6:	d05e      	beq.n	404c66 <_strtoul_r+0xfa>
  404ba8:	f04f 38ff 	mov.w	r8, #4294967295
  404bac:	fbb8 f8f3 	udiv	r8, r8, r3
  404bb0:	fb03 fb08 	mul.w	fp, r3, r8
  404bb4:	ea6f 0b0b 	mvn.w	fp, fp
  404bb8:	4699      	mov	r9, r3
  404bba:	e007      	b.n	404bcc <_strtoul_r+0x60>
  404bbc:	2d30      	cmp	r5, #48	; 0x30
  404bbe:	d046      	beq.n	404c4e <_strtoul_r+0xe2>
  404bc0:	230a      	movs	r3, #10
  404bc2:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 404c9c <_strtoul_r+0x130>
  404bc6:	4699      	mov	r9, r3
  404bc8:	f04f 0b05 	mov.w	fp, #5
  404bcc:	2700      	movs	r7, #0
  404bce:	4638      	mov	r0, r7
  404bd0:	e00c      	b.n	404bec <_strtoul_r+0x80>
  404bd2:	3d30      	subs	r5, #48	; 0x30
  404bd4:	42ab      	cmp	r3, r5
  404bd6:	dd19      	ble.n	404c0c <_strtoul_r+0xa0>
  404bd8:	1c7e      	adds	r6, r7, #1
  404bda:	d005      	beq.n	404be8 <_strtoul_r+0x7c>
  404bdc:	4540      	cmp	r0, r8
  404bde:	d822      	bhi.n	404c26 <_strtoul_r+0xba>
  404be0:	d01f      	beq.n	404c22 <_strtoul_r+0xb6>
  404be2:	fb09 5000 	mla	r0, r9, r0, r5
  404be6:	2701      	movs	r7, #1
  404be8:	f814 5b01 	ldrb.w	r5, [r4], #1
  404bec:	eb0e 0605 	add.w	r6, lr, r5
  404bf0:	7876      	ldrb	r6, [r6, #1]
  404bf2:	f016 0f04 	tst.w	r6, #4
  404bf6:	d1ec      	bne.n	404bd2 <_strtoul_r+0x66>
  404bf8:	f016 0603 	ands.w	r6, r6, #3
  404bfc:	d006      	beq.n	404c0c <_strtoul_r+0xa0>
  404bfe:	2e01      	cmp	r6, #1
  404c00:	bf14      	ite	ne
  404c02:	2657      	movne	r6, #87	; 0x57
  404c04:	2637      	moveq	r6, #55	; 0x37
  404c06:	1bad      	subs	r5, r5, r6
  404c08:	42ab      	cmp	r3, r5
  404c0a:	dce5      	bgt.n	404bd8 <_strtoul_r+0x6c>
  404c0c:	2f00      	cmp	r7, #0
  404c0e:	db0f      	blt.n	404c30 <_strtoul_r+0xc4>
  404c10:	f1bc 0f00 	cmp.w	ip, #0
  404c14:	d000      	beq.n	404c18 <_strtoul_r+0xac>
  404c16:	4240      	negs	r0, r0
  404c18:	b142      	cbz	r2, 404c2c <_strtoul_r+0xc0>
  404c1a:	b97f      	cbnz	r7, 404c3c <_strtoul_r+0xd0>
  404c1c:	6011      	str	r1, [r2, #0]
  404c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c22:	455d      	cmp	r5, fp
  404c24:	dddd      	ble.n	404be2 <_strtoul_r+0x76>
  404c26:	f04f 37ff 	mov.w	r7, #4294967295
  404c2a:	e7dd      	b.n	404be8 <_strtoul_r+0x7c>
  404c2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c30:	2322      	movs	r3, #34	; 0x22
  404c32:	f8ca 3000 	str.w	r3, [sl]
  404c36:	f04f 30ff 	mov.w	r0, #4294967295
  404c3a:	b35a      	cbz	r2, 404c94 <_strtoul_r+0x128>
  404c3c:	1e61      	subs	r1, r4, #1
  404c3e:	6011      	str	r1, [r2, #0]
  404c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c44:	1cb4      	adds	r4, r6, #2
  404c46:	7875      	ldrb	r5, [r6, #1]
  404c48:	f04f 0c01 	mov.w	ip, #1
  404c4c:	e7a9      	b.n	404ba2 <_strtoul_r+0x36>
  404c4e:	7823      	ldrb	r3, [r4, #0]
  404c50:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404c54:	2b58      	cmp	r3, #88	; 0x58
  404c56:	d00d      	beq.n	404c74 <_strtoul_r+0x108>
  404c58:	2308      	movs	r3, #8
  404c5a:	4699      	mov	r9, r3
  404c5c:	f04f 0b07 	mov.w	fp, #7
  404c60:	f06f 4860 	mvn.w	r8, #3758096384	; 0xe0000000
  404c64:	e7b2      	b.n	404bcc <_strtoul_r+0x60>
  404c66:	2d30      	cmp	r5, #48	; 0x30
  404c68:	d10e      	bne.n	404c88 <_strtoul_r+0x11c>
  404c6a:	7820      	ldrb	r0, [r4, #0]
  404c6c:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  404c70:	2858      	cmp	r0, #88	; 0x58
  404c72:	d109      	bne.n	404c88 <_strtoul_r+0x11c>
  404c74:	f04f 0910 	mov.w	r9, #16
  404c78:	7865      	ldrb	r5, [r4, #1]
  404c7a:	464b      	mov	r3, r9
  404c7c:	f04f 0b0f 	mov.w	fp, #15
  404c80:	3402      	adds	r4, #2
  404c82:	f06f 4870 	mvn.w	r8, #4026531840	; 0xf0000000
  404c86:	e7a1      	b.n	404bcc <_strtoul_r+0x60>
  404c88:	f04f 0b0f 	mov.w	fp, #15
  404c8c:	f06f 4870 	mvn.w	r8, #4026531840	; 0xf0000000
  404c90:	4699      	mov	r9, r3
  404c92:	e79b      	b.n	404bcc <_strtoul_r+0x60>
  404c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c98:	2000084c 	.word	0x2000084c
  404c9c:	19999999 	.word	0x19999999

00404ca0 <_strtoull_r>:
  404ca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404ca4:	4c6e      	ldr	r4, [pc, #440]	; (404e60 <_strtoull_r+0x1c0>)
  404ca6:	b087      	sub	sp, #28
  404ca8:	4692      	mov	sl, r2
  404caa:	468b      	mov	fp, r1
  404cac:	9004      	str	r0, [sp, #16]
  404cae:	461f      	mov	r7, r3
  404cb0:	460a      	mov	r2, r1
  404cb2:	6826      	ldr	r6, [r4, #0]
  404cb4:	e000      	b.n	404cb8 <_strtoull_r+0x18>
  404cb6:	462a      	mov	r2, r5
  404cb8:	4615      	mov	r5, r2
  404cba:	f815 4b01 	ldrb.w	r4, [r5], #1
  404cbe:	1933      	adds	r3, r6, r4
  404cc0:	785b      	ldrb	r3, [r3, #1]
  404cc2:	f003 0308 	and.w	r3, r3, #8
  404cc6:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  404cca:	2b00      	cmp	r3, #0
  404ccc:	d1f3      	bne.n	404cb6 <_strtoull_r+0x16>
  404cce:	2c2d      	cmp	r4, #45	; 0x2d
  404cd0:	f000 808e 	beq.w	404df0 <_strtoull_r+0x150>
  404cd4:	2c2b      	cmp	r4, #43	; 0x2b
  404cd6:	bf08      	it	eq
  404cd8:	7854      	ldrbeq	r4, [r2, #1]
  404cda:	9103      	str	r1, [sp, #12]
  404cdc:	bf08      	it	eq
  404cde:	1c95      	addeq	r5, r2, #2
  404ce0:	b1df      	cbz	r7, 404d1a <_strtoull_r+0x7a>
  404ce2:	2f10      	cmp	r7, #16
  404ce4:	f000 809a 	beq.w	404e1c <_strtoull_r+0x17c>
  404ce8:	ea4f 79e7 	mov.w	r9, r7, asr #31
  404cec:	463a      	mov	r2, r7
  404cee:	464b      	mov	r3, r9
  404cf0:	f04f 30ff 	mov.w	r0, #4294967295
  404cf4:	f04f 31ff 	mov.w	r1, #4294967295
  404cf8:	f000 fafe 	bl	4052f8 <__aeabi_uldivmod>
  404cfc:	463a      	mov	r2, r7
  404cfe:	9001      	str	r0, [sp, #4]
  404d00:	9105      	str	r1, [sp, #20]
  404d02:	464b      	mov	r3, r9
  404d04:	f04f 30ff 	mov.w	r0, #4294967295
  404d08:	f04f 31ff 	mov.w	r1, #4294967295
  404d0c:	f000 faf4 	bl	4052f8 <__aeabi_uldivmod>
  404d10:	46b8      	mov	r8, r7
  404d12:	9202      	str	r2, [sp, #8]
  404d14:	9a01      	ldr	r2, [sp, #4]
  404d16:	9b05      	ldr	r3, [sp, #20]
  404d18:	e00b      	b.n	404d32 <_strtoull_r+0x92>
  404d1a:	2c30      	cmp	r4, #48	; 0x30
  404d1c:	d06d      	beq.n	404dfa <_strtoull_r+0x15a>
  404d1e:	2305      	movs	r3, #5
  404d20:	9302      	str	r3, [sp, #8]
  404d22:	4b50      	ldr	r3, [pc, #320]	; (404e64 <_strtoull_r+0x1c4>)
  404d24:	f04f 3299 	mov.w	r2, #2576980377	; 0x99999999
  404d28:	f04f 080a 	mov.w	r8, #10
  404d2c:	f04f 0900 	mov.w	r9, #0
  404d30:	270a      	movs	r7, #10
  404d32:	f04f 0e00 	mov.w	lr, #0
  404d36:	2000      	movs	r0, #0
  404d38:	2100      	movs	r1, #0
  404d3a:	9701      	str	r7, [sp, #4]
  404d3c:	e01c      	b.n	404d78 <_strtoull_r+0xd8>
  404d3e:	9f01      	ldr	r7, [sp, #4]
  404d40:	3c30      	subs	r4, #48	; 0x30
  404d42:	42a7      	cmp	r7, r4
  404d44:	dd2e      	ble.n	404da4 <_strtoull_r+0x104>
  404d46:	f1be 3fff 	cmp.w	lr, #4294967295
  404d4a:	d013      	beq.n	404d74 <_strtoull_r+0xd4>
  404d4c:	428b      	cmp	r3, r1
  404d4e:	bf08      	it	eq
  404d50:	4282      	cmpeq	r2, r0
  404d52:	d33e      	bcc.n	404dd2 <_strtoull_r+0x132>
  404d54:	4299      	cmp	r1, r3
  404d56:	bf08      	it	eq
  404d58:	4290      	cmpeq	r0, r2
  404d5a:	d037      	beq.n	404dcc <_strtoull_r+0x12c>
  404d5c:	fb00 fc09 	mul.w	ip, r0, r9
  404d60:	fb08 cc01 	mla	ip, r8, r1, ip
  404d64:	fba0 0108 	umull	r0, r1, r0, r8
  404d68:	4461      	add	r1, ip
  404d6a:	1900      	adds	r0, r0, r4
  404d6c:	eb41 71e4 	adc.w	r1, r1, r4, asr #31
  404d70:	f04f 0e01 	mov.w	lr, #1
  404d74:	f815 4b01 	ldrb.w	r4, [r5], #1
  404d78:	eb06 0c04 	add.w	ip, r6, r4
  404d7c:	f89c c001 	ldrb.w	ip, [ip, #1]
  404d80:	f01c 0f04 	tst.w	ip, #4
  404d84:	d1db      	bne.n	404d3e <_strtoull_r+0x9e>
  404d86:	f01c 0c03 	ands.w	ip, ip, #3
  404d8a:	d00b      	beq.n	404da4 <_strtoull_r+0x104>
  404d8c:	f1bc 0f01 	cmp.w	ip, #1
  404d90:	bf14      	ite	ne
  404d92:	f04f 0c57 	movne.w	ip, #87	; 0x57
  404d96:	f04f 0c37 	moveq.w	ip, #55	; 0x37
  404d9a:	9f01      	ldr	r7, [sp, #4]
  404d9c:	ebcc 0404 	rsb	r4, ip, r4
  404da0:	42a7      	cmp	r7, r4
  404da2:	dcd0      	bgt.n	404d46 <_strtoull_r+0xa6>
  404da4:	f1be 0f00 	cmp.w	lr, #0
  404da8:	db16      	blt.n	404dd8 <_strtoull_r+0x138>
  404daa:	9b03      	ldr	r3, [sp, #12]
  404dac:	b113      	cbz	r3, 404db4 <_strtoull_r+0x114>
  404dae:	4240      	negs	r0, r0
  404db0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  404db4:	f1ba 0f00 	cmp.w	sl, #0
  404db8:	d005      	beq.n	404dc6 <_strtoull_r+0x126>
  404dba:	f1be 0f00 	cmp.w	lr, #0
  404dbe:	d115      	bne.n	404dec <_strtoull_r+0x14c>
  404dc0:	465d      	mov	r5, fp
  404dc2:	f8ca 5000 	str.w	r5, [sl]
  404dc6:	b007      	add	sp, #28
  404dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404dcc:	9f02      	ldr	r7, [sp, #8]
  404dce:	42bc      	cmp	r4, r7
  404dd0:	ddc4      	ble.n	404d5c <_strtoull_r+0xbc>
  404dd2:	f04f 3eff 	mov.w	lr, #4294967295
  404dd6:	e7cd      	b.n	404d74 <_strtoull_r+0xd4>
  404dd8:	9a04      	ldr	r2, [sp, #16]
  404dda:	2322      	movs	r3, #34	; 0x22
  404ddc:	6013      	str	r3, [r2, #0]
  404dde:	f04f 30ff 	mov.w	r0, #4294967295
  404de2:	f04f 31ff 	mov.w	r1, #4294967295
  404de6:	f1ba 0f00 	cmp.w	sl, #0
  404dea:	d0ec      	beq.n	404dc6 <_strtoull_r+0x126>
  404dec:	3d01      	subs	r5, #1
  404dee:	e7e8      	b.n	404dc2 <_strtoull_r+0x122>
  404df0:	2301      	movs	r3, #1
  404df2:	1c95      	adds	r5, r2, #2
  404df4:	7854      	ldrb	r4, [r2, #1]
  404df6:	9303      	str	r3, [sp, #12]
  404df8:	e772      	b.n	404ce0 <_strtoull_r+0x40>
  404dfa:	782b      	ldrb	r3, [r5, #0]
  404dfc:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404e00:	2b58      	cmp	r3, #88	; 0x58
  404e02:	d012      	beq.n	404e2a <_strtoull_r+0x18a>
  404e04:	2307      	movs	r3, #7
  404e06:	9302      	str	r3, [sp, #8]
  404e08:	f04f 32ff 	mov.w	r2, #4294967295
  404e0c:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
  404e10:	f04f 0808 	mov.w	r8, #8
  404e14:	f04f 0900 	mov.w	r9, #0
  404e18:	2708      	movs	r7, #8
  404e1a:	e78a      	b.n	404d32 <_strtoull_r+0x92>
  404e1c:	2c30      	cmp	r4, #48	; 0x30
  404e1e:	d114      	bne.n	404e4a <_strtoull_r+0x1aa>
  404e20:	782b      	ldrb	r3, [r5, #0]
  404e22:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404e26:	2b58      	cmp	r3, #88	; 0x58
  404e28:	d10f      	bne.n	404e4a <_strtoull_r+0x1aa>
  404e2a:	230f      	movs	r3, #15
  404e2c:	9302      	str	r3, [sp, #8]
  404e2e:	f04f 33ff 	mov.w	r3, #4294967295
  404e32:	9301      	str	r3, [sp, #4]
  404e34:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
  404e38:	786c      	ldrb	r4, [r5, #1]
  404e3a:	9305      	str	r3, [sp, #20]
  404e3c:	3502      	adds	r5, #2
  404e3e:	f04f 0810 	mov.w	r8, #16
  404e42:	f04f 0900 	mov.w	r9, #0
  404e46:	2710      	movs	r7, #16
  404e48:	e764      	b.n	404d14 <_strtoull_r+0x74>
  404e4a:	230f      	movs	r3, #15
  404e4c:	9302      	str	r3, [sp, #8]
  404e4e:	f04f 32ff 	mov.w	r2, #4294967295
  404e52:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
  404e56:	f04f 0810 	mov.w	r8, #16
  404e5a:	f04f 0900 	mov.w	r9, #0
  404e5e:	e768      	b.n	404d32 <_strtoull_r+0x92>
  404e60:	2000084c 	.word	0x2000084c
  404e64:	19999999 	.word	0x19999999

00404e68 <__submore>:
  404e68:	f101 0340 	add.w	r3, r1, #64	; 0x40
  404e6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404e70:	460c      	mov	r4, r1
  404e72:	6b09      	ldr	r1, [r1, #48]	; 0x30
  404e74:	4299      	cmp	r1, r3
  404e76:	d014      	beq.n	404ea2 <__submore+0x3a>
  404e78:	6b66      	ldr	r6, [r4, #52]	; 0x34
  404e7a:	0077      	lsls	r7, r6, #1
  404e7c:	463a      	mov	r2, r7
  404e7e:	f7fc fcdf 	bl	401840 <_realloc_r>
  404e82:	4605      	mov	r5, r0
  404e84:	b340      	cbz	r0, 404ed8 <__submore+0x70>
  404e86:	eb00 0806 	add.w	r8, r0, r6
  404e8a:	4632      	mov	r2, r6
  404e8c:	4640      	mov	r0, r8
  404e8e:	4629      	mov	r1, r5
  404e90:	f7fc fb4a 	bl	401528 <memcpy>
  404e94:	f8c4 8000 	str.w	r8, [r4]
  404e98:	6325      	str	r5, [r4, #48]	; 0x30
  404e9a:	6367      	str	r7, [r4, #52]	; 0x34
  404e9c:	2000      	movs	r0, #0
  404e9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ea2:	f44f 6180 	mov.w	r1, #1024	; 0x400
  404ea6:	f7fc f887 	bl	400fb8 <_malloc_r>
  404eaa:	b1a8      	cbz	r0, 404ed8 <__submore+0x70>
  404eac:	f894 3042 	ldrb.w	r3, [r4, #66]	; 0x42
  404eb0:	6320      	str	r0, [r4, #48]	; 0x30
  404eb2:	f44f 6280 	mov.w	r2, #1024	; 0x400
  404eb6:	6362      	str	r2, [r4, #52]	; 0x34
  404eb8:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
  404ebc:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
  404ec0:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
  404ec4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  404ec8:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
  404ecc:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
  404ed0:	6020      	str	r0, [r4, #0]
  404ed2:	2000      	movs	r0, #0
  404ed4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ed8:	f04f 30ff 	mov.w	r0, #4294967295
  404edc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00404ee0 <_ungetc_r>:
  404ee0:	f1b1 3fff 	cmp.w	r1, #4294967295
  404ee4:	d068      	beq.n	404fb8 <_ungetc_r+0xd8>
  404ee6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404ee8:	4607      	mov	r7, r0
  404eea:	4614      	mov	r4, r2
  404eec:	460e      	mov	r6, r1
  404eee:	b110      	cbz	r0, 404ef6 <_ungetc_r+0x16>
  404ef0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404ef2:	2b00      	cmp	r3, #0
  404ef4:	d030      	beq.n	404f58 <_ungetc_r+0x78>
  404ef6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404efa:	049d      	lsls	r5, r3, #18
  404efc:	d405      	bmi.n	404f0a <_ungetc_r+0x2a>
  404efe:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404f00:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  404f04:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404f08:	6662      	str	r2, [r4, #100]	; 0x64
  404f0a:	f023 0320 	bic.w	r3, r3, #32
  404f0e:	b29a      	uxth	r2, r3
  404f10:	0750      	lsls	r0, r2, #29
  404f12:	81a3      	strh	r3, [r4, #12]
  404f14:	d406      	bmi.n	404f24 <_ungetc_r+0x44>
  404f16:	06d1      	lsls	r1, r2, #27
  404f18:	d51b      	bpl.n	404f52 <_ungetc_r+0x72>
  404f1a:	0712      	lsls	r2, r2, #28
  404f1c:	d438      	bmi.n	404f90 <_ungetc_r+0xb0>
  404f1e:	f043 0304 	orr.w	r3, r3, #4
  404f22:	81a3      	strh	r3, [r4, #12]
  404f24:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404f26:	b2f5      	uxtb	r5, r6
  404f28:	b1cb      	cbz	r3, 404f5e <_ungetc_r+0x7e>
  404f2a:	6862      	ldr	r2, [r4, #4]
  404f2c:	6b63      	ldr	r3, [r4, #52]	; 0x34
  404f2e:	429a      	cmp	r2, r3
  404f30:	da09      	bge.n	404f46 <_ungetc_r+0x66>
  404f32:	6823      	ldr	r3, [r4, #0]
  404f34:	1e5a      	subs	r2, r3, #1
  404f36:	6022      	str	r2, [r4, #0]
  404f38:	f803 6c01 	strb.w	r6, [r3, #-1]
  404f3c:	6863      	ldr	r3, [r4, #4]
  404f3e:	3301      	adds	r3, #1
  404f40:	4628      	mov	r0, r5
  404f42:	6063      	str	r3, [r4, #4]
  404f44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404f46:	4638      	mov	r0, r7
  404f48:	4621      	mov	r1, r4
  404f4a:	f7ff ff8d 	bl	404e68 <__submore>
  404f4e:	2800      	cmp	r0, #0
  404f50:	d0ef      	beq.n	404f32 <_ungetc_r+0x52>
  404f52:	f04f 30ff 	mov.w	r0, #4294967295
  404f56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404f58:	f7fe fe14 	bl	403b84 <__sinit>
  404f5c:	e7cb      	b.n	404ef6 <_ungetc_r+0x16>
  404f5e:	6922      	ldr	r2, [r4, #16]
  404f60:	6823      	ldr	r3, [r4, #0]
  404f62:	b12a      	cbz	r2, 404f70 <_ungetc_r+0x90>
  404f64:	429a      	cmp	r2, r3
  404f66:	d203      	bcs.n	404f70 <_ungetc_r+0x90>
  404f68:	f813 2c01 	ldrb.w	r2, [r3, #-1]
  404f6c:	4295      	cmp	r5, r2
  404f6e:	d01c      	beq.n	404faa <_ungetc_r+0xca>
  404f70:	63a3      	str	r3, [r4, #56]	; 0x38
  404f72:	4623      	mov	r3, r4
  404f74:	6860      	ldr	r0, [r4, #4]
  404f76:	63e0      	str	r0, [r4, #60]	; 0x3c
  404f78:	f104 0140 	add.w	r1, r4, #64	; 0x40
  404f7c:	2203      	movs	r2, #3
  404f7e:	6362      	str	r2, [r4, #52]	; 0x34
  404f80:	6321      	str	r1, [r4, #48]	; 0x30
  404f82:	f803 6f42 	strb.w	r6, [r3, #66]!
  404f86:	2201      	movs	r2, #1
  404f88:	4628      	mov	r0, r5
  404f8a:	6023      	str	r3, [r4, #0]
  404f8c:	6062      	str	r2, [r4, #4]
  404f8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404f90:	4621      	mov	r1, r4
  404f92:	4638      	mov	r0, r7
  404f94:	f7fe fd50 	bl	403a38 <_fflush_r>
  404f98:	2800      	cmp	r0, #0
  404f9a:	d1da      	bne.n	404f52 <_ungetc_r+0x72>
  404f9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404fa0:	60a0      	str	r0, [r4, #8]
  404fa2:	61a0      	str	r0, [r4, #24]
  404fa4:	f023 0308 	bic.w	r3, r3, #8
  404fa8:	e7b9      	b.n	404f1e <_ungetc_r+0x3e>
  404faa:	6862      	ldr	r2, [r4, #4]
  404fac:	3b01      	subs	r3, #1
  404fae:	3201      	adds	r2, #1
  404fb0:	6023      	str	r3, [r4, #0]
  404fb2:	4628      	mov	r0, r5
  404fb4:	6062      	str	r2, [r4, #4]
  404fb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404fb8:	f04f 30ff 	mov.w	r0, #4294967295
  404fbc:	4770      	bx	lr
  404fbe:	bf00      	nop

00404fc0 <__swbuf_r>:
  404fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404fc2:	460e      	mov	r6, r1
  404fc4:	4614      	mov	r4, r2
  404fc6:	4607      	mov	r7, r0
  404fc8:	b110      	cbz	r0, 404fd0 <__swbuf_r+0x10>
  404fca:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404fcc:	2b00      	cmp	r3, #0
  404fce:	d04a      	beq.n	405066 <__swbuf_r+0xa6>
  404fd0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404fd4:	69a3      	ldr	r3, [r4, #24]
  404fd6:	60a3      	str	r3, [r4, #8]
  404fd8:	b291      	uxth	r1, r2
  404fda:	0708      	lsls	r0, r1, #28
  404fdc:	d538      	bpl.n	405050 <__swbuf_r+0x90>
  404fde:	6923      	ldr	r3, [r4, #16]
  404fe0:	2b00      	cmp	r3, #0
  404fe2:	d035      	beq.n	405050 <__swbuf_r+0x90>
  404fe4:	0489      	lsls	r1, r1, #18
  404fe6:	b2f5      	uxtb	r5, r6
  404fe8:	d515      	bpl.n	405016 <__swbuf_r+0x56>
  404fea:	6822      	ldr	r2, [r4, #0]
  404fec:	6961      	ldr	r1, [r4, #20]
  404fee:	1ad3      	subs	r3, r2, r3
  404ff0:	428b      	cmp	r3, r1
  404ff2:	da1c      	bge.n	40502e <__swbuf_r+0x6e>
  404ff4:	3301      	adds	r3, #1
  404ff6:	68a1      	ldr	r1, [r4, #8]
  404ff8:	1c50      	adds	r0, r2, #1
  404ffa:	3901      	subs	r1, #1
  404ffc:	60a1      	str	r1, [r4, #8]
  404ffe:	6020      	str	r0, [r4, #0]
  405000:	7016      	strb	r6, [r2, #0]
  405002:	6962      	ldr	r2, [r4, #20]
  405004:	429a      	cmp	r2, r3
  405006:	d01a      	beq.n	40503e <__swbuf_r+0x7e>
  405008:	89a3      	ldrh	r3, [r4, #12]
  40500a:	07db      	lsls	r3, r3, #31
  40500c:	d501      	bpl.n	405012 <__swbuf_r+0x52>
  40500e:	2d0a      	cmp	r5, #10
  405010:	d015      	beq.n	40503e <__swbuf_r+0x7e>
  405012:	4628      	mov	r0, r5
  405014:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405016:	6e61      	ldr	r1, [r4, #100]	; 0x64
  405018:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40501c:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  405020:	81a2      	strh	r2, [r4, #12]
  405022:	6822      	ldr	r2, [r4, #0]
  405024:	6661      	str	r1, [r4, #100]	; 0x64
  405026:	6961      	ldr	r1, [r4, #20]
  405028:	1ad3      	subs	r3, r2, r3
  40502a:	428b      	cmp	r3, r1
  40502c:	dbe2      	blt.n	404ff4 <__swbuf_r+0x34>
  40502e:	4621      	mov	r1, r4
  405030:	4638      	mov	r0, r7
  405032:	f7fe fd01 	bl	403a38 <_fflush_r>
  405036:	b940      	cbnz	r0, 40504a <__swbuf_r+0x8a>
  405038:	6822      	ldr	r2, [r4, #0]
  40503a:	2301      	movs	r3, #1
  40503c:	e7db      	b.n	404ff6 <__swbuf_r+0x36>
  40503e:	4621      	mov	r1, r4
  405040:	4638      	mov	r0, r7
  405042:	f7fe fcf9 	bl	403a38 <_fflush_r>
  405046:	2800      	cmp	r0, #0
  405048:	d0e3      	beq.n	405012 <__swbuf_r+0x52>
  40504a:	f04f 30ff 	mov.w	r0, #4294967295
  40504e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405050:	4621      	mov	r1, r4
  405052:	4638      	mov	r0, r7
  405054:	f7fe fbd8 	bl	403808 <__swsetup_r>
  405058:	2800      	cmp	r0, #0
  40505a:	d1f6      	bne.n	40504a <__swbuf_r+0x8a>
  40505c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  405060:	6923      	ldr	r3, [r4, #16]
  405062:	b291      	uxth	r1, r2
  405064:	e7be      	b.n	404fe4 <__swbuf_r+0x24>
  405066:	f7fe fd8d 	bl	403b84 <__sinit>
  40506a:	e7b1      	b.n	404fd0 <__swbuf_r+0x10>

0040506c <_wcrtomb_r>:
  40506c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405070:	4605      	mov	r5, r0
  405072:	b086      	sub	sp, #24
  405074:	461e      	mov	r6, r3
  405076:	460c      	mov	r4, r1
  405078:	b1a1      	cbz	r1, 4050a4 <_wcrtomb_r+0x38>
  40507a:	4b10      	ldr	r3, [pc, #64]	; (4050bc <_wcrtomb_r+0x50>)
  40507c:	4617      	mov	r7, r2
  40507e:	f8d3 8000 	ldr.w	r8, [r3]
  405082:	f7ff f9df 	bl	404444 <__locale_charset>
  405086:	9600      	str	r6, [sp, #0]
  405088:	4603      	mov	r3, r0
  40508a:	463a      	mov	r2, r7
  40508c:	4621      	mov	r1, r4
  40508e:	4628      	mov	r0, r5
  405090:	47c0      	blx	r8
  405092:	1c43      	adds	r3, r0, #1
  405094:	d103      	bne.n	40509e <_wcrtomb_r+0x32>
  405096:	2200      	movs	r2, #0
  405098:	238a      	movs	r3, #138	; 0x8a
  40509a:	6032      	str	r2, [r6, #0]
  40509c:	602b      	str	r3, [r5, #0]
  40509e:	b006      	add	sp, #24
  4050a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4050a4:	4b05      	ldr	r3, [pc, #20]	; (4050bc <_wcrtomb_r+0x50>)
  4050a6:	681f      	ldr	r7, [r3, #0]
  4050a8:	f7ff f9cc 	bl	404444 <__locale_charset>
  4050ac:	9600      	str	r6, [sp, #0]
  4050ae:	4603      	mov	r3, r0
  4050b0:	4622      	mov	r2, r4
  4050b2:	a903      	add	r1, sp, #12
  4050b4:	4628      	mov	r0, r5
  4050b6:	47b8      	blx	r7
  4050b8:	e7eb      	b.n	405092 <_wcrtomb_r+0x26>
  4050ba:	bf00      	nop
  4050bc:	20000878 	.word	0x20000878

004050c0 <__ascii_wctomb>:
  4050c0:	b121      	cbz	r1, 4050cc <__ascii_wctomb+0xc>
  4050c2:	2aff      	cmp	r2, #255	; 0xff
  4050c4:	d804      	bhi.n	4050d0 <__ascii_wctomb+0x10>
  4050c6:	700a      	strb	r2, [r1, #0]
  4050c8:	2001      	movs	r0, #1
  4050ca:	4770      	bx	lr
  4050cc:	4608      	mov	r0, r1
  4050ce:	4770      	bx	lr
  4050d0:	238a      	movs	r3, #138	; 0x8a
  4050d2:	6003      	str	r3, [r0, #0]
  4050d4:	f04f 30ff 	mov.w	r0, #4294967295
  4050d8:	4770      	bx	lr
  4050da:	bf00      	nop

004050dc <_write_r>:
  4050dc:	b570      	push	{r4, r5, r6, lr}
  4050de:	460d      	mov	r5, r1
  4050e0:	4c08      	ldr	r4, [pc, #32]	; (405104 <_write_r+0x28>)
  4050e2:	4611      	mov	r1, r2
  4050e4:	4606      	mov	r6, r0
  4050e6:	461a      	mov	r2, r3
  4050e8:	4628      	mov	r0, r5
  4050ea:	2300      	movs	r3, #0
  4050ec:	6023      	str	r3, [r4, #0]
  4050ee:	f7fb f9fb 	bl	4004e8 <_write>
  4050f2:	1c43      	adds	r3, r0, #1
  4050f4:	d000      	beq.n	4050f8 <_write_r+0x1c>
  4050f6:	bd70      	pop	{r4, r5, r6, pc}
  4050f8:	6823      	ldr	r3, [r4, #0]
  4050fa:	2b00      	cmp	r3, #0
  4050fc:	d0fb      	beq.n	4050f6 <_write_r+0x1a>
  4050fe:	6033      	str	r3, [r6, #0]
  405100:	bd70      	pop	{r4, r5, r6, pc}
  405102:	bf00      	nop
  405104:	20000990 	.word	0x20000990

00405108 <__register_exitproc>:
  405108:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40510c:	4c25      	ldr	r4, [pc, #148]	; (4051a4 <__register_exitproc+0x9c>)
  40510e:	6825      	ldr	r5, [r4, #0]
  405110:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  405114:	4606      	mov	r6, r0
  405116:	4688      	mov	r8, r1
  405118:	4692      	mov	sl, r2
  40511a:	4699      	mov	r9, r3
  40511c:	b3c4      	cbz	r4, 405190 <__register_exitproc+0x88>
  40511e:	6860      	ldr	r0, [r4, #4]
  405120:	281f      	cmp	r0, #31
  405122:	dc17      	bgt.n	405154 <__register_exitproc+0x4c>
  405124:	1c43      	adds	r3, r0, #1
  405126:	b176      	cbz	r6, 405146 <__register_exitproc+0x3e>
  405128:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  40512c:	2201      	movs	r2, #1
  40512e:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  405132:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  405136:	4082      	lsls	r2, r0
  405138:	4311      	orrs	r1, r2
  40513a:	2e02      	cmp	r6, #2
  40513c:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  405140:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  405144:	d01e      	beq.n	405184 <__register_exitproc+0x7c>
  405146:	3002      	adds	r0, #2
  405148:	6063      	str	r3, [r4, #4]
  40514a:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  40514e:	2000      	movs	r0, #0
  405150:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405154:	4b14      	ldr	r3, [pc, #80]	; (4051a8 <__register_exitproc+0xa0>)
  405156:	b303      	cbz	r3, 40519a <__register_exitproc+0x92>
  405158:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40515c:	f7fb ff24 	bl	400fa8 <malloc>
  405160:	4604      	mov	r4, r0
  405162:	b1d0      	cbz	r0, 40519a <__register_exitproc+0x92>
  405164:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  405168:	2700      	movs	r7, #0
  40516a:	e880 0088 	stmia.w	r0, {r3, r7}
  40516e:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  405172:	4638      	mov	r0, r7
  405174:	2301      	movs	r3, #1
  405176:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  40517a:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  40517e:	2e00      	cmp	r6, #0
  405180:	d0e1      	beq.n	405146 <__register_exitproc+0x3e>
  405182:	e7d1      	b.n	405128 <__register_exitproc+0x20>
  405184:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  405188:	430a      	orrs	r2, r1
  40518a:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  40518e:	e7da      	b.n	405146 <__register_exitproc+0x3e>
  405190:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  405194:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  405198:	e7c1      	b.n	40511e <__register_exitproc+0x16>
  40519a:	f04f 30ff 	mov.w	r0, #4294967295
  40519e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4051a2:	bf00      	nop
  4051a4:	00405704 	.word	0x00405704
  4051a8:	00400fa9 	.word	0x00400fa9

004051ac <_close_r>:
  4051ac:	b538      	push	{r3, r4, r5, lr}
  4051ae:	4c07      	ldr	r4, [pc, #28]	; (4051cc <_close_r+0x20>)
  4051b0:	2300      	movs	r3, #0
  4051b2:	4605      	mov	r5, r0
  4051b4:	4608      	mov	r0, r1
  4051b6:	6023      	str	r3, [r4, #0]
  4051b8:	f7fb fc62 	bl	400a80 <_close>
  4051bc:	1c43      	adds	r3, r0, #1
  4051be:	d000      	beq.n	4051c2 <_close_r+0x16>
  4051c0:	bd38      	pop	{r3, r4, r5, pc}
  4051c2:	6823      	ldr	r3, [r4, #0]
  4051c4:	2b00      	cmp	r3, #0
  4051c6:	d0fb      	beq.n	4051c0 <_close_r+0x14>
  4051c8:	602b      	str	r3, [r5, #0]
  4051ca:	bd38      	pop	{r3, r4, r5, pc}
  4051cc:	20000990 	.word	0x20000990

004051d0 <_fclose_r>:
  4051d0:	2900      	cmp	r1, #0
  4051d2:	d03d      	beq.n	405250 <_fclose_r+0x80>
  4051d4:	b570      	push	{r4, r5, r6, lr}
  4051d6:	4605      	mov	r5, r0
  4051d8:	460c      	mov	r4, r1
  4051da:	b108      	cbz	r0, 4051e0 <_fclose_r+0x10>
  4051dc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4051de:	b37b      	cbz	r3, 405240 <_fclose_r+0x70>
  4051e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4051e4:	b90b      	cbnz	r3, 4051ea <_fclose_r+0x1a>
  4051e6:	2000      	movs	r0, #0
  4051e8:	bd70      	pop	{r4, r5, r6, pc}
  4051ea:	4621      	mov	r1, r4
  4051ec:	4628      	mov	r0, r5
  4051ee:	f7fe fb7f 	bl	4038f0 <__sflush_r>
  4051f2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  4051f4:	4606      	mov	r6, r0
  4051f6:	b133      	cbz	r3, 405206 <_fclose_r+0x36>
  4051f8:	69e1      	ldr	r1, [r4, #28]
  4051fa:	4628      	mov	r0, r5
  4051fc:	4798      	blx	r3
  4051fe:	2800      	cmp	r0, #0
  405200:	bfb8      	it	lt
  405202:	f04f 36ff 	movlt.w	r6, #4294967295
  405206:	89a3      	ldrh	r3, [r4, #12]
  405208:	061b      	lsls	r3, r3, #24
  40520a:	d41c      	bmi.n	405246 <_fclose_r+0x76>
  40520c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40520e:	b141      	cbz	r1, 405222 <_fclose_r+0x52>
  405210:	f104 0340 	add.w	r3, r4, #64	; 0x40
  405214:	4299      	cmp	r1, r3
  405216:	d002      	beq.n	40521e <_fclose_r+0x4e>
  405218:	4628      	mov	r0, r5
  40521a:	f7fe fe4b 	bl	403eb4 <_free_r>
  40521e:	2300      	movs	r3, #0
  405220:	6323      	str	r3, [r4, #48]	; 0x30
  405222:	6c61      	ldr	r1, [r4, #68]	; 0x44
  405224:	b121      	cbz	r1, 405230 <_fclose_r+0x60>
  405226:	4628      	mov	r0, r5
  405228:	f7fe fe44 	bl	403eb4 <_free_r>
  40522c:	2300      	movs	r3, #0
  40522e:	6463      	str	r3, [r4, #68]	; 0x44
  405230:	f7fe fcae 	bl	403b90 <__sfp_lock_acquire>
  405234:	2300      	movs	r3, #0
  405236:	81a3      	strh	r3, [r4, #12]
  405238:	f7fe fcac 	bl	403b94 <__sfp_lock_release>
  40523c:	4630      	mov	r0, r6
  40523e:	bd70      	pop	{r4, r5, r6, pc}
  405240:	f7fe fca0 	bl	403b84 <__sinit>
  405244:	e7cc      	b.n	4051e0 <_fclose_r+0x10>
  405246:	6921      	ldr	r1, [r4, #16]
  405248:	4628      	mov	r0, r5
  40524a:	f7fe fe33 	bl	403eb4 <_free_r>
  40524e:	e7dd      	b.n	40520c <_fclose_r+0x3c>
  405250:	2000      	movs	r0, #0
  405252:	4770      	bx	lr

00405254 <_fstat_r>:
  405254:	b538      	push	{r3, r4, r5, lr}
  405256:	460b      	mov	r3, r1
  405258:	4c07      	ldr	r4, [pc, #28]	; (405278 <_fstat_r+0x24>)
  40525a:	4605      	mov	r5, r0
  40525c:	4611      	mov	r1, r2
  40525e:	4618      	mov	r0, r3
  405260:	2300      	movs	r3, #0
  405262:	6023      	str	r3, [r4, #0]
  405264:	f7fb fc10 	bl	400a88 <_fstat>
  405268:	1c43      	adds	r3, r0, #1
  40526a:	d000      	beq.n	40526e <_fstat_r+0x1a>
  40526c:	bd38      	pop	{r3, r4, r5, pc}
  40526e:	6823      	ldr	r3, [r4, #0]
  405270:	2b00      	cmp	r3, #0
  405272:	d0fb      	beq.n	40526c <_fstat_r+0x18>
  405274:	602b      	str	r3, [r5, #0]
  405276:	bd38      	pop	{r3, r4, r5, pc}
  405278:	20000990 	.word	0x20000990

0040527c <_isatty_r>:
  40527c:	b538      	push	{r3, r4, r5, lr}
  40527e:	4c07      	ldr	r4, [pc, #28]	; (40529c <_isatty_r+0x20>)
  405280:	2300      	movs	r3, #0
  405282:	4605      	mov	r5, r0
  405284:	4608      	mov	r0, r1
  405286:	6023      	str	r3, [r4, #0]
  405288:	f7fb fc04 	bl	400a94 <_isatty>
  40528c:	1c43      	adds	r3, r0, #1
  40528e:	d000      	beq.n	405292 <_isatty_r+0x16>
  405290:	bd38      	pop	{r3, r4, r5, pc}
  405292:	6823      	ldr	r3, [r4, #0]
  405294:	2b00      	cmp	r3, #0
  405296:	d0fb      	beq.n	405290 <_isatty_r+0x14>
  405298:	602b      	str	r3, [r5, #0]
  40529a:	bd38      	pop	{r3, r4, r5, pc}
  40529c:	20000990 	.word	0x20000990

004052a0 <_lseek_r>:
  4052a0:	b570      	push	{r4, r5, r6, lr}
  4052a2:	460d      	mov	r5, r1
  4052a4:	4c08      	ldr	r4, [pc, #32]	; (4052c8 <_lseek_r+0x28>)
  4052a6:	4611      	mov	r1, r2
  4052a8:	4606      	mov	r6, r0
  4052aa:	461a      	mov	r2, r3
  4052ac:	4628      	mov	r0, r5
  4052ae:	2300      	movs	r3, #0
  4052b0:	6023      	str	r3, [r4, #0]
  4052b2:	f7fb fbf1 	bl	400a98 <_lseek>
  4052b6:	1c43      	adds	r3, r0, #1
  4052b8:	d000      	beq.n	4052bc <_lseek_r+0x1c>
  4052ba:	bd70      	pop	{r4, r5, r6, pc}
  4052bc:	6823      	ldr	r3, [r4, #0]
  4052be:	2b00      	cmp	r3, #0
  4052c0:	d0fb      	beq.n	4052ba <_lseek_r+0x1a>
  4052c2:	6033      	str	r3, [r6, #0]
  4052c4:	bd70      	pop	{r4, r5, r6, pc}
  4052c6:	bf00      	nop
  4052c8:	20000990 	.word	0x20000990

004052cc <_read_r>:
  4052cc:	b570      	push	{r4, r5, r6, lr}
  4052ce:	460d      	mov	r5, r1
  4052d0:	4c08      	ldr	r4, [pc, #32]	; (4052f4 <_read_r+0x28>)
  4052d2:	4611      	mov	r1, r2
  4052d4:	4606      	mov	r6, r0
  4052d6:	461a      	mov	r2, r3
  4052d8:	4628      	mov	r0, r5
  4052da:	2300      	movs	r3, #0
  4052dc:	6023      	str	r3, [r4, #0]
  4052de:	f7fb f8e5 	bl	4004ac <_read>
  4052e2:	1c43      	adds	r3, r0, #1
  4052e4:	d000      	beq.n	4052e8 <_read_r+0x1c>
  4052e6:	bd70      	pop	{r4, r5, r6, pc}
  4052e8:	6823      	ldr	r3, [r4, #0]
  4052ea:	2b00      	cmp	r3, #0
  4052ec:	d0fb      	beq.n	4052e6 <_read_r+0x1a>
  4052ee:	6033      	str	r3, [r6, #0]
  4052f0:	bd70      	pop	{r4, r5, r6, pc}
  4052f2:	bf00      	nop
  4052f4:	20000990 	.word	0x20000990

004052f8 <__aeabi_uldivmod>:
  4052f8:	b953      	cbnz	r3, 405310 <__aeabi_uldivmod+0x18>
  4052fa:	b94a      	cbnz	r2, 405310 <__aeabi_uldivmod+0x18>
  4052fc:	2900      	cmp	r1, #0
  4052fe:	bf08      	it	eq
  405300:	2800      	cmpeq	r0, #0
  405302:	bf1c      	itt	ne
  405304:	f04f 31ff 	movne.w	r1, #4294967295
  405308:	f04f 30ff 	movne.w	r0, #4294967295
  40530c:	f000 b97e 	b.w	40560c <__aeabi_idiv0>
  405310:	f1ad 0c08 	sub.w	ip, sp, #8
  405314:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405318:	f000 f806 	bl	405328 <__udivmoddi4>
  40531c:	f8dd e004 	ldr.w	lr, [sp, #4]
  405320:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405324:	b004      	add	sp, #16
  405326:	4770      	bx	lr

00405328 <__udivmoddi4>:
  405328:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40532c:	468c      	mov	ip, r1
  40532e:	460e      	mov	r6, r1
  405330:	4604      	mov	r4, r0
  405332:	9d08      	ldr	r5, [sp, #32]
  405334:	2b00      	cmp	r3, #0
  405336:	d150      	bne.n	4053da <__udivmoddi4+0xb2>
  405338:	428a      	cmp	r2, r1
  40533a:	4617      	mov	r7, r2
  40533c:	d96c      	bls.n	405418 <__udivmoddi4+0xf0>
  40533e:	fab2 fe82 	clz	lr, r2
  405342:	f1be 0f00 	cmp.w	lr, #0
  405346:	d00b      	beq.n	405360 <__udivmoddi4+0x38>
  405348:	f1ce 0420 	rsb	r4, lr, #32
  40534c:	fa20 f404 	lsr.w	r4, r0, r4
  405350:	fa01 f60e 	lsl.w	r6, r1, lr
  405354:	ea44 0c06 	orr.w	ip, r4, r6
  405358:	fa02 f70e 	lsl.w	r7, r2, lr
  40535c:	fa00 f40e 	lsl.w	r4, r0, lr
  405360:	ea4f 4917 	mov.w	r9, r7, lsr #16
  405364:	0c22      	lsrs	r2, r4, #16
  405366:	fbbc f0f9 	udiv	r0, ip, r9
  40536a:	fa1f f887 	uxth.w	r8, r7
  40536e:	fb09 c610 	mls	r6, r9, r0, ip
  405372:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  405376:	fb00 f308 	mul.w	r3, r0, r8
  40537a:	42b3      	cmp	r3, r6
  40537c:	d909      	bls.n	405392 <__udivmoddi4+0x6a>
  40537e:	19f6      	adds	r6, r6, r7
  405380:	f100 32ff 	add.w	r2, r0, #4294967295
  405384:	f080 8122 	bcs.w	4055cc <__udivmoddi4+0x2a4>
  405388:	42b3      	cmp	r3, r6
  40538a:	f240 811f 	bls.w	4055cc <__udivmoddi4+0x2a4>
  40538e:	3802      	subs	r0, #2
  405390:	443e      	add	r6, r7
  405392:	1af6      	subs	r6, r6, r3
  405394:	b2a2      	uxth	r2, r4
  405396:	fbb6 f3f9 	udiv	r3, r6, r9
  40539a:	fb09 6613 	mls	r6, r9, r3, r6
  40539e:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  4053a2:	fb03 f808 	mul.w	r8, r3, r8
  4053a6:	45a0      	cmp	r8, r4
  4053a8:	d909      	bls.n	4053be <__udivmoddi4+0x96>
  4053aa:	19e4      	adds	r4, r4, r7
  4053ac:	f103 32ff 	add.w	r2, r3, #4294967295
  4053b0:	f080 810a 	bcs.w	4055c8 <__udivmoddi4+0x2a0>
  4053b4:	45a0      	cmp	r8, r4
  4053b6:	f240 8107 	bls.w	4055c8 <__udivmoddi4+0x2a0>
  4053ba:	3b02      	subs	r3, #2
  4053bc:	443c      	add	r4, r7
  4053be:	ebc8 0404 	rsb	r4, r8, r4
  4053c2:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  4053c6:	2100      	movs	r1, #0
  4053c8:	2d00      	cmp	r5, #0
  4053ca:	d062      	beq.n	405492 <__udivmoddi4+0x16a>
  4053cc:	fa24 f40e 	lsr.w	r4, r4, lr
  4053d0:	2300      	movs	r3, #0
  4053d2:	602c      	str	r4, [r5, #0]
  4053d4:	606b      	str	r3, [r5, #4]
  4053d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4053da:	428b      	cmp	r3, r1
  4053dc:	d907      	bls.n	4053ee <__udivmoddi4+0xc6>
  4053de:	2d00      	cmp	r5, #0
  4053e0:	d055      	beq.n	40548e <__udivmoddi4+0x166>
  4053e2:	2100      	movs	r1, #0
  4053e4:	e885 0041 	stmia.w	r5, {r0, r6}
  4053e8:	4608      	mov	r0, r1
  4053ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4053ee:	fab3 f183 	clz	r1, r3
  4053f2:	2900      	cmp	r1, #0
  4053f4:	f040 8090 	bne.w	405518 <__udivmoddi4+0x1f0>
  4053f8:	42b3      	cmp	r3, r6
  4053fa:	d302      	bcc.n	405402 <__udivmoddi4+0xda>
  4053fc:	4282      	cmp	r2, r0
  4053fe:	f200 80f8 	bhi.w	4055f2 <__udivmoddi4+0x2ca>
  405402:	1a84      	subs	r4, r0, r2
  405404:	eb66 0603 	sbc.w	r6, r6, r3
  405408:	2001      	movs	r0, #1
  40540a:	46b4      	mov	ip, r6
  40540c:	2d00      	cmp	r5, #0
  40540e:	d040      	beq.n	405492 <__udivmoddi4+0x16a>
  405410:	e885 1010 	stmia.w	r5, {r4, ip}
  405414:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405418:	b912      	cbnz	r2, 405420 <__udivmoddi4+0xf8>
  40541a:	2701      	movs	r7, #1
  40541c:	fbb7 f7f2 	udiv	r7, r7, r2
  405420:	fab7 fe87 	clz	lr, r7
  405424:	f1be 0f00 	cmp.w	lr, #0
  405428:	d135      	bne.n	405496 <__udivmoddi4+0x16e>
  40542a:	1bf3      	subs	r3, r6, r7
  40542c:	ea4f 4817 	mov.w	r8, r7, lsr #16
  405430:	fa1f fc87 	uxth.w	ip, r7
  405434:	2101      	movs	r1, #1
  405436:	fbb3 f0f8 	udiv	r0, r3, r8
  40543a:	0c22      	lsrs	r2, r4, #16
  40543c:	fb08 3610 	mls	r6, r8, r0, r3
  405440:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  405444:	fb0c f300 	mul.w	r3, ip, r0
  405448:	42b3      	cmp	r3, r6
  40544a:	d907      	bls.n	40545c <__udivmoddi4+0x134>
  40544c:	19f6      	adds	r6, r6, r7
  40544e:	f100 32ff 	add.w	r2, r0, #4294967295
  405452:	d202      	bcs.n	40545a <__udivmoddi4+0x132>
  405454:	42b3      	cmp	r3, r6
  405456:	f200 80ce 	bhi.w	4055f6 <__udivmoddi4+0x2ce>
  40545a:	4610      	mov	r0, r2
  40545c:	1af6      	subs	r6, r6, r3
  40545e:	b2a2      	uxth	r2, r4
  405460:	fbb6 f3f8 	udiv	r3, r6, r8
  405464:	fb08 6613 	mls	r6, r8, r3, r6
  405468:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  40546c:	fb0c fc03 	mul.w	ip, ip, r3
  405470:	45a4      	cmp	ip, r4
  405472:	d907      	bls.n	405484 <__udivmoddi4+0x15c>
  405474:	19e4      	adds	r4, r4, r7
  405476:	f103 32ff 	add.w	r2, r3, #4294967295
  40547a:	d202      	bcs.n	405482 <__udivmoddi4+0x15a>
  40547c:	45a4      	cmp	ip, r4
  40547e:	f200 80b5 	bhi.w	4055ec <__udivmoddi4+0x2c4>
  405482:	4613      	mov	r3, r2
  405484:	ebcc 0404 	rsb	r4, ip, r4
  405488:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  40548c:	e79c      	b.n	4053c8 <__udivmoddi4+0xa0>
  40548e:	4629      	mov	r1, r5
  405490:	4628      	mov	r0, r5
  405492:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405496:	f1ce 0120 	rsb	r1, lr, #32
  40549a:	fa06 f30e 	lsl.w	r3, r6, lr
  40549e:	fa07 f70e 	lsl.w	r7, r7, lr
  4054a2:	fa20 f901 	lsr.w	r9, r0, r1
  4054a6:	ea4f 4817 	mov.w	r8, r7, lsr #16
  4054aa:	40ce      	lsrs	r6, r1
  4054ac:	ea49 0903 	orr.w	r9, r9, r3
  4054b0:	fbb6 faf8 	udiv	sl, r6, r8
  4054b4:	ea4f 4419 	mov.w	r4, r9, lsr #16
  4054b8:	fb08 661a 	mls	r6, r8, sl, r6
  4054bc:	fa1f fc87 	uxth.w	ip, r7
  4054c0:	ea44 4306 	orr.w	r3, r4, r6, lsl #16
  4054c4:	fb0a f20c 	mul.w	r2, sl, ip
  4054c8:	429a      	cmp	r2, r3
  4054ca:	fa00 f40e 	lsl.w	r4, r0, lr
  4054ce:	d90a      	bls.n	4054e6 <__udivmoddi4+0x1be>
  4054d0:	19db      	adds	r3, r3, r7
  4054d2:	f10a 31ff 	add.w	r1, sl, #4294967295
  4054d6:	f080 8087 	bcs.w	4055e8 <__udivmoddi4+0x2c0>
  4054da:	429a      	cmp	r2, r3
  4054dc:	f240 8084 	bls.w	4055e8 <__udivmoddi4+0x2c0>
  4054e0:	f1aa 0a02 	sub.w	sl, sl, #2
  4054e4:	443b      	add	r3, r7
  4054e6:	1a9b      	subs	r3, r3, r2
  4054e8:	fa1f f989 	uxth.w	r9, r9
  4054ec:	fbb3 f1f8 	udiv	r1, r3, r8
  4054f0:	fb08 3311 	mls	r3, r8, r1, r3
  4054f4:	ea49 4303 	orr.w	r3, r9, r3, lsl #16
  4054f8:	fb01 f60c 	mul.w	r6, r1, ip
  4054fc:	429e      	cmp	r6, r3
  4054fe:	d907      	bls.n	405510 <__udivmoddi4+0x1e8>
  405500:	19db      	adds	r3, r3, r7
  405502:	f101 32ff 	add.w	r2, r1, #4294967295
  405506:	d26b      	bcs.n	4055e0 <__udivmoddi4+0x2b8>
  405508:	429e      	cmp	r6, r3
  40550a:	d969      	bls.n	4055e0 <__udivmoddi4+0x2b8>
  40550c:	3902      	subs	r1, #2
  40550e:	443b      	add	r3, r7
  405510:	1b9b      	subs	r3, r3, r6
  405512:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
  405516:	e78e      	b.n	405436 <__udivmoddi4+0x10e>
  405518:	f1c1 0e20 	rsb	lr, r1, #32
  40551c:	fa22 f40e 	lsr.w	r4, r2, lr
  405520:	408b      	lsls	r3, r1
  405522:	4323      	orrs	r3, r4
  405524:	fa20 f70e 	lsr.w	r7, r0, lr
  405528:	fa06 f401 	lsl.w	r4, r6, r1
  40552c:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  405530:	fa26 f60e 	lsr.w	r6, r6, lr
  405534:	433c      	orrs	r4, r7
  405536:	fbb6 f9fc 	udiv	r9, r6, ip
  40553a:	0c27      	lsrs	r7, r4, #16
  40553c:	fb0c 6619 	mls	r6, ip, r9, r6
  405540:	fa1f f883 	uxth.w	r8, r3
  405544:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
  405548:	fb09 f708 	mul.w	r7, r9, r8
  40554c:	42b7      	cmp	r7, r6
  40554e:	fa02 f201 	lsl.w	r2, r2, r1
  405552:	fa00 fa01 	lsl.w	sl, r0, r1
  405556:	d908      	bls.n	40556a <__udivmoddi4+0x242>
  405558:	18f6      	adds	r6, r6, r3
  40555a:	f109 30ff 	add.w	r0, r9, #4294967295
  40555e:	d241      	bcs.n	4055e4 <__udivmoddi4+0x2bc>
  405560:	42b7      	cmp	r7, r6
  405562:	d93f      	bls.n	4055e4 <__udivmoddi4+0x2bc>
  405564:	f1a9 0902 	sub.w	r9, r9, #2
  405568:	441e      	add	r6, r3
  40556a:	1bf6      	subs	r6, r6, r7
  40556c:	b2a0      	uxth	r0, r4
  40556e:	fbb6 f4fc 	udiv	r4, r6, ip
  405572:	fb0c 6614 	mls	r6, ip, r4, r6
  405576:	ea40 4706 	orr.w	r7, r0, r6, lsl #16
  40557a:	fb04 f808 	mul.w	r8, r4, r8
  40557e:	45b8      	cmp	r8, r7
  405580:	d907      	bls.n	405592 <__udivmoddi4+0x26a>
  405582:	18ff      	adds	r7, r7, r3
  405584:	f104 30ff 	add.w	r0, r4, #4294967295
  405588:	d228      	bcs.n	4055dc <__udivmoddi4+0x2b4>
  40558a:	45b8      	cmp	r8, r7
  40558c:	d926      	bls.n	4055dc <__udivmoddi4+0x2b4>
  40558e:	3c02      	subs	r4, #2
  405590:	441f      	add	r7, r3
  405592:	ea44 4009 	orr.w	r0, r4, r9, lsl #16
  405596:	ebc8 0707 	rsb	r7, r8, r7
  40559a:	fba0 8902 	umull	r8, r9, r0, r2
  40559e:	454f      	cmp	r7, r9
  4055a0:	4644      	mov	r4, r8
  4055a2:	464e      	mov	r6, r9
  4055a4:	d314      	bcc.n	4055d0 <__udivmoddi4+0x2a8>
  4055a6:	d029      	beq.n	4055fc <__udivmoddi4+0x2d4>
  4055a8:	b365      	cbz	r5, 405604 <__udivmoddi4+0x2dc>
  4055aa:	ebba 0304 	subs.w	r3, sl, r4
  4055ae:	eb67 0706 	sbc.w	r7, r7, r6
  4055b2:	fa07 fe0e 	lsl.w	lr, r7, lr
  4055b6:	40cb      	lsrs	r3, r1
  4055b8:	40cf      	lsrs	r7, r1
  4055ba:	ea4e 0303 	orr.w	r3, lr, r3
  4055be:	e885 0088 	stmia.w	r5, {r3, r7}
  4055c2:	2100      	movs	r1, #0
  4055c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4055c8:	4613      	mov	r3, r2
  4055ca:	e6f8      	b.n	4053be <__udivmoddi4+0x96>
  4055cc:	4610      	mov	r0, r2
  4055ce:	e6e0      	b.n	405392 <__udivmoddi4+0x6a>
  4055d0:	ebb8 0402 	subs.w	r4, r8, r2
  4055d4:	eb69 0603 	sbc.w	r6, r9, r3
  4055d8:	3801      	subs	r0, #1
  4055da:	e7e5      	b.n	4055a8 <__udivmoddi4+0x280>
  4055dc:	4604      	mov	r4, r0
  4055de:	e7d8      	b.n	405592 <__udivmoddi4+0x26a>
  4055e0:	4611      	mov	r1, r2
  4055e2:	e795      	b.n	405510 <__udivmoddi4+0x1e8>
  4055e4:	4681      	mov	r9, r0
  4055e6:	e7c0      	b.n	40556a <__udivmoddi4+0x242>
  4055e8:	468a      	mov	sl, r1
  4055ea:	e77c      	b.n	4054e6 <__udivmoddi4+0x1be>
  4055ec:	3b02      	subs	r3, #2
  4055ee:	443c      	add	r4, r7
  4055f0:	e748      	b.n	405484 <__udivmoddi4+0x15c>
  4055f2:	4608      	mov	r0, r1
  4055f4:	e70a      	b.n	40540c <__udivmoddi4+0xe4>
  4055f6:	3802      	subs	r0, #2
  4055f8:	443e      	add	r6, r7
  4055fa:	e72f      	b.n	40545c <__udivmoddi4+0x134>
  4055fc:	45c2      	cmp	sl, r8
  4055fe:	d3e7      	bcc.n	4055d0 <__udivmoddi4+0x2a8>
  405600:	463e      	mov	r6, r7
  405602:	e7d1      	b.n	4055a8 <__udivmoddi4+0x280>
  405604:	4629      	mov	r1, r5
  405606:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40560a:	bf00      	nop

0040560c <__aeabi_idiv0>:
  40560c:	4770      	bx	lr
  40560e:	bf00      	nop
  405610:	4f525245 	.word	0x4f525245
  405614:	6f203a52 	.word	0x6f203a52
  405618:	6f207475 	.word	0x6f207475
  40561c:	656d2066 	.word	0x656d2066
  405620:	79726f6d 	.word	0x79726f6d
  405624:	00000d0a 	.word	0x00000d0a
  405628:	4f525245 	.word	0x4f525245
  40562c:	72203a52 	.word	0x72203a52
  405630:	6574756f 	.word	0x6574756f
  405634:	746f6e20 	.word	0x746f6e20
  405638:	756f6620 	.word	0x756f6620
  40563c:	0d0a646e 	.word	0x0d0a646e
  405640:	00000000 	.word	0x00000000
  405644:	4f525245 	.word	0x4f525245
  405648:	25203a52 	.word	0x25203a52
  40564c:	000d0a64 	.word	0x000d0a64
  405650:	6b636150 	.word	0x6b636150
  405654:	73207465 	.word	0x73207465
  405658:	21746e65 	.word	0x21746e65
  40565c:	00000d0a 	.word	0x00000d0a
  405660:	414c414c 	.word	0x414c414c
  405664:	0d0a414c 	.word	0x0d0a414c
  405668:	00000000 	.word	0x00000000
  40566c:	20495053 	.word	0x20495053
  405670:	7373656d 	.word	0x7373656d
  405674:	20656761 	.word	0x20656761
  405678:	65636572 	.word	0x65636572
  40567c:	64657669 	.word	0x64657669
  405680:	00000d0a 	.word	0x00000d0a
  405684:	52202d2d 	.word	0x52202d2d
  405688:	48207761 	.word	0x48207761
  40568c:	20505454 	.word	0x20505454
  405690:	69736142 	.word	0x69736142
  405694:	78452063 	.word	0x78452063
  405698:	6c706d61 	.word	0x6c706d61
  40569c:	2d2d2065 	.word	0x2d2d2065
  4056a0:	2d2d0a0d 	.word	0x2d2d0a0d
  4056a4:	4d415320 	.word	0x4d415320
  4056a8:	582d4534 	.word	0x582d4534
  4056ac:	204f5250 	.word	0x204f5250
  4056b0:	0a0d2d2d 	.word	0x0a0d2d2d
  4056b4:	43202d2d 	.word	0x43202d2d
  4056b8:	69706d6f 	.word	0x69706d6f
  4056bc:	3a64656c 	.word	0x3a64656c
  4056c0:	63654420 	.word	0x63654420
  4056c4:	20322020 	.word	0x20322020
  4056c8:	36313032 	.word	0x36313032
  4056cc:	3a323220 	.word	0x3a323220
  4056d0:	303a3630 	.word	0x303a3630
  4056d4:	2d2d2038 	.word	0x2d2d2038
  4056d8:	00000a0d 	.word	0x00000a0d
  4056dc:	202d492d 	.word	0x202d492d
  4056e0:	74696e49 	.word	0x74696e49
  4056e4:	696c6169 	.word	0x696c6169
  4056e8:	5320657a 	.word	0x5320657a
  4056ec:	61204950 	.word	0x61204950
  4056f0:	6c732073 	.word	0x6c732073
  4056f4:	20657661 	.word	0x20657661
  4056f8:	0000000d 	.word	0x0000000d
  4056fc:	00006325 	.word	0x00006325
  405700:	00000043 	.word	0x00000043

00405704 <_global_impure_ptr>:
  405704:	20000010 0000000a                       ... ....

0040570c <zeroes.6993>:
  40570c:	30303030 30303030 30303030 30303030     0000000000000000
  40571c:	33323130 37363534 42413938 46454443     0123456789ABCDEF
  40572c:	00000000 33323130 37363534 62613938     ....0123456789ab
  40573c:	66656463 00000000 6c756e28 0000296c     cdef....(null)..

0040574c <blanks.6992>:
  40574c:	20202020 20202020 20202020 20202020                     

0040575c <basefix.6460>:
  40575c:	0001000a 00030002 00050004 00070006     ................
  40576c:	00090008 000b000a 000d000c 000f000e     ................
  40577c:	00000010                                ....

00405780 <_ctype_>:
  405780:	20202000 20202020 28282020 20282828     .         ((((( 
  405790:	20202020 20202020 20202020 20202020                     
  4057a0:	10108820 10101010 10101010 10101010      ...............
  4057b0:	04040410 04040404 10040404 10101010     ................
  4057c0:	41411010 41414141 01010101 01010101     ..AAAAAA........
  4057d0:	01010101 01010101 01010101 10101010     ................
  4057e0:	42421010 42424242 02020202 02020202     ..BBBBBB........
  4057f0:	02020202 02020202 02020202 10101010     ................
  405800:	00000020 00000000 00000000 00000000      ...............
	...

00405884 <_init>:
  405884:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405886:	bf00      	nop
  405888:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40588a:	bc08      	pop	{r3}
  40588c:	469e      	mov	lr, r3
  40588e:	4770      	bx	lr

00405890 <__init_array_start>:
  405890:	004038d1 	.word	0x004038d1

00405894 <__frame_dummy_init_array_entry>:
  405894:	0040011d                                ..@.

00405898 <_fini>:
  405898:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40589a:	bf00      	nop
  40589c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40589e:	bc08      	pop	{r3}
  4058a0:	469e      	mov	lr, r3
  4058a2:	4770      	bx	lr

004058a4 <__fini_array_start>:
  4058a4:	004000f9 	.word	0x004000f9
